image: tmaier/docker-compose:latest

variables:
  DOCKER_DRIVER: overlay2
  DEFAULT_RELEASE_VERSION: prerelease
  RELEASE_VERSION: prerelease
  REVIEW_PORT: 8888

services:
  - docker:dind

before_script:
  - docker load -i ui-components.tar || true

stages:
  - prepare
  - install
  - build & test
  - review
  - deploy

prepare-image:
  stage: prepare
  script:
    - docker build -t ui-components .
    - docker save -o ui-components.tar ui-components
  artifacts:
    paths:
      - ui-components.tar

install-package:
  stage: install
  script:
    - docker-compose run --rm gitlab-ci npm ci
  artifacts:
    paths:
      - node_modules/
      - npm-debug.log

ts-lint:
  stage: build & test
  script:
    - docker-compose run --rm gitlab-ci npm run lint

sass-lint:
  stage: build & test
  script:
    - docker-compose run --rm gitlab-ci npm run lint:sass

test:
  stage: build & test
  script:
    - docker-compose run --rm gitlab-ci npm run test:ci

codequality: &codequality
  stage: review
  variables:
    CODECLIMATE_FORMAT: json
  dependencies: []
  script:
    - docker pull codeclimate/codeclimate
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
      --env SOURCE_CODE="$PWD"
      --env CODECLIMATE_FORMAT="$CODECLIMATE_FORMAT"
      --volume "$PWD":/code
      --volume /var/run/docker.sock:/var/run/docker.sock
      quay.io/intellihr/codequality:latest /code
  artifacts:
    paths:
      - codeclimate.json

codequality-html:
  <<: *codequality
  variables:
    CODECLIMATE_FORMAT: html
  artifacts:
    paths:
      - .codeclimate/

build-bundle:
  stage: build & test
  script:
    - docker-compose run --rm gitlab-ci npm run build
  artifacts:
    paths:
      - es/
      - dist/
  only:
    refs:
      - master

build-styleguide:
  stage: build & test
  script:
    - docker-compose run --rm gitlab-ci /bin/sh -c
      "
        npm run styleguide:build &&
        rm -f Dockerfile && mv Dockerfile-review Dockerfile &&
        zip -r styleguide.zip styleguide/ nginx/ Dockerfile
      "
  artifacts:
    paths:
      - .elasticbeanstalk/
      - styleguide/
      - styleguide.zip

review:
  stage: review
  image: coxauto/aws-ebcli
  dependencies:
    - build-styleguide
  script:
    - ./docker/bin/deploy-review
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    url: http://45def85f-$CI_COMMIT_REF_SLUG.ap-southeast-2.elasticbeanstalk.com
    on_stop: stop_review
  only:
    - branches
  except:
    - master
  when: manual

stop_review:
  stage: review
  image: coxauto/aws-ebcli
  dependencies:
    - build-styleguide
  script:
    - eb terminate --force "$CI_COMMIT_REF_SLUG"
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    action: stop
  variables:
    GIT_STRATEGY: none
  when: manual

pages:
  stage: deploy
  dependencies:
    - build-styleguide
  script:
    - mkdir public
    - cp -r styleguide/* public
  artifacts:
    paths:
      - public
  only:
    refs:
      - master

deploy-npm:
  stage: deploy
  dependencies:
    - prepare-image
    - build-bundle
  script:
    - docker-compose run --rm gitlab-ci ./docker/bin/deploy-npm
  only:
    refs:
      - master
