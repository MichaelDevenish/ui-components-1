// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ParagraphSkeleton /> should render a paragraph skeleton 1`] = `
<ParagraphSkeleton
  showSkeleton={true}
>
  <div>
    <TextSkeleton
      showSkeleton={true}
      type="display-large"
      width={200}
    >
      <Styled(styled.span)
        textType="display-large"
        width="200px"
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bwzfXH",
                "isStatic": false,
                "lastClassName": "hcwCUb",
                "rules": Array [
                  "
  animation: ",
                  "
  ",
                  Keyframes {
                    "id": "sc-keyframes-jXsTbE",
                    "inject": [Function],
                    "name": "jXsTbE",
                    "rules": Array [
                      "@-webkit-keyframes jXsTbE{0%{opacity:.45;}to{opacity:.9;}}",
                      "@keyframes jXsTbE{0%{opacity:.45;}to{opacity:.9;}}",
                    ],
                    "toString": [Function],
                  },
                  " .8s linear infinite alternate;
",
                  ";
  backface-visibility: hidden;
  will-change: opacity;
  background-color: ",
                  "#E1E6EB",
                  ";
  border: 1px solid ",
                  "#E1E6EB",
                  ";
  display: inline-flex;
",
                  "
  border-radius: 4px;
  width: ",
                  [Function],
                  ";
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;

  ",
                  [Function],
                  "
",
                ],
              },
              "displayName": "Styled(styled.span)",
              "foldedComponentIds": Array [
                "sc-bdVaJa",
              ],
              "render": [Function],
              "styledComponentId": "sc-bwzfXH",
              "target": "span",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          textType="display-large"
          width="200px"
        >
          <span
            className="jcPfIW"
            width="200px"
          >
            ‌
          </span>
        </StyledComponent>
      </Styled(styled.span)>
    </TextSkeleton>
    <TextSkeleton
      showSkeleton={true}
      type="body"
    >
      <Styled(styled.span)
        textType="body"
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bwzfXH",
                "isStatic": false,
                "lastClassName": "hcwCUb",
                "rules": Array [
                  "
  animation: ",
                  "
  ",
                  Keyframes {
                    "id": "sc-keyframes-jXsTbE",
                    "inject": [Function],
                    "name": "jXsTbE",
                    "rules": Array [
                      "@-webkit-keyframes jXsTbE{0%{opacity:.45;}to{opacity:.9;}}",
                      "@keyframes jXsTbE{0%{opacity:.45;}to{opacity:.9;}}",
                    ],
                    "toString": [Function],
                  },
                  " .8s linear infinite alternate;
",
                  ";
  backface-visibility: hidden;
  will-change: opacity;
  background-color: ",
                  "#E1E6EB",
                  ";
  border: 1px solid ",
                  "#E1E6EB",
                  ";
  display: inline-flex;
",
                  "
  border-radius: 4px;
  width: ",
                  [Function],
                  ";
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;

  ",
                  [Function],
                  "
",
                ],
              },
              "displayName": "Styled(styled.span)",
              "foldedComponentIds": Array [
                "sc-bdVaJa",
              ],
              "render": [Function],
              "styledComponentId": "sc-bwzfXH",
              "target": "span",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          textType="body"
        >
          <span
            className="hLTnhI"
          >
            ‌
          </span>
        </StyledComponent>
      </Styled(styled.span)>
    </TextSkeleton>
    <TextSkeleton
      showSkeleton={true}
      type="body"
    >
      <Styled(styled.span)
        textType="body"
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bwzfXH",
                "isStatic": false,
                "lastClassName": "hcwCUb",
                "rules": Array [
                  "
  animation: ",
                  "
  ",
                  Keyframes {
                    "id": "sc-keyframes-jXsTbE",
                    "inject": [Function],
                    "name": "jXsTbE",
                    "rules": Array [
                      "@-webkit-keyframes jXsTbE{0%{opacity:.45;}to{opacity:.9;}}",
                      "@keyframes jXsTbE{0%{opacity:.45;}to{opacity:.9;}}",
                    ],
                    "toString": [Function],
                  },
                  " .8s linear infinite alternate;
",
                  ";
  backface-visibility: hidden;
  will-change: opacity;
  background-color: ",
                  "#E1E6EB",
                  ";
  border: 1px solid ",
                  "#E1E6EB",
                  ";
  display: inline-flex;
",
                  "
  border-radius: 4px;
  width: ",
                  [Function],
                  ";
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;

  ",
                  [Function],
                  "
",
                ],
              },
              "displayName": "Styled(styled.span)",
              "foldedComponentIds": Array [
                "sc-bdVaJa",
              ],
              "render": [Function],
              "styledComponentId": "sc-bwzfXH",
              "target": "span",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          textType="body"
        >
          <span
            className="hLTnhI"
          >
            ‌
          </span>
        </StyledComponent>
      </Styled(styled.span)>
    </TextSkeleton>
    <TextSkeleton
      showSkeleton={true}
      type="body"
    >
      <Styled(styled.span)
        textType="body"
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bwzfXH",
                "isStatic": false,
                "lastClassName": "hcwCUb",
                "rules": Array [
                  "
  animation: ",
                  "
  ",
                  Keyframes {
                    "id": "sc-keyframes-jXsTbE",
                    "inject": [Function],
                    "name": "jXsTbE",
                    "rules": Array [
                      "@-webkit-keyframes jXsTbE{0%{opacity:.45;}to{opacity:.9;}}",
                      "@keyframes jXsTbE{0%{opacity:.45;}to{opacity:.9;}}",
                    ],
                    "toString": [Function],
                  },
                  " .8s linear infinite alternate;
",
                  ";
  backface-visibility: hidden;
  will-change: opacity;
  background-color: ",
                  "#E1E6EB",
                  ";
  border: 1px solid ",
                  "#E1E6EB",
                  ";
  display: inline-flex;
",
                  "
  border-radius: 4px;
  width: ",
                  [Function],
                  ";
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;

  ",
                  [Function],
                  "
",
                ],
              },
              "displayName": "Styled(styled.span)",
              "foldedComponentIds": Array [
                "sc-bdVaJa",
              ],
              "render": [Function],
              "styledComponentId": "sc-bwzfXH",
              "target": "span",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          textType="body"
        >
          <span
            className="hLTnhI"
          >
            ‌
          </span>
        </StyledComponent>
      </Styled(styled.span)>
    </TextSkeleton>
    <TextSkeleton
      showSkeleton={true}
      type="body"
    >
      <Styled(styled.span)
        textType="body"
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bwzfXH",
                "isStatic": false,
                "lastClassName": "hcwCUb",
                "rules": Array [
                  "
  animation: ",
                  "
  ",
                  Keyframes {
                    "id": "sc-keyframes-jXsTbE",
                    "inject": [Function],
                    "name": "jXsTbE",
                    "rules": Array [
                      "@-webkit-keyframes jXsTbE{0%{opacity:.45;}to{opacity:.9;}}",
                      "@keyframes jXsTbE{0%{opacity:.45;}to{opacity:.9;}}",
                    ],
                    "toString": [Function],
                  },
                  " .8s linear infinite alternate;
",
                  ";
  backface-visibility: hidden;
  will-change: opacity;
  background-color: ",
                  "#E1E6EB",
                  ";
  border: 1px solid ",
                  "#E1E6EB",
                  ";
  display: inline-flex;
",
                  "
  border-radius: 4px;
  width: ",
                  [Function],
                  ";
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;

  ",
                  [Function],
                  "
",
                ],
              },
              "displayName": "Styled(styled.span)",
              "foldedComponentIds": Array [
                "sc-bdVaJa",
              ],
              "render": [Function],
              "styledComponentId": "sc-bwzfXH",
              "target": "span",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          textType="body"
        >
          <span
            className="hLTnhI"
          >
            ‌
          </span>
        </StyledComponent>
      </Styled(styled.span)>
    </TextSkeleton>
    <TextSkeleton
      showSkeleton={true}
      type="body"
      width="50%"
    >
      <Styled(styled.span)
        textType="body"
        width="50%"
      >
        <StyledComponent
          forwardedComponent={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bwzfXH",
                "isStatic": false,
                "lastClassName": "hcwCUb",
                "rules": Array [
                  "
  animation: ",
                  "
  ",
                  Keyframes {
                    "id": "sc-keyframes-jXsTbE",
                    "inject": [Function],
                    "name": "jXsTbE",
                    "rules": Array [
                      "@-webkit-keyframes jXsTbE{0%{opacity:.45;}to{opacity:.9;}}",
                      "@keyframes jXsTbE{0%{opacity:.45;}to{opacity:.9;}}",
                    ],
                    "toString": [Function],
                  },
                  " .8s linear infinite alternate;
",
                  ";
  backface-visibility: hidden;
  will-change: opacity;
  background-color: ",
                  "#E1E6EB",
                  ";
  border: 1px solid ",
                  "#E1E6EB",
                  ";
  display: inline-flex;
",
                  "
  border-radius: 4px;
  width: ",
                  [Function],
                  ";
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;

  ",
                  [Function],
                  "
",
                ],
              },
              "displayName": "Styled(styled.span)",
              "foldedComponentIds": Array [
                "sc-bdVaJa",
              ],
              "render": [Function],
              "styledComponentId": "sc-bwzfXH",
              "target": "span",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          forwardedRef={null}
          textType="body"
          width="50%"
        >
          <span
            className="hcwCUb"
            width="50%"
          >
            ‌
          </span>
        </StyledComponent>
      </Styled(styled.span)>
    </TextSkeleton>
  </div>
</ParagraphSkeleton>
`;
