// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ParagraphSkeleton /> should render a paragraph skeleton 1`] = `
.c0 {
  border-radius: 4px;
  width: 200px;
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  font-size: 36px;
  line-height: 44px;
  -webkit-letter-spacing: -.02em;
  -moz-letter-spacing: -.02em;
  -ms-letter-spacing: -.02em;
  letter-spacing: -.02em;
  -webkit-animation: jXsTbE .8s linear infinite alternate;
  animation: jXsTbE .8s linear infinite alternate;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  will-change: opacity;
  background-color: #E1E6EB;
  border: 1px solid #E1E6EB;
  display: block;
}

.c1 {
  border-radius: 4px;
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  font-size: 16px;
  line-height: 24px;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-animation: jXsTbE .8s linear infinite alternate;
  animation: jXsTbE .8s linear infinite alternate;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  will-change: opacity;
  background-color: #E1E6EB;
  border: 1px solid #E1E6EB;
  display: block;
}

.c2 {
  border-radius: 4px;
  width: 50%;
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  font-size: 16px;
  line-height: 24px;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  -webkit-animation: jXsTbE .8s linear infinite alternate;
  animation: jXsTbE .8s linear infinite alternate;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  will-change: opacity;
  background-color: #E1E6EB;
  border: 1px solid #E1E6EB;
  display: block;
}

<ParagraphSkeleton>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bwzfXH",
            "isStatic": false,
            "lastClassName": "cBcNyd",
            "rules": Array [
              "
  ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bwzfXH",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className=""
      >
        <TextSkeleton
          display="block"
          type="display-large"
          width={200}
        >
          <styled.span
            display="block"
            textType="display-large"
            width="200px"
          >
            <StyledComponent
              display="block"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": false,
                    "lastClassName": "c2",
                    "rules": Array [
                      "
  border-radius: 4px;
  width: ",
                      [Function],
                      ";
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  ",
                      [Function],
                      ";
  ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              textType="display-large"
              width="200px"
            >
              <span
                className="c0"
                display="block"
                width="200px"
              >
                ‌
              </span>
            </StyledComponent>
          </styled.span>
        </TextSkeleton>
        <TextSkeleton
          display="block"
          type="body"
        >
          <styled.span
            display="block"
            textType="body"
          >
            <StyledComponent
              display="block"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": false,
                    "lastClassName": "c2",
                    "rules": Array [
                      "
  border-radius: 4px;
  width: ",
                      [Function],
                      ";
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  ",
                      [Function],
                      ";
  ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              textType="body"
            >
              <span
                className="c1"
                display="block"
              >
                ‌
              </span>
            </StyledComponent>
          </styled.span>
        </TextSkeleton>
        <TextSkeleton
          display="block"
          type="body"
        >
          <styled.span
            display="block"
            textType="body"
          >
            <StyledComponent
              display="block"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": false,
                    "lastClassName": "c2",
                    "rules": Array [
                      "
  border-radius: 4px;
  width: ",
                      [Function],
                      ";
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  ",
                      [Function],
                      ";
  ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              textType="body"
            >
              <span
                className="c1"
                display="block"
              >
                ‌
              </span>
            </StyledComponent>
          </styled.span>
        </TextSkeleton>
        <TextSkeleton
          display="block"
          type="body"
        >
          <styled.span
            display="block"
            textType="body"
          >
            <StyledComponent
              display="block"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": false,
                    "lastClassName": "c2",
                    "rules": Array [
                      "
  border-radius: 4px;
  width: ",
                      [Function],
                      ";
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  ",
                      [Function],
                      ";
  ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              textType="body"
            >
              <span
                className="c1"
                display="block"
              >
                ‌
              </span>
            </StyledComponent>
          </styled.span>
        </TextSkeleton>
        <TextSkeleton
          display="block"
          type="body"
        >
          <styled.span
            display="block"
            textType="body"
          >
            <StyledComponent
              display="block"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": false,
                    "lastClassName": "c2",
                    "rules": Array [
                      "
  border-radius: 4px;
  width: ",
                      [Function],
                      ";
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  ",
                      [Function],
                      ";
  ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              textType="body"
            >
              <span
                className="c1"
                display="block"
              >
                ‌
              </span>
            </StyledComponent>
          </styled.span>
        </TextSkeleton>
        <TextSkeleton
          display="block"
          type="body"
          width="50%"
        >
          <styled.span
            display="block"
            textType="body"
            width="50%"
          >
            <StyledComponent
              display="block"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-bdVaJa",
                    "isStatic": false,
                    "lastClassName": "c2",
                    "rules": Array [
                      "
  border-radius: 4px;
  width: ",
                      [Function],
                      ";
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  ",
                      [Function],
                      ";
  ",
                      [Function],
                      ";
",
                    ],
                  },
                  "displayName": "styled.span",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-bdVaJa",
                  "target": "span",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              textType="body"
              width="50%"
            >
              <span
                className="c2"
                display="block"
                width="50%"
              >
                ‌
              </span>
            </StyledComponent>
          </styled.span>
        </TextSkeleton>
      </div>
    </StyledComponent>
  </styled.div>
</ParagraphSkeleton>
`;
