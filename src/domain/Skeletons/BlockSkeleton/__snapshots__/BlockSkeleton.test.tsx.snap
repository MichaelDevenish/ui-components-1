// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<BlockSkeleton /> should render a block skeleton 1`] = `
.c0 {
  border-radius: 4px;
  line-height: 1rem;
  height: 1rem;
  -webkit-animation: jXsTbE .8s linear infinite alternate;
  animation: jXsTbE .8s linear infinite alternate;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  will-change: opacity;
  background-color: #E1E6EB;
  border: 1px solid #E1E6EB;
  display: block;
  display: block;
}

<BlockSkeleton
  display="block"
  showSkeleton={true}
>
  <styled.span
    display="block"
  >
    <StyledComponent
      display="block"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  border-radius: 4px;
  line-height: 1rem;
  width: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
  ",
              [Function],
              ";
  display: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.span",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "span",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <span
        className="c0"
        display="block"
      />
    </StyledComponent>
  </styled.span>
</BlockSkeleton>
`;

exports[`<BlockSkeleton /> should render a block skeleton with set width and height 1`] = `
.c0 {
  border-radius: 4px;
  line-height: 1rem;
  width: 400px;
  height: 200px;
  -webkit-animation: jXsTbE .8s linear infinite alternate;
  animation: jXsTbE .8s linear infinite alternate;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  will-change: opacity;
  background-color: #E1E6EB;
  border: 1px solid #E1E6EB;
  display: block;
  display: block;
}

<BlockSkeleton
  display="block"
  height={200}
  showSkeleton={true}
  width={400}
>
  <styled.span
    display="block"
    height="200px"
    width="400px"
  >
    <StyledComponent
      display="block"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  border-radius: 4px;
  line-height: 1rem;
  width: ",
              [Function],
              ";
  height: ",
              [Function],
              ";
  ",
              [Function],
              ";
  display: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.span",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "span",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      height="200px"
      width="400px"
    >
      <span
        className="c0"
        display="block"
        height="200px"
        width="400px"
      />
    </StyledComponent>
  </styled.span>
</BlockSkeleton>
`;
