// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TextSkeleton /> should render a multi line text skeleton 1`] = `
.c1 {
  -webkit-animation: hNBTQs 1.2s ease-in-out infinite;
  animation: hNBTQs 1.2s ease-in-out infinite;
  background-color: #F5F9FC;
  background-image: linear-gradient(90deg,#F5F9FC,#E1E6EB,#F5F9FC);
  background-repeat: no-repeat;
  background-size: 200px 100%;
  border: 1px solid #F5F9FC;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

.c0 {
  border-radius: 4px;
  width: 100%;
  font-size: 16px;
  line-height: 24px;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
}

<TextSkeleton
  skeletonOptions={
    Object {
      "numLines": 5,
      "showSkeleton": true,
    }
  }
>
  <Styled(styled.span)
    key="0"
    textType="body"
  >
    <styled.span
      className="c0"
      textType="body"
    >
      <span
        className="c0 c1"
      >
        ‌
      </span>
    </styled.span>
  </Styled(styled.span)>
  <Styled(styled.span)
    key="1"
    textType="body"
  >
    <styled.span
      className="c0"
      textType="body"
    >
      <span
        className="c0 c1"
      >
        ‌
      </span>
    </styled.span>
  </Styled(styled.span)>
  <Styled(styled.span)
    key="2"
    textType="body"
  >
    <styled.span
      className="c0"
      textType="body"
    >
      <span
        className="c0 c1"
      >
        ‌
      </span>
    </styled.span>
  </Styled(styled.span)>
  <Styled(styled.span)
    key="3"
    textType="body"
  >
    <styled.span
      className="c0"
      textType="body"
    >
      <span
        className="c0 c1"
      >
        ‌
      </span>
    </styled.span>
  </Styled(styled.span)>
  <Styled(styled.span)
    key="4"
    textType="body"
  >
    <styled.span
      className="c0"
      textType="body"
    >
      <span
        className="c0 c1"
      >
        ‌
      </span>
    </styled.span>
  </Styled(styled.span)>
</TextSkeleton>
`;

exports[`<TextSkeleton /> should render a text skeleton 1`] = `
.c1 {
  -webkit-animation: hNBTQs 1.2s ease-in-out infinite;
  animation: hNBTQs 1.2s ease-in-out infinite;
  background-color: #F5F9FC;
  background-image: linear-gradient(90deg,#F5F9FC,#E1E6EB,#F5F9FC);
  background-repeat: no-repeat;
  background-size: 200px 100%;
  border: 1px solid #F5F9FC;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

.c0 {
  border-radius: 4px;
  width: 100%;
  font-size: 16px;
  line-height: 24px;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
}

<TextSkeleton
  skeletonOptions={
    Object {
      "showSkeleton": true,
    }
  }
>
  <Styled(styled.span)
    key="0"
    textType="body"
  >
    <styled.span
      className="c0"
      textType="body"
    >
      <span
        className="c0 c1"
      >
        ‌
      </span>
    </styled.span>
  </Styled(styled.span)>
</TextSkeleton>
`;

exports[`<TextSkeleton /> should render a text skeleton with set type 1`] = `
.c1 {
  -webkit-animation: hNBTQs 1.2s ease-in-out infinite;
  animation: hNBTQs 1.2s ease-in-out infinite;
  background-color: #F5F9FC;
  background-image: linear-gradient(90deg,#F5F9FC,#E1E6EB,#F5F9FC);
  background-repeat: no-repeat;
  background-size: 200px 100%;
  border: 1px solid #F5F9FC;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

.c0 {
  border-radius: 4px;
  width: 100%;
  font-size: 24px;
  line-height: 28px;
  -webkit-letter-spacing: -.02em;
  -moz-letter-spacing: -.02em;
  -ms-letter-spacing: -.02em;
  letter-spacing: -.02em;
}

<TextSkeleton
  skeletonOptions={
    Object {
      "showSkeleton": true,
      "type": "display",
    }
  }
>
  <Styled(styled.span)
    key="0"
    textType="display"
  >
    <styled.span
      className="c0"
      textType="display"
    >
      <span
        className="c0 c1"
      >
        ‌
      </span>
    </styled.span>
  </Styled(styled.span)>
</TextSkeleton>
`;

exports[`<TextSkeleton /> should render a text skeleton with set width 1`] = `
.c1 {
  -webkit-animation: hNBTQs 1.2s ease-in-out infinite;
  animation: hNBTQs 1.2s ease-in-out infinite;
  background-color: #F5F9FC;
  background-image: linear-gradient(90deg,#F5F9FC,#E1E6EB,#F5F9FC);
  background-repeat: no-repeat;
  background-size: 200px 100%;
  border: 1px solid #F5F9FC;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

.c0 {
  border-radius: 4px;
  width: 250px;
  font-size: 16px;
  line-height: 24px;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
}

<TextSkeleton
  skeletonOptions={
    Object {
      "showSkeleton": true,
      "width": 250,
    }
  }
>
  <Styled(styled.span)
    key="0"
    textType="body"
    width={250}
  >
    <styled.span
      className="c0"
      textType="body"
      width={250}
    >
      <span
        className="c0 c1"
        width={250}
      >
        ‌
      </span>
    </styled.span>
  </Styled(styled.span)>
</TextSkeleton>
`;
