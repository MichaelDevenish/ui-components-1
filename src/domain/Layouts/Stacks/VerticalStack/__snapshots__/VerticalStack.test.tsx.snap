// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Vertical Stack /> should render a vertical stack 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c1:first-child {
  padding-top: 0;
}

.c1:last-child {
  padding-bottom: 0;
}

@media only screen and (max-width:639px) {
  .c1 {
    padding: 8px 0px;
  }
}

@media only screen and (min-width:640px) {
  .c1 {
    padding: 12px 0px;
  }
}

<VerticalStack
  desktopPadding={24}
  mobilePadding={16}
>
  <styled.div>
    <div
      className="c0"
    >
      <styled.div
        desktopPadding={24}
        key=".0"
        mobilePadding={16}
      >
        <div
          className="c1"
        >
          <div>
            1
          </div>
        </div>
      </styled.div>
      <styled.div
        desktopPadding={24}
        key=".1"
        mobilePadding={16}
      >
        <div
          className="c1"
        >
          <div>
            3
          </div>
        </div>
      </styled.div>
      <styled.div
        desktopPadding={24}
        key=".2"
        mobilePadding={16}
      >
        <div
          className="c1"
        >
          <div>
            2
          </div>
        </div>
      </styled.div>
    </div>
  </styled.div>
</VerticalStack>
`;

exports[`<Vertical Stack /> should render a vertical stack with a custom padding 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c1:first-child {
  padding-top: 0;
}

.c1:last-child {
  padding-bottom: 0;
}

@media only screen and (max-width:639px) {
  .c1 {
    padding: 15px 0px;
  }
}

@media only screen and (min-width:640px) {
  .c1 {
    padding: 30px 0px;
  }
}

<VerticalStack
  desktopPadding={60}
  mobilePadding={30}
>
  <styled.div>
    <div
      className="c0"
    >
      <styled.div
        desktopPadding={60}
        key=".0"
        mobilePadding={30}
      >
        <div
          className="c1"
        >
          <div>
            1
          </div>
        </div>
      </styled.div>
      <styled.div
        desktopPadding={60}
        key=".1"
        mobilePadding={30}
      >
        <div
          className="c1"
        >
          <div>
            3
          </div>
        </div>
      </styled.div>
      <styled.div
        desktopPadding={60}
        key=".2"
        mobilePadding={30}
      >
        <div
          className="c1"
        >
          <div>
            2
          </div>
        </div>
      </styled.div>
    </div>
  </styled.div>
</VerticalStack>
`;

exports[`<Vertical Stack /> should render a vertical stack with no items 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

<VerticalStack
  desktopPadding={24}
  mobilePadding={16}
>
  <styled.div>
    <div
      className="c0"
    />
  </styled.div>
</VerticalStack>
`;

exports[`<Vertical Stack /> should render a vertical stack with one item 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c1:first-child {
  padding-top: 0;
}

.c1:last-child {
  padding-bottom: 0;
}

@media only screen and (max-width:639px) {
  .c1 {
    padding: 8px 0px;
  }
}

@media only screen and (min-width:640px) {
  .c1 {
    padding: 12px 0px;
  }
}

<VerticalStack
  desktopPadding={24}
  mobilePadding={16}
>
  <styled.div>
    <div
      className="c0"
    >
      <styled.div
        desktopPadding={24}
        key=".0"
        mobilePadding={16}
      >
        <div
          className="c1"
        >
          <div>
            1
          </div>
        </div>
      </styled.div>
    </div>
  </styled.div>
</VerticalStack>
`;
