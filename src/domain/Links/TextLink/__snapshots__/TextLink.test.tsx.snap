// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TextLink /> should render a text link 1`] = `
.c0 {
  -webkit-transition: color .25s ease-out;
  transition: color .25s ease-out;
  cursor: pointer;
  font-size: 16px;
  line-height: 24px;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  display: inline;
}

.c0,
.c0:link,
.c0:visited {
  color: #432DF3;
}

.c0:hover {
  color: #2512B3;
}

.c0:active {
  color: #0F0080;
}

<TextLink
  href="/lol"
  isInline={true}
  type="anchor"
>
  <Styled(Component)
    href="/lol"
    isInline={true}
    type="anchor"
  >
    <Component
      className="c0"
      href="/lol"
      isInline={true}
      type="anchor"
    >
      <Anchor
        className="c0"
        href="/lol"
        type="anchor"
      >
        <a
          className="c0"
          href="/lol"
          type="anchor"
        >
          Text link me
        </a>
      </Anchor>
    </Component>
  </Styled(Component)>
</TextLink>
`;

exports[`<TextLink /> should render a text link button 1`] = `
.c0 {
  -webkit-transition: color .25s ease-out;
  transition: color .25s ease-out;
  cursor: pointer;
  font-size: 16px;
  line-height: 24px;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  display: inline;
  outline: 0;
}

.c0,
.c0:link,
.c0:visited {
  color: #432DF3;
}

.c0:hover {
  color: #2512B3;
}

.c0:active {
  color: #0F0080;
}

<TextLink
  isInline={true}
  type="button"
>
  <styled.button
    isInline={true}
  >
    <button
      className="c0"
    >
      Text link me
    </button>
  </styled.button>
</TextLink>
`;

exports[`<TextLink /> should render a text link with display block 1`] = `
.c0 {
  -webkit-transition: color .25s ease-out;
  transition: color .25s ease-out;
  cursor: pointer;
  font-size: 16px;
  line-height: 24px;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  display: block;
}

.c0,
.c0:link,
.c0:visited {
  color: #432DF3;
}

.c0:hover {
  color: #2512B3;
}

.c0:active {
  color: #0F0080;
}

<TextLink
  href="#"
  isInline={false}
  type="anchor"
>
  <Styled(Component)
    href="#"
    isInline={false}
    type="anchor"
  >
    <Component
      className="c0"
      href="#"
      isInline={false}
      type="anchor"
    >
      <Anchor
        className="c0"
        href="#"
        type="anchor"
      >
        <a
          className="c0"
          href="#"
          type="anchor"
        >
          Block text link
        </a>
      </Anchor>
    </Component>
  </Styled(Component)>
</TextLink>
`;

exports[`<TextLink /> should render a text link with underline on hover 1`] = `
.c0 {
  -webkit-transition: color .25s ease-out;
  transition: color .25s ease-out;
  cursor: pointer;
  font-size: 16px;
  line-height: 24px;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  display: inline;
}

.c0,
.c0:link,
.c0:visited {
  color: #432DF3;
}

.c0:hover {
  color: #2512B3;
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c0:active {
  color: #0F0080;
}

<TextLink
  href="#"
  isInline={true}
  type="anchor"
  underlineOnHover={true}
>
  <Styled(Component)
    href="#"
    isInline={true}
    type="anchor"
    underlineOnHover={true}
  >
    <Component
      className="c0"
      href="#"
      isInline={true}
      type="anchor"
      underlineOnHover={true}
    >
      <Anchor
        className="c0"
        href="#"
        type="anchor"
        underlineOnHover={true}
      >
        <a
          className="c0"
          href="#"
          type="anchor"
          underlineOnHover={true}
        >
          Underline text link on hover
        </a>
      </Anchor>
    </Component>
  </Styled(Component)>
</TextLink>
`;
