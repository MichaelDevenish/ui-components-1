// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ActionLink /> should render an action link 1`] = `
.c0 {
  font-weight: 600;
  font-size: .9375rem;
  text-transform: uppercase;
  -webkit-transition: color .25s ease-out;
  transition: color .25s ease-out;
}

.c0,
.c0:link,
.c0:visited {
  color: #432DF3;
}

.c0:hover {
  color: #2512B3;
}

.c0:active {
  color: #0F0080;
}

<ActionLink
  href="/lol"
>
  <StyledComponent
    forwardedComponent={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": false,
          "lastClassName": "c0",
          "rules": Array [
            "
  font-weight: 600;
  font-size: .9375rem;
  text-transform: uppercase;
  transition: color .25s ease-out;

  &,
  &:link,
  &:visited {
    color: ",
            "#432DF3",
            ";
  }

  &:hover {
    color: ",
            "#2512B3",
            "
  }

  &:active {
    color: ",
            "#0F0080",
            "
  }
",
          ],
        },
        "displayName": "ActionLink",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": [Function],
        "toString": [Function],
        "usesTheme": false,
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      }
    }
    forwardedRef={null}
    href="/lol"
  >
    <Anchor
      className="c0"
      href="/lol"
      openInNewTab={false}
    >
      <a
        className="c0"
        href="/lol"
      >
        Grrr I am action man
      </a>
    </Anchor>
  </StyledComponent>
</ActionLink>
`;

exports[`<ActionLink /> should render an action link with a replacement anchor tag 1`] = `
.c0 {
  font-weight: 600;
  font-size: .9375rem;
  text-transform: uppercase;
  -webkit-transition: color .25s ease-out;
  transition: color .25s ease-out;
}

.c0,
.c0:link,
.c0:visited {
  color: #432DF3;
}

.c0:hover {
  color: #2512B3;
}

.c0:active {
  color: #0F0080;
}

<DefaultsProvider
  value={
    Object {
      "AnchorComponent": [Function],
    }
  }
>
  <ActionLink
    href="#"
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  font-weight: 600;
  font-size: .9375rem;
  text-transform: uppercase;
  transition: color .25s ease-out;

  &,
  &:link,
  &:visited {
    color: ",
              "#432DF3",
              ";
  }

  &:hover {
    color: ",
              "#2512B3",
              "
  }

  &:active {
    color: ",
              "#0F0080",
              "
  }
",
            ],
          },
          "displayName": "ActionLink",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": [Function],
          "toString": [Function],
          "usesTheme": false,
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      href="#"
    >
      <Anchor
        className="c0"
        href="#"
        openInNewTab={false}
      >
        <AnchorComponent
          className="c0"
          href="#"
        >
          <a
            href="/allTheFeelsUgh"
          >
            Replacement default text
          </a>
        </AnchorComponent>
      </Anchor>
    </StyledComponent>
  </ActionLink>
</DefaultsProvider>
`;
