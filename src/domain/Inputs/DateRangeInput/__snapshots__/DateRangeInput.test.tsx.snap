// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DateRangeInput /> should render a date range input 1`] = `
<div
  className="dateRangePickerOverrides"
>
  <withStyles(DateRangePicker)
    anchorDirection="left"
    appendToBody={false}
    block={true}
    calendarInfoPosition="bottom"
    customArrowIcon={
      <Text
        color="#667380"
        isInline={true}
        tag="span"
        type="body"
        weight={600}
      >
        →
      </Text>
    }
    customCloseIcon={
      <span>
        ×
      </span>
    }
    customInputIcon={null}
    daySize={39}
    disableScroll={false}
    disabled={false}
    displayFormat="DD/MM/YYYY"
    enableOutsideDays={false}
    endDate={"2019-12-31T14:00:00.000Z"}
    endDateId="test-date-picker1-end"
    endDatePlaceholderText="End Date"
    firstDayOfWeek={null}
    focusedInput={null}
    hideKeyboardShortcutsPanel={true}
    horizontalMargin={0}
    initialVisibleMonth={null}
    inputIconPosition="before"
    isDayBlocked={[Function]}
    isDayHighlighted={[Function]}
    isOutsideRange={[Function]}
    isRTL={false}
    keepFocusOnInput={false}
    keepOpenOnDateSelect={false}
    minimumNights={1}
    monthFormat="MMMM YYYY"
    navNext={
      <div
        className="DayPickerNavigation_button__default DayPickerNavigation_button__horizontalDefault DayPickerNavigation_rightButton__horizontalDefault"
      >
        <Memo(FontAwesomeIcon)
          icon="arrow-right"
          type="solid"
        />
      </div>
    }
    navPrev={
      <div
        className="DayPickerNavigation_button__default DayPickerNavigation_button__horizontalDefault DayPickerNavigation_leftButton__horizontalDefault"
      >
        <Memo(FontAwesomeIcon)
          icon="arrow-left"
          type="solid"
        />
      </div>
    }
    noBorder={false}
    numberOfMonths={2}
    onClose={[Function]}
    onDatesChange={[Function]}
    onFocusChange={[Function]}
    onNextMonthClick={[Function]}
    onPrevMonthClick={[Function]}
    openDirection="down"
    orientation="horizontal"
    phrases={
      Object {
        "calendarLabel": "Calendar",
        "chooseAvailableEndDate": [Function],
        "chooseAvailableStartDate": [Function],
        "clearDates": "Clear Dates",
        "closeDatePicker": "Close",
        "dateIsSelected": [Function],
        "dateIsSelectedAsEndDate": [Function],
        "dateIsSelectedAsStartDate": [Function],
        "dateIsUnavailable": [Function],
        "enterKey": "Enter key",
        "escape": "Escape key",
        "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
        "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
        "homeEnd": "Home and end keys",
        "jumpToNextMonth": "Move forward to switch to the next month.",
        "jumpToPrevMonth": "Move backward to switch to the previous month.",
        "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
        "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
        "keyboardShortcuts": "Keyboard Shortcuts",
        "leftArrowRightArrow": "Right and left arrow keys",
        "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
        "moveFocusByOneMonth": "Switch months.",
        "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
        "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
        "openThisPanel": "Open this panel.",
        "pageUpPageDown": "page up and page down keys",
        "questionMark": "Question mark",
        "returnFocusToInput": "Return to the date input field.",
        "roleDescription": "datepicker",
        "selectFocusedDate": "Select the date in focus.",
        "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
        "upArrowDownArrow": "up and down arrow keys",
      }
    }
    readOnly={false}
    regular={false}
    renderCalendarInfo={null}
    renderDayContents={null}
    renderMonthElement={null}
    renderMonthText={[Function]}
    reopenPickerOnClearDates={false}
    required={false}
    screenReaderInputMessage=""
    showClearDates={true}
    showDefaultInputIcon={false}
    small={false}
    startDate={"2018-12-31T14:00:00.000Z"}
    startDateId="test-date-picker1-start"
    startDatePlaceholderText="Start Date"
    verticalHeight={null}
    verticalSpacing={22}
    weekDayFormat="dd"
    withFullScreenPortal={false}
    withPortal={false}
  />
</div>
`;

exports[`<DateRangeInput /> should render a date range input with date format 1`] = `
<div
  className="dateRangePickerOverrides"
>
  <withStyles(DateRangePicker)
    anchorDirection="left"
    appendToBody={false}
    block={true}
    calendarInfoPosition="bottom"
    customArrowIcon={
      <Text
        color="#667380"
        isInline={true}
        tag="span"
        type="body"
        weight={600}
      >
        →
      </Text>
    }
    customCloseIcon={
      <span>
        ×
      </span>
    }
    customInputIcon={null}
    daySize={39}
    disableScroll={false}
    disabled={false}
    displayFormat="DD MMM YYYY"
    enableOutsideDays={false}
    endDate={"2019-12-31T14:00:00.000Z"}
    endDateId="test-date-picker1-end"
    endDatePlaceholderText="End Date"
    firstDayOfWeek={null}
    focusedInput={null}
    hideKeyboardShortcutsPanel={true}
    horizontalMargin={0}
    initialVisibleMonth={null}
    inputIconPosition="before"
    isDayBlocked={[Function]}
    isDayHighlighted={[Function]}
    isOutsideRange={[Function]}
    isRTL={false}
    keepFocusOnInput={false}
    keepOpenOnDateSelect={false}
    minimumNights={1}
    monthFormat="MMMM YYYY"
    navNext={
      <div
        className="DayPickerNavigation_button__default DayPickerNavigation_button__horizontalDefault DayPickerNavigation_rightButton__horizontalDefault"
      >
        <Memo(FontAwesomeIcon)
          icon="arrow-right"
          type="solid"
        />
      </div>
    }
    navPrev={
      <div
        className="DayPickerNavigation_button__default DayPickerNavigation_button__horizontalDefault DayPickerNavigation_leftButton__horizontalDefault"
      >
        <Memo(FontAwesomeIcon)
          icon="arrow-left"
          type="solid"
        />
      </div>
    }
    noBorder={false}
    numberOfMonths={2}
    onClose={[Function]}
    onDatesChange={[Function]}
    onFocusChange={[Function]}
    onNextMonthClick={[Function]}
    onPrevMonthClick={[Function]}
    openDirection="down"
    orientation="horizontal"
    phrases={
      Object {
        "calendarLabel": "Calendar",
        "chooseAvailableEndDate": [Function],
        "chooseAvailableStartDate": [Function],
        "clearDates": "Clear Dates",
        "closeDatePicker": "Close",
        "dateIsSelected": [Function],
        "dateIsSelectedAsEndDate": [Function],
        "dateIsSelectedAsStartDate": [Function],
        "dateIsUnavailable": [Function],
        "enterKey": "Enter key",
        "escape": "Escape key",
        "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
        "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
        "homeEnd": "Home and end keys",
        "jumpToNextMonth": "Move forward to switch to the next month.",
        "jumpToPrevMonth": "Move backward to switch to the previous month.",
        "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
        "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
        "keyboardShortcuts": "Keyboard Shortcuts",
        "leftArrowRightArrow": "Right and left arrow keys",
        "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
        "moveFocusByOneMonth": "Switch months.",
        "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
        "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
        "openThisPanel": "Open this panel.",
        "pageUpPageDown": "page up and page down keys",
        "questionMark": "Question mark",
        "returnFocusToInput": "Return to the date input field.",
        "roleDescription": "datepicker",
        "selectFocusedDate": "Select the date in focus.",
        "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
        "upArrowDownArrow": "up and down arrow keys",
      }
    }
    readOnly={false}
    regular={false}
    renderCalendarInfo={null}
    renderDayContents={null}
    renderMonthElement={null}
    renderMonthText={[Function]}
    reopenPickerOnClearDates={false}
    required={false}
    screenReaderInputMessage=""
    showClearDates={true}
    showDefaultInputIcon={false}
    small={false}
    startDate={"2018-12-31T14:00:00.000Z"}
    startDateId="test-date-picker1-start"
    startDatePlaceholderText="Start Date"
    verticalHeight={null}
    verticalSpacing={22}
    weekDayFormat="dd"
    withFullScreenPortal={false}
    withPortal={false}
  />
</div>
`;

exports[`<DateRangeInput /> should render a date range input with disable date choices 1`] = `
<div
  className="dateRangePickerOverrides"
>
  <withStyles(DateRangePicker)
    anchorDirection="left"
    appendToBody={false}
    block={true}
    calendarInfoPosition="bottom"
    customArrowIcon={
      <Text
        color="#667380"
        isInline={true}
        tag="span"
        type="body"
        weight={600}
      >
        →
      </Text>
    }
    customCloseIcon={
      <span>
        ×
      </span>
    }
    customInputIcon={null}
    daySize={39}
    disableScroll={false}
    disabled={false}
    displayFormat="DD/MM/YYYY"
    enableOutsideDays={false}
    endDate={"2019-12-31T14:00:00.000Z"}
    endDateId="test-date-picker1-end"
    endDatePlaceholderText="End Date"
    firstDayOfWeek={null}
    focusedInput={null}
    hideKeyboardShortcutsPanel={true}
    horizontalMargin={0}
    initialVisibleMonth={null}
    inputIconPosition="before"
    isDayBlocked={[Function]}
    isDayHighlighted={[Function]}
    isOutsideRange={[Function]}
    isRTL={false}
    keepFocusOnInput={false}
    keepOpenOnDateSelect={false}
    minimumNights={1}
    monthFormat="MMMM YYYY"
    navNext={
      <div
        className="DayPickerNavigation_button__default DayPickerNavigation_button__horizontalDefault DayPickerNavigation_rightButton__horizontalDefault"
      >
        <Memo(FontAwesomeIcon)
          icon="arrow-right"
          type="solid"
        />
      </div>
    }
    navPrev={
      <div
        className="DayPickerNavigation_button__default DayPickerNavigation_button__horizontalDefault DayPickerNavigation_leftButton__horizontalDefault"
      >
        <Memo(FontAwesomeIcon)
          icon="arrow-left"
          type="solid"
        />
      </div>
    }
    noBorder={false}
    numberOfMonths={2}
    onClose={[Function]}
    onDatesChange={[Function]}
    onFocusChange={[Function]}
    onNextMonthClick={[Function]}
    onPrevMonthClick={[Function]}
    openDirection="down"
    orientation="horizontal"
    phrases={
      Object {
        "calendarLabel": "Calendar",
        "chooseAvailableEndDate": [Function],
        "chooseAvailableStartDate": [Function],
        "clearDates": "Clear Dates",
        "closeDatePicker": "Close",
        "dateIsSelected": [Function],
        "dateIsSelectedAsEndDate": [Function],
        "dateIsSelectedAsStartDate": [Function],
        "dateIsUnavailable": [Function],
        "enterKey": "Enter key",
        "escape": "Escape key",
        "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
        "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
        "homeEnd": "Home and end keys",
        "jumpToNextMonth": "Move forward to switch to the next month.",
        "jumpToPrevMonth": "Move backward to switch to the previous month.",
        "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
        "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
        "keyboardShortcuts": "Keyboard Shortcuts",
        "leftArrowRightArrow": "Right and left arrow keys",
        "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
        "moveFocusByOneMonth": "Switch months.",
        "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
        "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
        "openThisPanel": "Open this panel.",
        "pageUpPageDown": "page up and page down keys",
        "questionMark": "Question mark",
        "returnFocusToInput": "Return to the date input field.",
        "roleDescription": "datepicker",
        "selectFocusedDate": "Select the date in focus.",
        "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
        "upArrowDownArrow": "up and down arrow keys",
      }
    }
    readOnly={false}
    regular={false}
    renderCalendarInfo={null}
    renderDayContents={null}
    renderMonthElement={null}
    renderMonthText={[Function]}
    reopenPickerOnClearDates={false}
    required={false}
    screenReaderInputMessage=""
    showClearDates={true}
    showDefaultInputIcon={false}
    small={false}
    startDate={"2018-12-31T14:00:00.000Z"}
    startDateId="test-date-picker1-start"
    startDatePlaceholderText="Start Date"
    verticalHeight={null}
    verticalSpacing={22}
    weekDayFormat="dd"
    withFullScreenPortal={false}
    withPortal={false}
  />
</div>
`;

exports[`<DateRangeInput /> should render a disabled date range input 1`] = `
<div
  className="dateRangePickerOverrides"
>
  <withStyles(DateRangePicker)
    anchorDirection="left"
    appendToBody={false}
    block={true}
    calendarInfoPosition="bottom"
    customArrowIcon={
      <Text
        color="#667380"
        isInline={true}
        tag="span"
        type="body"
        weight={600}
      >
        →
      </Text>
    }
    customCloseIcon={
      <span>
        ×
      </span>
    }
    customInputIcon={null}
    daySize={39}
    disableScroll={false}
    disabled={true}
    displayFormat="DD/MM/YYYY"
    enableOutsideDays={false}
    endDate={"2019-12-31T14:00:00.000Z"}
    endDateId="test-date-picker1-end"
    endDatePlaceholderText="End Date"
    firstDayOfWeek={null}
    focusedInput={null}
    hideKeyboardShortcutsPanel={true}
    horizontalMargin={0}
    initialVisibleMonth={null}
    inputIconPosition="before"
    isDayBlocked={[Function]}
    isDayHighlighted={[Function]}
    isOutsideRange={[Function]}
    isRTL={false}
    keepFocusOnInput={false}
    keepOpenOnDateSelect={false}
    minimumNights={1}
    monthFormat="MMMM YYYY"
    navNext={
      <div
        className="DayPickerNavigation_button__default DayPickerNavigation_button__horizontalDefault DayPickerNavigation_rightButton__horizontalDefault"
      >
        <Memo(FontAwesomeIcon)
          icon="arrow-right"
          type="solid"
        />
      </div>
    }
    navPrev={
      <div
        className="DayPickerNavigation_button__default DayPickerNavigation_button__horizontalDefault DayPickerNavigation_leftButton__horizontalDefault"
      >
        <Memo(FontAwesomeIcon)
          icon="arrow-left"
          type="solid"
        />
      </div>
    }
    noBorder={false}
    numberOfMonths={2}
    onClose={[Function]}
    onDatesChange={[Function]}
    onFocusChange={[Function]}
    onNextMonthClick={[Function]}
    onPrevMonthClick={[Function]}
    openDirection="down"
    orientation="horizontal"
    phrases={
      Object {
        "calendarLabel": "Calendar",
        "chooseAvailableEndDate": [Function],
        "chooseAvailableStartDate": [Function],
        "clearDates": "Clear Dates",
        "closeDatePicker": "Close",
        "dateIsSelected": [Function],
        "dateIsSelectedAsEndDate": [Function],
        "dateIsSelectedAsStartDate": [Function],
        "dateIsUnavailable": [Function],
        "enterKey": "Enter key",
        "escape": "Escape key",
        "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
        "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
        "homeEnd": "Home and end keys",
        "jumpToNextMonth": "Move forward to switch to the next month.",
        "jumpToPrevMonth": "Move backward to switch to the previous month.",
        "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
        "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
        "keyboardShortcuts": "Keyboard Shortcuts",
        "leftArrowRightArrow": "Right and left arrow keys",
        "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
        "moveFocusByOneMonth": "Switch months.",
        "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
        "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
        "openThisPanel": "Open this panel.",
        "pageUpPageDown": "page up and page down keys",
        "questionMark": "Question mark",
        "returnFocusToInput": "Return to the date input field.",
        "roleDescription": "datepicker",
        "selectFocusedDate": "Select the date in focus.",
        "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
        "upArrowDownArrow": "up and down arrow keys",
      }
    }
    readOnly={false}
    regular={false}
    renderCalendarInfo={null}
    renderDayContents={null}
    renderMonthElement={null}
    renderMonthText={[Function]}
    reopenPickerOnClearDates={false}
    required={false}
    screenReaderInputMessage=""
    showClearDates={true}
    showDefaultInputIcon={false}
    small={false}
    startDate={"2018-12-31T14:00:00.000Z"}
    startDateId="test-date-picker1-start"
    startDatePlaceholderText="Start Date"
    verticalHeight={null}
    verticalSpacing={22}
    weekDayFormat="dd"
    withFullScreenPortal={false}
    withPortal={false}
  />
</div>
`;

exports[`<DateRangeInput /> should render a mobile date range input 1`] = `
<div
  className="dateRangePickerOverrides"
>
  <withStyles(DateRangePicker)
    anchorDirection="left"
    appendToBody={false}
    block={true}
    calendarInfoPosition="bottom"
    customArrowIcon={
      <Text
        color="#667380"
        isInline={true}
        tag="span"
        type="body"
        weight={600}
      >
        →
      </Text>
    }
    customCloseIcon={
      <span>
        ×
      </span>
    }
    customInputIcon={null}
    daySize={39}
    disableScroll={false}
    disabled={false}
    displayFormat="DD/MM/YYYY"
    enableOutsideDays={false}
    endDate={"2019-12-31T14:00:00.000Z"}
    endDateId="test-date-picker1-end"
    endDatePlaceholderText="End Date"
    firstDayOfWeek={null}
    focusedInput={null}
    hideKeyboardShortcutsPanel={true}
    horizontalMargin={0}
    initialVisibleMonth={null}
    inputIconPosition="before"
    isDayBlocked={[Function]}
    isDayHighlighted={[Function]}
    isOutsideRange={[Function]}
    isRTL={false}
    keepFocusOnInput={false}
    keepOpenOnDateSelect={false}
    minimumNights={1}
    monthFormat="MMMM YYYY"
    navNext={
      <div
        className="DayPickerNavigation_button__default DayPickerNavigation_button__horizontalDefault DayPickerNavigation_rightButton__horizontalDefault"
      >
        <Memo(FontAwesomeIcon)
          icon="arrow-right"
          type="solid"
        />
      </div>
    }
    navPrev={
      <div
        className="DayPickerNavigation_button__default DayPickerNavigation_button__horizontalDefault DayPickerNavigation_leftButton__horizontalDefault"
      >
        <Memo(FontAwesomeIcon)
          icon="arrow-left"
          type="solid"
        />
      </div>
    }
    noBorder={false}
    numberOfMonths={1}
    onClose={[Function]}
    onDatesChange={[Function]}
    onFocusChange={[Function]}
    onNextMonthClick={[Function]}
    onPrevMonthClick={[Function]}
    openDirection="down"
    orientation="horizontal"
    phrases={
      Object {
        "calendarLabel": "Calendar",
        "chooseAvailableEndDate": [Function],
        "chooseAvailableStartDate": [Function],
        "clearDates": "Clear Dates",
        "closeDatePicker": "Close",
        "dateIsSelected": [Function],
        "dateIsSelectedAsEndDate": [Function],
        "dateIsSelectedAsStartDate": [Function],
        "dateIsUnavailable": [Function],
        "enterKey": "Enter key",
        "escape": "Escape key",
        "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
        "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
        "homeEnd": "Home and end keys",
        "jumpToNextMonth": "Move forward to switch to the next month.",
        "jumpToPrevMonth": "Move backward to switch to the previous month.",
        "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
        "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
        "keyboardShortcuts": "Keyboard Shortcuts",
        "leftArrowRightArrow": "Right and left arrow keys",
        "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
        "moveFocusByOneMonth": "Switch months.",
        "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
        "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
        "openThisPanel": "Open this panel.",
        "pageUpPageDown": "page up and page down keys",
        "questionMark": "Question mark",
        "returnFocusToInput": "Return to the date input field.",
        "roleDescription": "datepicker",
        "selectFocusedDate": "Select the date in focus.",
        "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
        "upArrowDownArrow": "up and down arrow keys",
      }
    }
    readOnly={false}
    regular={false}
    renderCalendarInfo={null}
    renderDayContents={null}
    renderMonthElement={null}
    renderMonthText={[Function]}
    reopenPickerOnClearDates={false}
    required={false}
    screenReaderInputMessage=""
    showClearDates={true}
    showDefaultInputIcon={false}
    small={false}
    startDate={"2018-12-31T14:00:00.000Z"}
    startDateId="test-date-picker1-start"
    startDatePlaceholderText="Start Date"
    verticalHeight={null}
    verticalSpacing={22}
    weekDayFormat="dd"
    withFullScreenPortal={false}
    withPortal={false}
  />
</div>
`;

exports[`<DateRangeInput /> should render an invalid date range input 1`] = `
<div
  className="dateRangePickerOverrides is-invalid-input"
>
  <withStyles(DateRangePicker)
    anchorDirection="left"
    appendToBody={false}
    block={true}
    calendarInfoPosition="bottom"
    customArrowIcon={
      <Text
        color="#667380"
        isInline={true}
        tag="span"
        type="body"
        weight={600}
      >
        →
      </Text>
    }
    customCloseIcon={
      <span>
        ×
      </span>
    }
    customInputIcon={null}
    daySize={39}
    disableScroll={false}
    disabled={false}
    displayFormat="DD/MM/YYYY"
    enableOutsideDays={false}
    endDate={"2019-12-31T14:00:00.000Z"}
    endDateId="test-date-picker1-end"
    endDatePlaceholderText="End Date"
    firstDayOfWeek={null}
    focusedInput={null}
    hideKeyboardShortcutsPanel={true}
    horizontalMargin={0}
    initialVisibleMonth={null}
    inputIconPosition="before"
    isDayBlocked={[Function]}
    isDayHighlighted={[Function]}
    isOutsideRange={[Function]}
    isRTL={false}
    keepFocusOnInput={false}
    keepOpenOnDateSelect={false}
    minimumNights={1}
    monthFormat="MMMM YYYY"
    navNext={
      <div
        className="DayPickerNavigation_button__default DayPickerNavigation_button__horizontalDefault DayPickerNavigation_rightButton__horizontalDefault"
      >
        <Memo(FontAwesomeIcon)
          icon="arrow-right"
          type="solid"
        />
      </div>
    }
    navPrev={
      <div
        className="DayPickerNavigation_button__default DayPickerNavigation_button__horizontalDefault DayPickerNavigation_leftButton__horizontalDefault"
      >
        <Memo(FontAwesomeIcon)
          icon="arrow-left"
          type="solid"
        />
      </div>
    }
    noBorder={false}
    numberOfMonths={2}
    onClose={[Function]}
    onDatesChange={[Function]}
    onFocusChange={[Function]}
    onNextMonthClick={[Function]}
    onPrevMonthClick={[Function]}
    openDirection="down"
    orientation="horizontal"
    phrases={
      Object {
        "calendarLabel": "Calendar",
        "chooseAvailableEndDate": [Function],
        "chooseAvailableStartDate": [Function],
        "clearDates": "Clear Dates",
        "closeDatePicker": "Close",
        "dateIsSelected": [Function],
        "dateIsSelectedAsEndDate": [Function],
        "dateIsSelectedAsStartDate": [Function],
        "dateIsUnavailable": [Function],
        "enterKey": "Enter key",
        "escape": "Escape key",
        "focusStartDate": "Interact with the calendar and add the check-in date for your trip.",
        "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
        "homeEnd": "Home and end keys",
        "jumpToNextMonth": "Move forward to switch to the next month.",
        "jumpToPrevMonth": "Move backward to switch to the previous month.",
        "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
        "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
        "keyboardShortcuts": "Keyboard Shortcuts",
        "leftArrowRightArrow": "Right and left arrow keys",
        "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
        "moveFocusByOneMonth": "Switch months.",
        "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
        "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
        "openThisPanel": "Open this panel.",
        "pageUpPageDown": "page up and page down keys",
        "questionMark": "Question mark",
        "returnFocusToInput": "Return to the date input field.",
        "roleDescription": "datepicker",
        "selectFocusedDate": "Select the date in focus.",
        "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
        "upArrowDownArrow": "up and down arrow keys",
      }
    }
    readOnly={false}
    regular={false}
    renderCalendarInfo={null}
    renderDayContents={null}
    renderMonthElement={null}
    renderMonthText={[Function]}
    reopenPickerOnClearDates={false}
    required={false}
    screenReaderInputMessage=""
    showClearDates={true}
    showDefaultInputIcon={false}
    small={false}
    startDate={"2018-12-31T14:00:00.000Z"}
    startDateId="test-date-picker1-start"
    startDatePlaceholderText="Start Date"
    verticalHeight={null}
    verticalSpacing={22}
    weekDayFormat="dd"
    withFullScreenPortal={false}
    withPortal={false}
  />
</div>
`;
