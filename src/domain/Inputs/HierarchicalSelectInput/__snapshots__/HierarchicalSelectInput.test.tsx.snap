// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<HierarchicalSelectInput /> should render a multi select box with options 1`] = `
<Select
  arrowRenderer={[Function]}
  autoFocus={false}
  autosize={true}
  backspaceRemoves={true}
  backspaceToRemoveMessage="Press backspace to remove {label}"
  className="react-select-test selectInput"
  clearAllText="Clear all"
  clearRenderer={[Function]}
  clearValueText="Clear value"
  clearable={true}
  closeOnSelect={true}
  deleteRemoves={true}
  delimiter=","
  disabled={false}
  escapeClearsValue={true}
  filterOption={[Function]}
  filterOptions={[Function]}
  id="test"
  ignoreAccents={true}
  ignoreCase={true}
  inputProps={Object {}}
  isLoading={false}
  joinValues={false}
  labelKey="label"
  matchPos="any"
  matchProp="any"
  menuBuffer={0}
  menuRenderer={[Function]}
  multi={true}
  name="test[]"
  noResultsText="No results found"
  onBlurResetsInput={true}
  onChange={[Function]}
  onCloseResetsInput={true}
  onSelectResetsInput={true}
  openOnClick={true}
  openOnFocus={false}
  optionComponent={[Function]}
  options={
    Array [
      Object {
        "depth": 0,
        "label": "Parent Option 1",
        "parentOption": null,
        "value": 10,
      },
      Object {
        "depth": 1,
        "label": "Child Option 1",
        "parentOption": Object {
          "depth": 0,
          "label": "Parent Option 1",
          "parentOption": null,
          "value": 10,
        },
        "parentValue": 10,
        "value": 11,
      },
      Object {
        "depth": 1,
        "label": "Child Option 2",
        "parentOption": Object {
          "depth": 0,
          "label": "Parent Option 1",
          "parentOption": null,
          "value": 10,
        },
        "parentValue": 10,
        "value": 12,
      },
    ]
  }
  pageSize={5}
  placeholder="Please Select"
  removeSelected={true}
  required={false}
  rtl={false}
  scrollMenuIntoView={true}
  searchable={true}
  simpleValue={false}
  tabSelectsValue={true}
  trimFilter={true}
  value={Array []}
  valueComponent={[Function]}
  valueKey="value"
/>
`;

exports[`<HierarchicalSelectInput /> should render a select box with options 1`] = `
<Select
  arrowRenderer={[Function]}
  autoFocus={false}
  autosize={true}
  backspaceRemoves={true}
  backspaceToRemoveMessage="Press backspace to remove {label}"
  className="react-select-test selectInput"
  clearAllText="Clear all"
  clearRenderer={[Function]}
  clearValueText="Clear value"
  clearable={true}
  closeOnSelect={true}
  deleteRemoves={true}
  delimiter=","
  disabled={false}
  escapeClearsValue={true}
  filterOption={[Function]}
  filterOptions={[Function]}
  id="test"
  ignoreAccents={true}
  ignoreCase={true}
  inputProps={Object {}}
  isLoading={false}
  joinValues={false}
  labelKey="label"
  matchPos="any"
  matchProp="any"
  menuBuffer={0}
  menuRenderer={[Function]}
  multi={false}
  name="test"
  noResultsText="No results found"
  onBlurResetsInput={true}
  onChange={[Function]}
  onCloseResetsInput={true}
  onSelectResetsInput={true}
  openOnClick={true}
  openOnFocus={false}
  optionComponent={[Function]}
  options={
    Array [
      Object {
        "depth": 0,
        "label": "Parent Option 1",
        "parentOption": null,
        "value": 10,
      },
      Object {
        "depth": 1,
        "label": "Child Option 1",
        "parentOption": Object {
          "depth": 0,
          "label": "Parent Option 1",
          "parentOption": null,
          "value": 10,
        },
        "parentValue": 10,
        "value": 11,
      },
      Object {
        "depth": 1,
        "label": "Child Option 2",
        "parentOption": Object {
          "depth": 0,
          "label": "Parent Option 1",
          "parentOption": null,
          "value": 10,
        },
        "parentValue": 10,
        "value": 12,
      },
    ]
  }
  pageSize={5}
  placeholder="Please Select"
  removeSelected={true}
  required={false}
  rtl={false}
  scrollMenuIntoView={true}
  searchable={true}
  simpleValue={false}
  tabSelectsValue={true}
  trimFilter={true}
  value=""
  valueComponent={[Function]}
  valueKey="value"
/>
`;
