// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SelectInput /> should render a creatable select box 1`] = `
<CreatableSelect
  className="react-select-test selectInput"
  clearable={true}
  disabled={false}
  filterOptions={[Function]}
  isLoading={false}
  isOptionUnique={[Function]}
  isValidNewOption={[Function]}
  menuRenderer={[Function]}
  multi={false}
  name="test"
  newOptionCreator={[Function]}
  onBlurResetsInput={true}
  onCloseResetsInput={true}
  onNewOptionClick={[Function]}
  onSelectResetsInput={true}
  openOnFocus={false}
  options={
    Array [
      Object {
        "label": "option1",
        "value": "value1",
      },
      Object {
        "label": "option2",
        "value": "value2",
      },
    ]
  }
  placeholder="Please Select"
  promptTextCreator={[Function]}
  resetValue=""
  shouldKeyDownEventCreateNewOption={[Function]}
  showNewOptionAtTop={true}
  value=""
/>
`;

exports[`<SelectInput /> should render a multi select box with options 1`] = `
<Select
  arrowRenderer={[Function]}
  autosize={true}
  backspaceRemoves={true}
  backspaceToRemoveMessage="Press backspace to remove {label}"
  className="react-select-test selectInput"
  clearAllText="Clear all"
  clearRenderer={[Function]}
  clearValueText="Clear value"
  clearable={true}
  closeOnSelect={true}
  deleteRemoves={true}
  delimiter=","
  disabled={false}
  escapeClearsValue={true}
  filterOptions={[Function]}
  ignoreAccents={true}
  ignoreCase={true}
  inputProps={Object {}}
  isLoading={false}
  joinValues={false}
  labelKey="label"
  matchPos="any"
  matchProp="any"
  menuBuffer={0}
  menuRenderer={[Function]}
  multi={true}
  name="test[]"
  noResultsText="No results found"
  onBlurResetsInput={true}
  onCloseResetsInput={true}
  onSelectResetsInput={true}
  openOnClick={true}
  openOnFocus={false}
  optionComponent={[Function]}
  options={
    Array [
      Object {
        "label": "option1",
        "value": "value1",
      },
      Object {
        "label": "option2",
        "value": "value2",
      },
    ]
  }
  pageSize={5}
  placeholder="Please Select"
  removeSelected={true}
  required={false}
  resetValue=""
  rtl={false}
  scrollMenuIntoView={true}
  searchable={true}
  simpleValue={false}
  tabSelectsValue={true}
  trimFilter={true}
  value=""
  valueComponent={[Function]}
  valueKey="value"
/>
`;

exports[`<SelectInput /> should render a select box with options 1`] = `
<Select
  arrowRenderer={[Function]}
  autosize={true}
  backspaceRemoves={true}
  backspaceToRemoveMessage="Press backspace to remove {label}"
  className="react-select-test selectInput"
  clearAllText="Clear all"
  clearRenderer={[Function]}
  clearValueText="Clear value"
  clearable={true}
  closeOnSelect={true}
  deleteRemoves={true}
  delimiter=","
  disabled={false}
  escapeClearsValue={true}
  filterOptions={[Function]}
  ignoreAccents={true}
  ignoreCase={true}
  inputProps={Object {}}
  isLoading={false}
  joinValues={false}
  labelKey="label"
  matchPos="any"
  matchProp="any"
  menuBuffer={0}
  menuRenderer={[Function]}
  multi={false}
  name="test"
  noResultsText="No results found"
  onBlurResetsInput={true}
  onCloseResetsInput={true}
  onSelectResetsInput={true}
  openOnClick={true}
  openOnFocus={false}
  optionComponent={[Function]}
  options={
    Array [
      Object {
        "label": "option1",
        "value": "value1",
      },
      Object {
        "label": "option2",
        "value": "value2",
      },
    ]
  }
  pageSize={5}
  placeholder="Please Select"
  removeSelected={true}
  required={false}
  resetValue=""
  rtl={false}
  scrollMenuIntoView={true}
  searchable={true}
  simpleValue={false}
  tabSelectsValue={true}
  trimFilter={true}
  value=""
  valueComponent={[Function]}
  valueKey="value"
/>
`;

exports[`<SelectInput /> should render a select box with promise options 1`] = `
<Async
  autoload={true}
  cache={Object {}}
  className="react-select-test selectInput"
  clearable={true}
  disabled={false}
  ignoreAccents={true}
  ignoreCase={true}
  isLoading={false}
  loadOptions={[Function]}
  loadingPlaceholder="Loading..."
  multi={false}
  name="test"
  onBlurResetsInput={true}
  onCloseResetsInput={true}
  onSelectResetsInput={true}
  openOnFocus={false}
  options={Array []}
  placeholder="Please Select"
  resetValue=""
  searchPromptText="Type to search"
  value=""
>
  <Component />
</Async>
`;

exports[`<SelectInput /> should render with async options 1`] = `
<Async
  autoload={true}
  cache={Object {}}
  className="react-select-test selectInput"
  clearable={true}
  disabled={false}
  filterOptions={[Function]}
  ignoreAccents={true}
  ignoreCase={true}
  isLoading={false}
  loadOptions={[Function]}
  loadingPlaceholder="Loading..."
  multi={false}
  name="test"
  onBlurResetsInput={true}
  onCloseResetsInput={true}
  onSelectResetsInput={true}
  openOnFocus={false}
  options={Array []}
  placeholder="Please Select"
  resetValue=""
  searchPromptText="Type to search"
  value=""
>
  <Component />
</Async>
`;
