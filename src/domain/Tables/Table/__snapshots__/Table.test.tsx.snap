// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Table /> should render a table 1`] = `
.c13 {
  display: inline-block;
  font-stretch: normal;
  --fa-primary-color: #2512B3;
  --fa-secondary-color: #2512B3;
}

.c13.icon {
  text-align: center;
  font-size: 1rem;
}

.c17 {
  cursor: help;
}

.c12 {
  outline: none;
  cursor: pointer;
  width: 32px;
  height: 32px;
  border-radius: 32px;
  -webkit-transition: 0.15s ease-in;
  transition: 0.15s ease-in;
  color: #667380;
}

.c12:hover {
  color: #424F5C;
  background: #EDF1F5;
  -webkit-transition: 0.2s ease-out;
  transition: 0.2s ease-out;
}

.c18 {
  outline: none;
  cursor: pointer;
  width: 32px;
  height: 32px;
  border-radius: 32px;
  -webkit-transition: 0.15s ease-in;
  transition: 0.15s ease-in;
  color: #F25749;
}

.c18:hover {
  color: #D41200;
  background: #FFD2CC;
  -webkit-transition: 0.2s ease-out;
  transition: 0.2s ease-out;
}

.c2 {
  background: none;
  border-bottom: none;
}

.c0 {
  border: 1px solid #EDF1F5;
}

.c1 {
  margin: 0;
  overflow: hidden;
  border-collapse: collapse;
  border-spacing: 0;
}

.c8 {
  padding: 12px 16px;
  text-align: left;
  width: 100%;
}

.c14 {
  padding: 12px 16px;
  text-align: left;
  padding: 12px 16px 12px 12px;
  text-align: right;
}

.c5 {
  padding: 12px 12px 12px 16px;
  text-align: center;
  width: 32px;
}

.c19 {
  padding: 12px;
  text-align: left;
}

.c20 {
  padding: 12px;
  text-align: left;
  text-align: right;
  padding: 12px 16px 12px 12px;
}

.c22 {
  border-bottom: 1px solid #EDF1F5;
  background: #FFFFFF;
}

.c4 {
  white-space: nowrap;
  border-bottom: 1px solid #EDF1F5;
  border-top: 1px solid #EDF1F5;
  background: #FFFFFF;
  -webkit-transition: -webkit-transform 0.2s ease-out;
  -webkit-transition: transform 0.2s ease-out;
  transition: transform 0.2s ease-out;
  height: 58px;
}

.c16 {
  white-space: nowrap;
  border-bottom: 1px solid #EDF1F5;
  border-top: 1px solid #EDF1F5;
  background: #FFFFFF;
  -webkit-transition: -webkit-transform 0.2s ease-out;
  -webkit-transition: transform 0.2s ease-out;
  transition: transform 0.2s ease-out;
  height: 58px;
}

.c16:hover {
  background: #FFF1F0;
}

.c16:hover {
  cursor: pointer;
}

.c21 {
  white-space: nowrap;
  border-bottom: 1px solid #EDF1F5;
  border-top: 1px solid #EDF1F5;
  background: #FFFFFF;
  -webkit-transition: -webkit-transform 0.2s ease-out;
  -webkit-transition: transform 0.2s ease-out;
  transition: transform 0.2s ease-out;
  height: 58px;
  border-bottom: none;
}

.c26 {
  white-space: nowrap;
  border-bottom: 1px solid #EDF1F5;
  border-top: 1px solid #EDF1F5;
  background: #FFFFFF;
  -webkit-transition: -webkit-transform 0.2s ease-out;
  -webkit-transition: transform 0.2s ease-out;
  transition: transform 0.2s ease-out;
  height: 58px;
}

.c26:hover {
  background: #FAFBFC;
}

.c26:hover {
  cursor: pointer;
}

.c23 {
  height: 2px;
  padding: 0;
}

.c24 {
  height: 100%;
  -webkit-animation-name: bqbqsY;
  animation-name: bqbqsY;
  -webkit-animation-duration: 1s;
  animation-duration: 1s;
  -webkit-animation-timing-function: ease-in-out;
  animation-timing-function: ease-in-out;
  width: 70%;
  background: #8FA1B3;
}

.c25 {
  height: 100%;
  -webkit-animation-name: jxTSlB;
  animation-name: jxTSlB;
  -webkit-animation-duration: 1s;
  animation-duration: 1s;
  -webkit-animation-timing-function: ease-in-out;
  animation-timing-function: ease-in-out;
  width: 50%;
  background: #8FA1B3;
}

.c11 {
  display: none;
  margin: 0;
  -webkit-transition: -webkit-transform .2s ease-out,display .2s ease-out;
  -webkit-transition: transform .2s ease-out,display .2s ease-out;
  transition: transform .2s ease-out,display .2s ease-out;
  margin-left: 8px;
}

.c27:hover .c11 {
  display: inline-block;
}

.c15 {
  display: none;
  margin: 0;
  -webkit-transition: -webkit-transform .2s ease-out,display .2s ease-out;
  -webkit-transition: transform .2s ease-out,display .2s ease-out;
  transition: transform .2s ease-out,display .2s ease-out;
  margin-right: 8px;
  display: inline-block;
}

.c27:hover .c15 {
  display: inline-block;
}

.c6 {
  line-height: 16px;
  height: 0;
  opacity: 0;
  position: absolute;
  width: 0;
  margin: 0;
}

.c6::-ms-clear {
  display: none;
}

.c6 + label {
  margin: 0;
}

.c6:disabled + label {
  margin: 0;
  color: #8FA1B3;
  cursor: not-allowed;
}

.c6:disabled + label::before {
  background-color: #FAFBFC;
  border-color: #E1E6EB;
}

.c6:focus + label {
  margin: 0;
}

.c6:focus + label.checkbox {
  border-color: #432DF3;
}

.c6:focus + label.checkbox::before {
  background-color: #E1E6EB;
  border-color: #432DF3;
}

.c6:focus + label.checkbox-button {
  background-color: #F5F7FA;
  border-color: #432DF3;
}

.c6:checked + label {
  margin: 0;
  border-color: #0F0080;
}

.c6:checked + label::before {
  border-color: #432DF3;
}

.c6:checked + label:hover {
  border-color: #432DF3;
}

.c6:checked + label:hover::before {
  border-color: #432DF3;
}

.c7 {
  width: 20px;
  height: 20px;
  position: relative;
  cursor: pointer;
  -webkit-transition: .25s ease-out;
  transition: .25s ease-out;
  margin: 0;
}

.c7::before {
  background-color: #FAFBFC;
  border: 2px solid #C5CED6;
  border-radius: 4px;
  content: '';
  display: inline-block;
  height: 20px;
  left: 0;
  position: absolute;
  top: 4px;
  -webkit-transition: .25s ease-out,color .25s ease-out;
  transition: .25s ease-out,color .25s ease-out;
  vertical-align: top;
  width: 20px;
}

.c7:hover::before {
  background-color: #E1E6EB;
  border-color: #667380;
}

.c3:hover .c7::before {
  background-color: #E1E6EB;
  border-color: #667380;
  -webkit-transition: .25s ease-out,color .25s ease-out;
  transition: .25s ease-out,color .25s ease-out;
}

.c9 {
  font-size: 16px;
  line-height: 24px;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  color: #424F5C;
  font-weight: 600;
}

.c10,
.c10:link,
.c10:visited,
.c10:hover,
.c10:active {
  color: inherit;
}

<Table
  columns={
    Array [
      Object {
        "alignment": "left",
        "content": [Function],
        "name": "fileName",
        "size": "auto",
        "title": "file name",
      },
      Object {
        "alignment": "right",
        "content": [Function],
        "name": "createAt",
        "size": "shrink",
        "title": "created at",
      },
    ]
  }
  emptyState={
    <div>
      empty
    </div>
  }
  onSelectionChanged={
    [MockFunction] {
      "calls": Array [
        Array [
          Array [],
        ],
        Array [
          Array [],
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  onSortChange={[MockFunction]}
  rows={
    Array [
      Object {
        "contentOverride": [Function],
        "data": Object {
          "createAt": "05/01/2018",
          "fileName": "fail.pdf",
          "fileType": "PDF",
          "size": "8.2",
        },
        "id": "0",
        "isRemovable": true,
        "isSelectable": false,
        "onClick": [MockFunction],
        "variant": "red",
      },
      Object {
        "contentOverride": [Function],
        "data": Object {
          "createAt": "05/01/2018",
          "fileName": "uploading.pdf",
          "fileType": "PDF",
          "size": "99",
        },
        "id": "1",
        "isRemovable": true,
        "isSelectable": false,
        "progress": 0.7,
      },
      Object {
        "contentOverride": [Function],
        "data": Object {
          "createAt": "05/01/2018",
          "fileName": "success.pdf",
          "fileType": "PDF",
          "size": "3.7",
        },
        "id": "2",
        "isRemovable": true,
        "isSelectable": false,
        "progress": 0.5,
      },
      Object {
        "data": Object {
          "createAt": "05/01/2018",
          "fileName": "test.pdf",
          "fileType": "PDF",
          "size": "2.2",
        },
        "id": "3",
        "isSelectable": true,
      },
      Object {
        "data": Object {
          "createAt": "05/01/2018",
          "fileName": "test1.pdf",
          "fileType": "PDF",
          "size": "1.5",
        },
        "id": "4",
        "isSelectable": true,
      },
    ]
  }
  sort={
    Object {
      "createAt": "down",
    }
  }
>
  <styled.div
    data-component-type="table"
  >
    <StyledComponent
      data-component-type="table"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-iwsKbI",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  border: 1px solid ",
              "#EDF1F5",
              ";

  ",
              [Function],
              "
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-iwsKbI",
          "target": "div",
          "toString": [Function],
          "usesTheme": false,
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
        data-component-type="table"
      >
        <styled.table>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gZMcBi",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  margin: 0;
  overflow: hidden;
  border-collapse: collapse;
  border-spacing: 0;
",
                  ],
                },
                "displayName": "styled.table",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gZMcBi",
                "target": "table",
                "toString": [Function],
                "usesTheme": false,
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <table
              className="c1"
            >
              <styled.thead>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-dnqmqq",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  background: none;
  border-bottom: none;
",
                        ],
                      },
                      "displayName": "styled.thead",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-dnqmqq",
                      "target": "thead",
                      "toString": [Function],
                      "usesTheme": false,
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <thead
                    className="c2"
                  >
                    <TableHeader
                      columns={
                        Array [
                          Object {
                            "alignment": "left",
                            "content": [Function],
                            "name": "fileName",
                            "size": "auto",
                            "title": "file name",
                          },
                          Object {
                            "alignment": "right",
                            "content": [Function],
                            "name": "createAt",
                            "size": "shrink",
                            "title": "created at",
                          },
                        ]
                      }
                      hasBulkAction={false}
                      hasTableSwipeActions={false}
                      isEmpty={false}
                      isMobile={false}
                      onSortChange={[MockFunction]}
                      selectedAll="false"
                      setSelectedAll={[Function]}
                      sort={
                        Object {
                          "createAt": "down",
                        }
                      }
                    >
                      <styled.tr
                        variant="neutral"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c3",
                                "isStatic": false,
                                "lastClassName": "c26",
                                "rules": Array [
                                  "
  white-space: nowrap;
  border-bottom: 1px solid ",
                                  "#EDF1F5",
                                  ";
  border-top: 1px solid ",
                                  "#EDF1F5",
                                  ";
  background: ",
                                  "#FFFFFF",
                                  ";
  transition: transform 0.2s ease-out;
  height: ",
                                  "58",
                                  "px;

  ",
                                  [Function],
                                  "

  ",
                                  [Function],
                                  "

  ",
                                  [Function],
                                  "

  ",
                                  [Function],
                                  "

  ",
                                  [Function],
                                  "
",
                                ],
                              },
                              "displayName": "styled.tr",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c3",
                              "target": "tr",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          variant="neutral"
                        >
                          <tr
                            className="c3 c4"
                          >
                            <styled.th>
                              <StyledComponent
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-jTzLTM",
                                      "isStatic": false,
                                      "lastClassName": "c5",
                                      "rules": Array [
                                        "
  padding: ",
                                        "12",
                                        "px ",
                                        "12",
                                        "px ",
                                        "12",
                                        "px ",
                                        "16",
                                        "px;
  text-align: center;
  width: ",
                                        "32",
                                        "px;
",
                                      ],
                                    },
                                    "displayName": "styled.th",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-jTzLTM",
                                    "target": "th",
                                    "toString": [Function],
                                    "usesTheme": false,
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                              >
                                <th
                                  className="c5"
                                >
                                  <TableCheckboxInput
                                    name="selectAll"
                                    onChange={[Function]}
                                    value="false"
                                  >
                                    <styled.input
                                      checked={false}
                                      data-component-type="checkbox_input"
                                      id="selectAll"
                                      labelValue="false"
                                      name="selectAll"
                                      onChange={[Function]}
                                      type="checkbox"
                                      value={0}
                                    >
                                      <StyledComponent
                                        checked={false}
                                        data-component-type="checkbox_input"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-jKJlTe",
                                              "isStatic": false,
                                              "lastClassName": "c6",
                                              "rules": Array [
                                                "
  line-height: 16px;
  height: 0;
  opacity: 0;
  position: absolute;
  width: 0;

  margin: 0;

  &::-ms-clear {
    display: none;
  }

  & + label {
    margin: 0;
  }

  &:disabled + label {
    margin: 0;
    color: ",
                                                "#8FA1B3",
                                                ";
    cursor: not-allowed;

    &::before {
      background-color: ",
                                                "#FAFBFC",
                                                ";
      border-color: ",
                                                "#E1E6EB",
                                                ";
    }
  }

  &:focus + label {
    margin: 0;
    &.checkbox {
      border-color: ",
                                                "#432DF3",
                                                ";

      &::before {
        background-color: ",
                                                "#E1E6EB",
                                                ";
        border-color: ",
                                                "#432DF3",
                                                ";
      }
    }

    &.checkbox-button {
      background-color: ",
                                                "#F5F7FA",
                                                ";
      border-color: ",
                                                "#432DF3",
                                                ";
    }
  }

  &:checked + label {
    margin: 0;
    border-color: ",
                                                "#0F0080",
                                                ";

    &::before {
      border-color: ",
                                                "#432DF3",
                                                ";
    }

    &:hover {
      border-color: ",
                                                "#432DF3",
                                                ";

      &::before {
        border-color: ",
                                                "#432DF3",
                                                ";
      }
    }
  }

  ",
                                                [Function],
                                                "
",
                                              ],
                                            },
                                            "displayName": "styled.input",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-jKJlTe",
                                            "target": "input",
                                            "toString": [Function],
                                            "usesTheme": false,
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        id="selectAll"
                                        labelValue="false"
                                        name="selectAll"
                                        onChange={[Function]}
                                        type="checkbox"
                                        value={0}
                                      >
                                        <input
                                          checked={false}
                                          className="c6"
                                          data-component-type="checkbox_input"
                                          id="selectAll"
                                          name="selectAll"
                                          onChange={[Function]}
                                          type="checkbox"
                                          value={0}
                                        />
                                      </StyledComponent>
                                    </styled.input>
                                    <styled.label
                                      htmlFor="selectAll"
                                      value="false"
                                    >
                                      <StyledComponent
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-eNQAEJ",
                                              "isStatic": false,
                                              "lastClassName": "c7",
                                              "rules": Array [
                                                "
  width:20px;
  height:20px;
  position: relative;
  cursor: pointer;
  transition: .25s ease-out;
  margin: 0;

  &::before {
      background-color: ",
                                                "#FAFBFC",
                                                ";
      border: 2px solid  ",
                                                "#C5CED6",
                                                ";
      border-radius: ",
                                                "4",
                                                "px;
      content: '';
      display: inline-block;
      height: 20px;
      left: 0;
      position: absolute;
      top: 4px;
      transition: .25s ease-out, color .25s ease-out;
      vertical-align: top;
      width: 20px;
    }

  &:hover {

    &::before {
      background-color: ",
                                                "#E1E6EB",
                                                ";
      border-color: ",
                                                "#667380",
                                                ";
    }
  }

  ",
                                                [Function],
                                                "
",
                                              ],
                                            },
                                            "displayName": "styled.label",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-eNQAEJ",
                                            "target": "label",
                                            "toString": [Function],
                                            "usesTheme": false,
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        htmlFor="selectAll"
                                        value="false"
                                      >
                                        <label
                                          className="c7"
                                          htmlFor="selectAll"
                                          value="false"
                                        />
                                      </StyledComponent>
                                    </styled.label>
                                  </TableCheckboxInput>
                                </th>
                              </StyledComponent>
                            </styled.th>
                            <styled.th
                              alignment="left"
                              isFirstColumn={false}
                              isLastColumn={false}
                              key="fileName"
                              size="auto"
                            >
                              <StyledComponent
                                alignment="left"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-VigVT",
                                      "isStatic": false,
                                      "lastClassName": "c14",
                                      "rules": Array [
                                        "
  padding:  ",
                                        "12",
                                        "px ",
                                        "16",
                                        "px;
  text-align: left;

  ",
                                        [Function],
                                        "

  ",
                                        [Function],
                                        "

  ",
                                        [Function],
                                        "

  ",
                                        [Function],
                                        "
",
                                      ],
                                    },
                                    "displayName": "styled.th",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-VigVT",
                                    "target": "th",
                                    "toString": [Function],
                                    "usesTheme": false,
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isFirstColumn={false}
                                isLastColumn={false}
                                size="auto"
                              >
                                <th
                                  className="c8"
                                  size="auto"
                                >
                                  <TableHeaderCellContent
                                    column={
                                      Object {
                                        "alignment": "left",
                                        "content": [Function],
                                        "name": "fileName",
                                        "size": "auto",
                                        "title": "file name",
                                      }
                                    }
                                    hasTableSwipeActions={false}
                                    isFirstColumn={false}
                                    isLastColumn={false}
                                    onSortChange={[MockFunction]}
                                    sort={
                                      Object {
                                        "createAt": "down",
                                      }
                                    }
                                  >
                                    <span
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                    >
                                      <Text
                                        isInline={true}
                                        tag="span"
                                        type="body"
                                        weight={600}
                                      >
                                        <styled.span
                                          as="span"
                                          data-component-type="text"
                                          isInline={true}
                                          textType="body"
                                          weight={600}
                                        >
                                          <StyledComponent
                                            as="span"
                                            data-component-type="text"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-cMljjf",
                                                  "isStatic": false,
                                                  "lastClassName": "c9",
                                                  "rules": Array [
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "
",
                                                  ],
                                                },
                                                "displayName": "styled.span",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-cMljjf",
                                                "target": "span",
                                                "toString": [Function],
                                                "usesTheme": false,
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            isInline={true}
                                            textType="body"
                                            weight={600}
                                          >
                                            <span
                                              className="c9"
                                              data-component-type="text"
                                            >
                                              <Link
                                                onClick={[Function]}
                                                variant="unstyled"
                                              >
                                                <styled.a
                                                  onClick={[Function]}
                                                  role="button"
                                                  variant="unstyled"
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-jAaTju",
                                                          "isStatic": false,
                                                          "lastClassName": "c10",
                                                          "rules": Array [
                                                            "
  &:hover {
    ",
                                                            [Function],
                                                            "
  }

  ",
                                                            [Function],
                                                            "
",
                                                          ],
                                                        },
                                                        "displayName": "styled.a",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-jAaTju",
                                                        "target": "a",
                                                        "toString": [Function],
                                                        "usesTheme": false,
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    onClick={[Function]}
                                                    role="button"
                                                    variant="unstyled"
                                                  >
                                                    <a
                                                      className="c10"
                                                      onClick={[Function]}
                                                      role="button"
                                                    >
                                                      file name
                                                    </a>
                                                  </StyledComponent>
                                                </styled.a>
                                              </Link>
                                            </span>
                                          </StyledComponent>
                                        </styled.span>
                                      </Text>
                                    </span>
                                    <styled.div
                                      alignment="left"
                                      onClick={[Function]}
                                    >
                                      <StyledComponent
                                        alignment="left"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-ckVGcZ",
                                              "isStatic": false,
                                              "lastClassName": "c15",
                                              "rules": Array [
                                                "
  display: none;
  margin: 0;
  transition: transform .2s ease-out, display .2s ease-out;

  ",
                                                [Function],
                                                "

  ",
                                                [Function],
                                                "

  ",
                                                [Function],
                                                "

  ",
                                                [Function],
                                                "

  ",
                                                ".c27",
                                                ":hover & {
    display: inline-block;
  }
",
                                              ],
                                            },
                                            "displayName": "styled.div",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-ckVGcZ",
                                            "target": "div",
                                            "toString": [Function],
                                            "usesTheme": false,
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onClick={[Function]}
                                      >
                                        <div
                                          className="c11"
                                          onClick={[Function]}
                                        >
                                          <FontAwesomeIconButton
                                            icon="arrow-down"
                                            isHovered={false}
                                            type="solid"
                                          >
                                            <styled.button
                                              data-component-type="font_awesome_icon_button"
                                              isHovered={false}
                                              isSelected={false}
                                              variant="neutral"
                                            >
                                              <StyledComponent
                                                data-component-type="font_awesome_icon_button"
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-bZQynM",
                                                      "isStatic": false,
                                                      "lastClassName": "c12",
                                                      "rules": Array [
                                                        "
  outline: none;
  cursor: pointer;
  width: ",
                                                        "32",
                                                        "px;
  height: ",
                                                        "32",
                                                        "px;
  border-radius: ",
                                                        "32",
                                                        "px;
  transition: 0.15s ease-in;
  ",
                                                        [Function],
                                                        ";
  ",
                                                        [Function],
                                                        "
  ",
                                                        [Function],
                                                        "

  ",
                                                        [Function],
                                                        "
",
                                                      ],
                                                    },
                                                    "displayName": "styled.button",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-bZQynM",
                                                    "target": "button",
                                                    "toString": [Function],
                                                    "usesTheme": false,
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                isHovered={false}
                                                isSelected={false}
                                                variant="neutral"
                                              >
                                                <button
                                                  className="c12"
                                                  data-component-type="font_awesome_icon_button"
                                                >
                                                  <FontAwesomeIcon
                                                    icon="arrow-down"
                                                    type="solid"
                                                  >
                                                    <Icon
                                                      icon="fas fa-arrow-down"
                                                    >
                                                      <styled.i
                                                        aria-hidden={true}
                                                        className="icon fas fa-arrow-down"
                                                        size="medium"
                                                      >
                                                        <StyledComponent
                                                          aria-hidden={true}
                                                          className="icon fas fa-arrow-down"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htpNat",
                                                                "isStatic": false,
                                                                "lastClassName": "c13",
                                                                "rules": Array [
                                                                  "
  display: inline-block;
  font-stretch: normal;
  --fa-primary-color: ",
                                                                  "#2512B3",
                                                                  ";
  --fa-secondary-color: ",
                                                                  "#2512B3",
                                                                  ";

  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "
  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "

  &.icon {
    text-align: center;

  ",
                                                                  [Function],
                                                                  "
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.i",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htpNat",
                                                              "target": "i",
                                                              "toString": [Function],
                                                              "usesTheme": false,
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          size="medium"
                                                        >
                                                          <i
                                                            aria-hidden={true}
                                                            className="c13 icon fas fa-arrow-down"
                                                            size="medium"
                                                          />
                                                        </StyledComponent>
                                                      </styled.i>
                                                    </Icon>
                                                  </FontAwesomeIcon>
                                                </button>
                                              </StyledComponent>
                                            </styled.button>
                                          </FontAwesomeIconButton>
                                        </div>
                                      </StyledComponent>
                                    </styled.div>
                                  </TableHeaderCellContent>
                                </th>
                              </StyledComponent>
                            </styled.th>
                            <styled.th
                              alignment="right"
                              isFirstColumn={false}
                              isLastColumn={true}
                              key="createAt"
                              size="shrink"
                            >
                              <StyledComponent
                                alignment="right"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-VigVT",
                                      "isStatic": false,
                                      "lastClassName": "c14",
                                      "rules": Array [
                                        "
  padding:  ",
                                        "12",
                                        "px ",
                                        "16",
                                        "px;
  text-align: left;

  ",
                                        [Function],
                                        "

  ",
                                        [Function],
                                        "

  ",
                                        [Function],
                                        "

  ",
                                        [Function],
                                        "
",
                                      ],
                                    },
                                    "displayName": "styled.th",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-VigVT",
                                    "target": "th",
                                    "toString": [Function],
                                    "usesTheme": false,
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isFirstColumn={false}
                                isLastColumn={true}
                                size="shrink"
                              >
                                <th
                                  className="c14"
                                  size="shrink"
                                >
                                  <TableHeaderCellContent
                                    column={
                                      Object {
                                        "alignment": "right",
                                        "content": [Function],
                                        "name": "createAt",
                                        "size": "shrink",
                                        "title": "created at",
                                      }
                                    }
                                    hasTableSwipeActions={false}
                                    isFirstColumn={false}
                                    isLastColumn={true}
                                    onSortChange={[MockFunction]}
                                    sort={
                                      Object {
                                        "createAt": "down",
                                      }
                                    }
                                  >
                                    <styled.div
                                      alignment="right"
                                      onClick={[Function]}
                                      sort="down"
                                    >
                                      <StyledComponent
                                        alignment="right"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-ckVGcZ",
                                              "isStatic": false,
                                              "lastClassName": "c15",
                                              "rules": Array [
                                                "
  display: none;
  margin: 0;
  transition: transform .2s ease-out, display .2s ease-out;

  ",
                                                [Function],
                                                "

  ",
                                                [Function],
                                                "

  ",
                                                [Function],
                                                "

  ",
                                                [Function],
                                                "

  ",
                                                ".c27",
                                                ":hover & {
    display: inline-block;
  }
",
                                              ],
                                            },
                                            "displayName": "styled.div",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-ckVGcZ",
                                            "target": "div",
                                            "toString": [Function],
                                            "usesTheme": false,
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onClick={[Function]}
                                        sort="down"
                                      >
                                        <div
                                          className="c15"
                                          onClick={[Function]}
                                        >
                                          <FontAwesomeIconButton
                                            icon="arrow-down"
                                            isHovered={false}
                                            type="solid"
                                          >
                                            <styled.button
                                              data-component-type="font_awesome_icon_button"
                                              isHovered={false}
                                              isSelected={false}
                                              variant="neutral"
                                            >
                                              <StyledComponent
                                                data-component-type="font_awesome_icon_button"
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-bZQynM",
                                                      "isStatic": false,
                                                      "lastClassName": "c12",
                                                      "rules": Array [
                                                        "
  outline: none;
  cursor: pointer;
  width: ",
                                                        "32",
                                                        "px;
  height: ",
                                                        "32",
                                                        "px;
  border-radius: ",
                                                        "32",
                                                        "px;
  transition: 0.15s ease-in;
  ",
                                                        [Function],
                                                        ";
  ",
                                                        [Function],
                                                        "
  ",
                                                        [Function],
                                                        "

  ",
                                                        [Function],
                                                        "
",
                                                      ],
                                                    },
                                                    "displayName": "styled.button",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-bZQynM",
                                                    "target": "button",
                                                    "toString": [Function],
                                                    "usesTheme": false,
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                isHovered={false}
                                                isSelected={false}
                                                variant="neutral"
                                              >
                                                <button
                                                  className="c12"
                                                  data-component-type="font_awesome_icon_button"
                                                >
                                                  <FontAwesomeIcon
                                                    icon="arrow-down"
                                                    type="solid"
                                                  >
                                                    <Icon
                                                      icon="fas fa-arrow-down"
                                                    >
                                                      <styled.i
                                                        aria-hidden={true}
                                                        className="icon fas fa-arrow-down"
                                                        size="medium"
                                                      >
                                                        <StyledComponent
                                                          aria-hidden={true}
                                                          className="icon fas fa-arrow-down"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htpNat",
                                                                "isStatic": false,
                                                                "lastClassName": "c13",
                                                                "rules": Array [
                                                                  "
  display: inline-block;
  font-stretch: normal;
  --fa-primary-color: ",
                                                                  "#2512B3",
                                                                  ";
  --fa-secondary-color: ",
                                                                  "#2512B3",
                                                                  ";

  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "
  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "

  &.icon {
    text-align: center;

  ",
                                                                  [Function],
                                                                  "
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.i",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htpNat",
                                                              "target": "i",
                                                              "toString": [Function],
                                                              "usesTheme": false,
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          size="medium"
                                                        >
                                                          <i
                                                            aria-hidden={true}
                                                            className="c13 icon fas fa-arrow-down"
                                                            size="medium"
                                                          />
                                                        </StyledComponent>
                                                      </styled.i>
                                                    </Icon>
                                                  </FontAwesomeIcon>
                                                </button>
                                              </StyledComponent>
                                            </styled.button>
                                          </FontAwesomeIconButton>
                                        </div>
                                      </StyledComponent>
                                    </styled.div>
                                    <span
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                    >
                                      <Text
                                        isInline={true}
                                        tag="span"
                                        type="body"
                                        weight={600}
                                      >
                                        <styled.span
                                          as="span"
                                          data-component-type="text"
                                          isInline={true}
                                          textType="body"
                                          weight={600}
                                        >
                                          <StyledComponent
                                            as="span"
                                            data-component-type="text"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-cMljjf",
                                                  "isStatic": false,
                                                  "lastClassName": "c9",
                                                  "rules": Array [
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "
",
                                                  ],
                                                },
                                                "displayName": "styled.span",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-cMljjf",
                                                "target": "span",
                                                "toString": [Function],
                                                "usesTheme": false,
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            isInline={true}
                                            textType="body"
                                            weight={600}
                                          >
                                            <span
                                              className="c9"
                                              data-component-type="text"
                                            >
                                              <Link
                                                onClick={[Function]}
                                                variant="unstyled"
                                              >
                                                <styled.a
                                                  onClick={[Function]}
                                                  role="button"
                                                  variant="unstyled"
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-jAaTju",
                                                          "isStatic": false,
                                                          "lastClassName": "c10",
                                                          "rules": Array [
                                                            "
  &:hover {
    ",
                                                            [Function],
                                                            "
  }

  ",
                                                            [Function],
                                                            "
",
                                                          ],
                                                        },
                                                        "displayName": "styled.a",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-jAaTju",
                                                        "target": "a",
                                                        "toString": [Function],
                                                        "usesTheme": false,
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    onClick={[Function]}
                                                    role="button"
                                                    variant="unstyled"
                                                  >
                                                    <a
                                                      className="c10"
                                                      onClick={[Function]}
                                                      role="button"
                                                    >
                                                      created at
                                                    </a>
                                                  </StyledComponent>
                                                </styled.a>
                                              </Link>
                                            </span>
                                          </StyledComponent>
                                        </styled.span>
                                      </Text>
                                    </span>
                                  </TableHeaderCellContent>
                                </th>
                              </StyledComponent>
                            </styled.th>
                          </tr>
                        </StyledComponent>
                      </styled.tr>
                    </TableHeader>
                  </thead>
                </StyledComponent>
              </styled.thead>
              <tbody>
                <TableRow
                  columns={
                    Array [
                      Object {
                        "alignment": "left",
                        "content": [Function],
                        "name": "fileName",
                        "size": "auto",
                        "title": "file name",
                      },
                      Object {
                        "alignment": "right",
                        "content": [Function],
                        "name": "createAt",
                        "size": "shrink",
                        "title": "created at",
                      },
                    ]
                  }
                  hasTableSwipeActions={false}
                  isMobile={false}
                  key="0"
                  row={
                    Object {
                      "contentOverride": [Function],
                      "data": Object {
                        "createAt": "05/01/2018",
                        "fileName": "fail.pdf",
                        "fileType": "PDF",
                        "size": "8.2",
                      },
                      "id": "0",
                      "isRemovable": true,
                      "isSelectable": false,
                      "onClick": [MockFunction],
                      "variant": "red",
                    }
                  }
                  selectedRows={
                    Object {
                      "3": false,
                      "4": false,
                    }
                  }
                  setSelectedRows={[Function]}
                >
                  <styled.tr
                    isHoverable={true}
                    isSelected={false}
                    movement={0}
                    onMouseDown={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onTouchStart={[Function]}
                    variant="red"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "c3",
                            "isStatic": false,
                            "lastClassName": "c26",
                            "rules": Array [
                              "
  white-space: nowrap;
  border-bottom: 1px solid ",
                              "#EDF1F5",
                              ";
  border-top: 1px solid ",
                              "#EDF1F5",
                              ";
  background: ",
                              "#FFFFFF",
                              ";
  transition: transform 0.2s ease-out;
  height: ",
                              "58",
                              "px;

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.tr",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "c3",
                          "target": "tr",
                          "toString": [Function],
                          "usesTheme": false,
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      isHoverable={true}
                      isSelected={false}
                      movement={0}
                      onMouseDown={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTouchStart={[Function]}
                      variant="red"
                    >
                      <tr
                        className="c3 c16"
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onTouchStart={[Function]}
                      >
                        <styled.th>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-jTzLTM",
                                  "isStatic": false,
                                  "lastClassName": "c5",
                                  "rules": Array [
                                    "
  padding: ",
                                    "12",
                                    "px ",
                                    "12",
                                    "px ",
                                    "12",
                                    "px ",
                                    "16",
                                    "px;
  text-align: center;
  width: ",
                                    "32",
                                    "px;
",
                                  ],
                                },
                                "displayName": "styled.th",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-jTzLTM",
                                "target": "th",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <th
                              className="c5"
                            >
                              <FontAwesomeIconButton
                                icon="times"
                                onClick={[Function]}
                                tooltipText="Delete"
                                type="regular"
                                variant="red"
                              >
                                <TooltipPopover
                                  data-component-type="font_awesome_icon_button"
                                  toggleComponent={[Function]}
                                  variant="dark"
                                >
                                  <styled.span>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-ifAKCX",
                                            "isStatic": false,
                                            "lastClassName": "c17",
                                            "rules": Array [
                                              "
  cursor: ",
                                              [Function],
                                              ";
",
                                            ],
                                          },
                                          "displayName": "styled.span",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-ifAKCX",
                                          "target": "span",
                                          "toString": [Function],
                                          "usesTheme": false,
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <span
                                        className="c17"
                                      >
                                        <span
                                          aria-expanded={false}
                                          aria-haspopup={true}
                                          onMouseEnter={[Function]}
                                          onMouseLeave={[Function]}
                                          role="button"
                                        >
                                          <styled.button
                                            isHovered={false}
                                            isSelected={false}
                                            onClick={[Function]}
                                            variant="red"
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bZQynM",
                                                    "isStatic": false,
                                                    "lastClassName": "c12",
                                                    "rules": Array [
                                                      "
  outline: none;
  cursor: pointer;
  width: ",
                                                      "32",
                                                      "px;
  height: ",
                                                      "32",
                                                      "px;
  border-radius: ",
                                                      "32",
                                                      "px;
  transition: 0.15s ease-in;
  ",
                                                      [Function],
                                                      ";
  ",
                                                      [Function],
                                                      "
  ",
                                                      [Function],
                                                      "

  ",
                                                      [Function],
                                                      "
",
                                                    ],
                                                  },
                                                  "displayName": "styled.button",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bZQynM",
                                                  "target": "button",
                                                  "toString": [Function],
                                                  "usesTheme": false,
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              isHovered={false}
                                              isSelected={false}
                                              onClick={[Function]}
                                              variant="red"
                                            >
                                              <button
                                                className="c18"
                                                onClick={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  icon="times"
                                                  type="regular"
                                                >
                                                  <Icon
                                                    icon="far fa-times"
                                                  >
                                                    <styled.i
                                                      aria-hidden={true}
                                                      className="icon far fa-times"
                                                      size="medium"
                                                    >
                                                      <StyledComponent
                                                        aria-hidden={true}
                                                        className="icon far fa-times"
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-htpNat",
                                                              "isStatic": false,
                                                              "lastClassName": "c13",
                                                              "rules": Array [
                                                                "
  display: inline-block;
  font-stretch: normal;
  --fa-primary-color: ",
                                                                "#2512B3",
                                                                ";
  --fa-secondary-color: ",
                                                                "#2512B3",
                                                                ";

  ",
                                                                [Function],
                                                                "

  ",
                                                                [Function],
                                                                "
  ",
                                                                [Function],
                                                                "

  ",
                                                                [Function],
                                                                "

  ",
                                                                [Function],
                                                                "

  ",
                                                                [Function],
                                                                "

  ",
                                                                [Function],
                                                                "

  ",
                                                                [Function],
                                                                "

  &.icon {
    text-align: center;

  ",
                                                                [Function],
                                                                "
  }
",
                                                              ],
                                                            },
                                                            "displayName": "styled.i",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "sc-htpNat",
                                                            "target": "i",
                                                            "toString": [Function],
                                                            "usesTheme": false,
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                        size="medium"
                                                      >
                                                        <i
                                                          aria-hidden={true}
                                                          className="c13 icon far fa-times"
                                                          size="medium"
                                                        />
                                                      </StyledComponent>
                                                    </styled.i>
                                                  </Icon>
                                                </FontAwesomeIcon>
                                              </button>
                                            </StyledComponent>
                                          </styled.button>
                                        </span>
                                      </span>
                                    </StyledComponent>
                                  </styled.span>
                                  <Popover
                                    animationType="tooltip"
                                    id=""
                                    isOpen={false}
                                    parentAnchorPosition="auto"
                                    parentRef={
                                      Object {
                                        "current": .c1 {
  display: inline-block;
  font-stretch: normal;
  --fa-primary-color: #2512B3;
  --fa-secondary-color: #2512B3;
}

.c1.icon {
  text-align: center;
  font-size: 1rem;
}

.c0 {
  outline: none;
  cursor: pointer;
  width: 32px;
  height: 32px;
  border-radius: 32px;
  -webkit-transition: 0.15s ease-in;
  transition: 0.15s ease-in;
  color: #F25749;
}

.c0:hover {
  color: #D41200;
  background: #FFD2CC;
  -webkit-transition: 0.2s ease-out;
  transition: 0.2s ease-out;
}

<span
                                          aria-expanded="false"
                                          aria-haspopup="true"
                                          role="button"
                                        >
                                          <button
                                            class="c0"
                                          >
                                            <i
                                              aria-hidden="true"
                                              class="c1 icon far fa-times"
                                            />
                                          </button>
                                        </span>,
                                      }
                                    }
                                    popoverAnchorPosition="auto"
                                  >
                                    <Portal
                                      containerInfo={<body />}
                                    >
                                      <Transition
                                        appear={false}
                                        enter={true}
                                        exit={true}
                                        in={false}
                                        mountOnEnter={true}
                                        onEnter={[Function]}
                                        onEntered={[Function]}
                                        onEntering={[Function]}
                                        onExit={[Function]}
                                        onExited={[Function]}
                                        onExiting={[Function]}
                                        timeout={200}
                                        unmountOnExit={true}
                                      />
                                    </Portal>
                                  </Popover>
                                </TooltipPopover>
                              </FontAwesomeIconButton>
                            </th>
                          </StyledComponent>
                        </styled.th>
                        <styled.td
                          alignment="left"
                          isFirstColumn={false}
                          isLastColumn={false}
                          key="fileName"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            alignment="left"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "c20",
                                  "rules": Array [
                                    "
  padding: ",
                                    "12",
                                    "px;
  text-align: left;

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "
",
                                  ],
                                },
                                "displayName": "styled.td",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": "td",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            isFirstColumn={false}
                            isLastColumn={false}
                            onClick={[Function]}
                          >
                            <td
                              className="c19"
                              onClick={[Function]}
                            >
                              <div
                                key="0"
                              >
                                override
                              </div>
                            </td>
                          </StyledComponent>
                        </styled.td>
                        <styled.td
                          alignment="right"
                          isFirstColumn={false}
                          isLastColumn={true}
                          key="createAt"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            alignment="right"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "c20",
                                  "rules": Array [
                                    "
  padding: ",
                                    "12",
                                    "px;
  text-align: left;

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "
",
                                  ],
                                },
                                "displayName": "styled.td",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": "td",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            isFirstColumn={false}
                            isLastColumn={true}
                            onClick={[Function]}
                          >
                            <td
                              className="c20"
                              onClick={[Function]}
                            >
                              <div
                                key="1"
                              >
                                override
                              </div>
                            </td>
                          </StyledComponent>
                        </styled.td>
                      </tr>
                    </StyledComponent>
                  </styled.tr>
                </TableRow>
                <TableRow
                  columns={
                    Array [
                      Object {
                        "alignment": "left",
                        "content": [Function],
                        "name": "fileName",
                        "size": "auto",
                        "title": "file name",
                      },
                      Object {
                        "alignment": "right",
                        "content": [Function],
                        "name": "createAt",
                        "size": "shrink",
                        "title": "created at",
                      },
                    ]
                  }
                  hasTableSwipeActions={false}
                  isMobile={false}
                  key="1"
                  row={
                    Object {
                      "contentOverride": [Function],
                      "data": Object {
                        "createAt": "05/01/2018",
                        "fileName": "uploading.pdf",
                        "fileType": "PDF",
                        "size": "99",
                      },
                      "id": "1",
                      "isRemovable": true,
                      "isSelectable": false,
                      "progress": 0.7,
                    }
                  }
                  selectedRows={
                    Object {
                      "3": false,
                      "4": false,
                    }
                  }
                  setSelectedRows={[Function]}
                >
                  <styled.tr
                    hasProgressBar={0.7}
                    isHoverable={false}
                    isSelected={false}
                    movement={0}
                    onMouseDown={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onTouchStart={[Function]}
                    variant="neutral"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "c3",
                            "isStatic": false,
                            "lastClassName": "c26",
                            "rules": Array [
                              "
  white-space: nowrap;
  border-bottom: 1px solid ",
                              "#EDF1F5",
                              ";
  border-top: 1px solid ",
                              "#EDF1F5",
                              ";
  background: ",
                              "#FFFFFF",
                              ";
  transition: transform 0.2s ease-out;
  height: ",
                              "58",
                              "px;

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.tr",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "c3",
                          "target": "tr",
                          "toString": [Function],
                          "usesTheme": false,
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      hasProgressBar={0.7}
                      isHoverable={false}
                      isSelected={false}
                      movement={0}
                      onMouseDown={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTouchStart={[Function]}
                      variant="neutral"
                    >
                      <tr
                        className="c3 c21"
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onTouchStart={[Function]}
                      >
                        <styled.th>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-jTzLTM",
                                  "isStatic": false,
                                  "lastClassName": "c5",
                                  "rules": Array [
                                    "
  padding: ",
                                    "12",
                                    "px ",
                                    "12",
                                    "px ",
                                    "12",
                                    "px ",
                                    "16",
                                    "px;
  text-align: center;
  width: ",
                                    "32",
                                    "px;
",
                                  ],
                                },
                                "displayName": "styled.th",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-jTzLTM",
                                "target": "th",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <th
                              className="c5"
                            >
                              <FontAwesomeIconButton
                                icon="times"
                                onClick={[Function]}
                                tooltipText="Delete"
                                type="regular"
                                variant="neutral"
                              >
                                <TooltipPopover
                                  data-component-type="font_awesome_icon_button"
                                  toggleComponent={[Function]}
                                  variant="dark"
                                >
                                  <styled.span>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-ifAKCX",
                                            "isStatic": false,
                                            "lastClassName": "c17",
                                            "rules": Array [
                                              "
  cursor: ",
                                              [Function],
                                              ";
",
                                            ],
                                          },
                                          "displayName": "styled.span",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-ifAKCX",
                                          "target": "span",
                                          "toString": [Function],
                                          "usesTheme": false,
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <span
                                        className="c17"
                                      >
                                        <span
                                          aria-expanded={false}
                                          aria-haspopup={true}
                                          onMouseEnter={[Function]}
                                          onMouseLeave={[Function]}
                                          role="button"
                                        >
                                          <styled.button
                                            isHovered={false}
                                            isSelected={false}
                                            onClick={[Function]}
                                            variant="neutral"
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bZQynM",
                                                    "isStatic": false,
                                                    "lastClassName": "c12",
                                                    "rules": Array [
                                                      "
  outline: none;
  cursor: pointer;
  width: ",
                                                      "32",
                                                      "px;
  height: ",
                                                      "32",
                                                      "px;
  border-radius: ",
                                                      "32",
                                                      "px;
  transition: 0.15s ease-in;
  ",
                                                      [Function],
                                                      ";
  ",
                                                      [Function],
                                                      "
  ",
                                                      [Function],
                                                      "

  ",
                                                      [Function],
                                                      "
",
                                                    ],
                                                  },
                                                  "displayName": "styled.button",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bZQynM",
                                                  "target": "button",
                                                  "toString": [Function],
                                                  "usesTheme": false,
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              isHovered={false}
                                              isSelected={false}
                                              onClick={[Function]}
                                              variant="neutral"
                                            >
                                              <button
                                                className="c12"
                                                onClick={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  icon="times"
                                                  type="regular"
                                                >
                                                  <Icon
                                                    icon="far fa-times"
                                                  >
                                                    <styled.i
                                                      aria-hidden={true}
                                                      className="icon far fa-times"
                                                      size="medium"
                                                    >
                                                      <StyledComponent
                                                        aria-hidden={true}
                                                        className="icon far fa-times"
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-htpNat",
                                                              "isStatic": false,
                                                              "lastClassName": "c13",
                                                              "rules": Array [
                                                                "
  display: inline-block;
  font-stretch: normal;
  --fa-primary-color: ",
                                                                "#2512B3",
                                                                ";
  --fa-secondary-color: ",
                                                                "#2512B3",
                                                                ";

  ",
                                                                [Function],
                                                                "

  ",
                                                                [Function],
                                                                "
  ",
                                                                [Function],
                                                                "

  ",
                                                                [Function],
                                                                "

  ",
                                                                [Function],
                                                                "

  ",
                                                                [Function],
                                                                "

  ",
                                                                [Function],
                                                                "

  ",
                                                                [Function],
                                                                "

  &.icon {
    text-align: center;

  ",
                                                                [Function],
                                                                "
  }
",
                                                              ],
                                                            },
                                                            "displayName": "styled.i",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "sc-htpNat",
                                                            "target": "i",
                                                            "toString": [Function],
                                                            "usesTheme": false,
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                        size="medium"
                                                      >
                                                        <i
                                                          aria-hidden={true}
                                                          className="c13 icon far fa-times"
                                                          size="medium"
                                                        />
                                                      </StyledComponent>
                                                    </styled.i>
                                                  </Icon>
                                                </FontAwesomeIcon>
                                              </button>
                                            </StyledComponent>
                                          </styled.button>
                                        </span>
                                      </span>
                                    </StyledComponent>
                                  </styled.span>
                                  <Popover
                                    animationType="tooltip"
                                    id=""
                                    isOpen={false}
                                    parentAnchorPosition="auto"
                                    parentRef={
                                      Object {
                                        "current": .c1 {
  display: inline-block;
  font-stretch: normal;
  --fa-primary-color: #2512B3;
  --fa-secondary-color: #2512B3;
}

.c1.icon {
  text-align: center;
  font-size: 1rem;
}

.c0 {
  outline: none;
  cursor: pointer;
  width: 32px;
  height: 32px;
  border-radius: 32px;
  -webkit-transition: 0.15s ease-in;
  transition: 0.15s ease-in;
  color: #667380;
}

.c0:hover {
  color: #424F5C;
  background: #EDF1F5;
  -webkit-transition: 0.2s ease-out;
  transition: 0.2s ease-out;
}

<span
                                          aria-expanded="false"
                                          aria-haspopup="true"
                                          role="button"
                                        >
                                          <button
                                            class="c0"
                                          >
                                            <i
                                              aria-hidden="true"
                                              class="c1 icon far fa-times"
                                            />
                                          </button>
                                        </span>,
                                      }
                                    }
                                    popoverAnchorPosition="auto"
                                  >
                                    <Portal
                                      containerInfo={<body />}
                                    >
                                      <Transition
                                        appear={false}
                                        enter={true}
                                        exit={true}
                                        in={false}
                                        mountOnEnter={true}
                                        onEnter={[Function]}
                                        onEntered={[Function]}
                                        onEntering={[Function]}
                                        onExit={[Function]}
                                        onExited={[Function]}
                                        onExiting={[Function]}
                                        timeout={200}
                                        unmountOnExit={true}
                                      />
                                    </Portal>
                                  </Popover>
                                </TooltipPopover>
                              </FontAwesomeIconButton>
                            </th>
                          </StyledComponent>
                        </styled.th>
                        <styled.td
                          alignment="left"
                          isFirstColumn={false}
                          isLastColumn={false}
                          key="fileName"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            alignment="left"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "c20",
                                  "rules": Array [
                                    "
  padding: ",
                                    "12",
                                    "px;
  text-align: left;

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "
",
                                  ],
                                },
                                "displayName": "styled.td",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": "td",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            isFirstColumn={false}
                            isLastColumn={false}
                            onClick={[Function]}
                          >
                            <td
                              className="c19"
                              onClick={[Function]}
                            >
                              <div
                                key="0"
                              >
                                override
                              </div>
                            </td>
                          </StyledComponent>
                        </styled.td>
                        <styled.td
                          alignment="right"
                          isFirstColumn={false}
                          isLastColumn={true}
                          key="createAt"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            alignment="right"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "c20",
                                  "rules": Array [
                                    "
  padding: ",
                                    "12",
                                    "px;
  text-align: left;

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "
",
                                  ],
                                },
                                "displayName": "styled.td",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": "td",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            isFirstColumn={false}
                            isLastColumn={true}
                            onClick={[Function]}
                          >
                            <td
                              className="c20"
                              onClick={[Function]}
                            >
                              <div
                                key="1"
                              >
                                override
                              </div>
                            </td>
                          </StyledComponent>
                        </styled.td>
                      </tr>
                    </StyledComponent>
                  </styled.tr>
                  <styled.tr>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kAzzGY",
                            "isStatic": false,
                            "lastClassName": "c22",
                            "rules": Array [
                              "
  border-bottom: 1px solid ",
                              "#EDF1F5",
                              ";
  background: ",
                              "#FFFFFF",
                              ";
",
                            ],
                          },
                          "displayName": "styled.tr",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kAzzGY",
                          "target": "tr",
                          "toString": [Function],
                          "usesTheme": false,
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <tr
                        className="c22"
                      >
                        <styled.td
                          colSpan={3}
                        >
                          <StyledComponent
                            colSpan={3}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-kgoBCf",
                                  "isStatic": false,
                                  "lastClassName": "c23",
                                  "rules": Array [
                                    "
  height: ",
                                    "2",
                                    "px;
  padding: 0;
",
                                  ],
                                },
                                "displayName": "styled.td",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-kgoBCf",
                                "target": "td",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <td
                              className="c23"
                              colSpan={3}
                            >
                              <styled.div
                                percentage={70}
                                previousPercentage={0}
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-kGXeez",
                                        "isStatic": false,
                                        "lastClassName": "c25",
                                        "rules": Array [
                                          "
  height: 100%;
  animation-name: ",
                                          [Function],
                                          ";
  animation-duration: 1s;
  animation-timing-function: ease-in-out;

  ",
                                          [Function],
                                          "
",
                                        ],
                                      },
                                      "displayName": "styled.div",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-kGXeez",
                                      "target": "div",
                                      "toString": [Function],
                                      "usesTheme": false,
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  percentage={70}
                                  previousPercentage={0}
                                >
                                  <div
                                    className="c24"
                                  />
                                </StyledComponent>
                              </styled.div>
                            </td>
                          </StyledComponent>
                        </styled.td>
                      </tr>
                    </StyledComponent>
                  </styled.tr>
                </TableRow>
                <TableRow
                  columns={
                    Array [
                      Object {
                        "alignment": "left",
                        "content": [Function],
                        "name": "fileName",
                        "size": "auto",
                        "title": "file name",
                      },
                      Object {
                        "alignment": "right",
                        "content": [Function],
                        "name": "createAt",
                        "size": "shrink",
                        "title": "created at",
                      },
                    ]
                  }
                  hasTableSwipeActions={false}
                  isMobile={false}
                  key="2"
                  row={
                    Object {
                      "contentOverride": [Function],
                      "data": Object {
                        "createAt": "05/01/2018",
                        "fileName": "success.pdf",
                        "fileType": "PDF",
                        "size": "3.7",
                      },
                      "id": "2",
                      "isRemovable": true,
                      "isSelectable": false,
                      "progress": 0.5,
                    }
                  }
                  selectedRows={
                    Object {
                      "3": false,
                      "4": false,
                    }
                  }
                  setSelectedRows={[Function]}
                >
                  <styled.tr
                    hasProgressBar={0.5}
                    isHoverable={false}
                    isSelected={false}
                    movement={0}
                    onMouseDown={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onTouchStart={[Function]}
                    variant="neutral"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "c3",
                            "isStatic": false,
                            "lastClassName": "c26",
                            "rules": Array [
                              "
  white-space: nowrap;
  border-bottom: 1px solid ",
                              "#EDF1F5",
                              ";
  border-top: 1px solid ",
                              "#EDF1F5",
                              ";
  background: ",
                              "#FFFFFF",
                              ";
  transition: transform 0.2s ease-out;
  height: ",
                              "58",
                              "px;

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.tr",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "c3",
                          "target": "tr",
                          "toString": [Function],
                          "usesTheme": false,
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      hasProgressBar={0.5}
                      isHoverable={false}
                      isSelected={false}
                      movement={0}
                      onMouseDown={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTouchStart={[Function]}
                      variant="neutral"
                    >
                      <tr
                        className="c3 c21"
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onTouchStart={[Function]}
                      >
                        <styled.th>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-jTzLTM",
                                  "isStatic": false,
                                  "lastClassName": "c5",
                                  "rules": Array [
                                    "
  padding: ",
                                    "12",
                                    "px ",
                                    "12",
                                    "px ",
                                    "12",
                                    "px ",
                                    "16",
                                    "px;
  text-align: center;
  width: ",
                                    "32",
                                    "px;
",
                                  ],
                                },
                                "displayName": "styled.th",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-jTzLTM",
                                "target": "th",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <th
                              className="c5"
                            >
                              <FontAwesomeIconButton
                                icon="times"
                                onClick={[Function]}
                                tooltipText="Delete"
                                type="regular"
                                variant="neutral"
                              >
                                <TooltipPopover
                                  data-component-type="font_awesome_icon_button"
                                  toggleComponent={[Function]}
                                  variant="dark"
                                >
                                  <styled.span>
                                    <StyledComponent
                                      forwardedComponent={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "attrs": Array [],
                                          "componentStyle": ComponentStyle {
                                            "componentId": "sc-ifAKCX",
                                            "isStatic": false,
                                            "lastClassName": "c17",
                                            "rules": Array [
                                              "
  cursor: ",
                                              [Function],
                                              ";
",
                                            ],
                                          },
                                          "displayName": "styled.span",
                                          "foldedComponentIds": Array [],
                                          "render": [Function],
                                          "styledComponentId": "sc-ifAKCX",
                                          "target": "span",
                                          "toString": [Function],
                                          "usesTheme": false,
                                          "warnTooManyClasses": [Function],
                                          "withComponent": [Function],
                                        }
                                      }
                                      forwardedRef={null}
                                    >
                                      <span
                                        className="c17"
                                      >
                                        <span
                                          aria-expanded={false}
                                          aria-haspopup={true}
                                          onMouseEnter={[Function]}
                                          onMouseLeave={[Function]}
                                          role="button"
                                        >
                                          <styled.button
                                            isHovered={false}
                                            isSelected={false}
                                            onClick={[Function]}
                                            variant="neutral"
                                          >
                                            <StyledComponent
                                              forwardedComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "attrs": Array [],
                                                  "componentStyle": ComponentStyle {
                                                    "componentId": "sc-bZQynM",
                                                    "isStatic": false,
                                                    "lastClassName": "c12",
                                                    "rules": Array [
                                                      "
  outline: none;
  cursor: pointer;
  width: ",
                                                      "32",
                                                      "px;
  height: ",
                                                      "32",
                                                      "px;
  border-radius: ",
                                                      "32",
                                                      "px;
  transition: 0.15s ease-in;
  ",
                                                      [Function],
                                                      ";
  ",
                                                      [Function],
                                                      "
  ",
                                                      [Function],
                                                      "

  ",
                                                      [Function],
                                                      "
",
                                                    ],
                                                  },
                                                  "displayName": "styled.button",
                                                  "foldedComponentIds": Array [],
                                                  "render": [Function],
                                                  "styledComponentId": "sc-bZQynM",
                                                  "target": "button",
                                                  "toString": [Function],
                                                  "usesTheme": false,
                                                  "warnTooManyClasses": [Function],
                                                  "withComponent": [Function],
                                                }
                                              }
                                              forwardedRef={null}
                                              isHovered={false}
                                              isSelected={false}
                                              onClick={[Function]}
                                              variant="neutral"
                                            >
                                              <button
                                                className="c12"
                                                onClick={[Function]}
                                              >
                                                <FontAwesomeIcon
                                                  icon="times"
                                                  type="regular"
                                                >
                                                  <Icon
                                                    icon="far fa-times"
                                                  >
                                                    <styled.i
                                                      aria-hidden={true}
                                                      className="icon far fa-times"
                                                      size="medium"
                                                    >
                                                      <StyledComponent
                                                        aria-hidden={true}
                                                        className="icon far fa-times"
                                                        forwardedComponent={
                                                          Object {
                                                            "$$typeof": Symbol(react.forward_ref),
                                                            "attrs": Array [],
                                                            "componentStyle": ComponentStyle {
                                                              "componentId": "sc-htpNat",
                                                              "isStatic": false,
                                                              "lastClassName": "c13",
                                                              "rules": Array [
                                                                "
  display: inline-block;
  font-stretch: normal;
  --fa-primary-color: ",
                                                                "#2512B3",
                                                                ";
  --fa-secondary-color: ",
                                                                "#2512B3",
                                                                ";

  ",
                                                                [Function],
                                                                "

  ",
                                                                [Function],
                                                                "
  ",
                                                                [Function],
                                                                "

  ",
                                                                [Function],
                                                                "

  ",
                                                                [Function],
                                                                "

  ",
                                                                [Function],
                                                                "

  ",
                                                                [Function],
                                                                "

  ",
                                                                [Function],
                                                                "

  &.icon {
    text-align: center;

  ",
                                                                [Function],
                                                                "
  }
",
                                                              ],
                                                            },
                                                            "displayName": "styled.i",
                                                            "foldedComponentIds": Array [],
                                                            "render": [Function],
                                                            "styledComponentId": "sc-htpNat",
                                                            "target": "i",
                                                            "toString": [Function],
                                                            "usesTheme": false,
                                                            "warnTooManyClasses": [Function],
                                                            "withComponent": [Function],
                                                          }
                                                        }
                                                        forwardedRef={null}
                                                        size="medium"
                                                      >
                                                        <i
                                                          aria-hidden={true}
                                                          className="c13 icon far fa-times"
                                                          size="medium"
                                                        />
                                                      </StyledComponent>
                                                    </styled.i>
                                                  </Icon>
                                                </FontAwesomeIcon>
                                              </button>
                                            </StyledComponent>
                                          </styled.button>
                                        </span>
                                      </span>
                                    </StyledComponent>
                                  </styled.span>
                                  <Popover
                                    animationType="tooltip"
                                    id=""
                                    isOpen={false}
                                    parentAnchorPosition="auto"
                                    parentRef={
                                      Object {
                                        "current": .c1 {
  display: inline-block;
  font-stretch: normal;
  --fa-primary-color: #2512B3;
  --fa-secondary-color: #2512B3;
}

.c1.icon {
  text-align: center;
  font-size: 1rem;
}

.c0 {
  outline: none;
  cursor: pointer;
  width: 32px;
  height: 32px;
  border-radius: 32px;
  -webkit-transition: 0.15s ease-in;
  transition: 0.15s ease-in;
  color: #667380;
}

.c0:hover {
  color: #424F5C;
  background: #EDF1F5;
  -webkit-transition: 0.2s ease-out;
  transition: 0.2s ease-out;
}

<span
                                          aria-expanded="false"
                                          aria-haspopup="true"
                                          role="button"
                                        >
                                          <button
                                            class="c0"
                                          >
                                            <i
                                              aria-hidden="true"
                                              class="c1 icon far fa-times"
                                            />
                                          </button>
                                        </span>,
                                      }
                                    }
                                    popoverAnchorPosition="auto"
                                  >
                                    <Portal
                                      containerInfo={<body />}
                                    >
                                      <Transition
                                        appear={false}
                                        enter={true}
                                        exit={true}
                                        in={false}
                                        mountOnEnter={true}
                                        onEnter={[Function]}
                                        onEntered={[Function]}
                                        onEntering={[Function]}
                                        onExit={[Function]}
                                        onExited={[Function]}
                                        onExiting={[Function]}
                                        timeout={200}
                                        unmountOnExit={true}
                                      />
                                    </Portal>
                                  </Popover>
                                </TooltipPopover>
                              </FontAwesomeIconButton>
                            </th>
                          </StyledComponent>
                        </styled.th>
                        <styled.td
                          alignment="left"
                          isFirstColumn={false}
                          isLastColumn={false}
                          key="fileName"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            alignment="left"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "c20",
                                  "rules": Array [
                                    "
  padding: ",
                                    "12",
                                    "px;
  text-align: left;

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "
",
                                  ],
                                },
                                "displayName": "styled.td",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": "td",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            isFirstColumn={false}
                            isLastColumn={false}
                            onClick={[Function]}
                          >
                            <td
                              className="c19"
                              onClick={[Function]}
                            >
                              <div
                                key="0"
                              >
                                override
                              </div>
                            </td>
                          </StyledComponent>
                        </styled.td>
                        <styled.td
                          alignment="right"
                          isFirstColumn={false}
                          isLastColumn={true}
                          key="createAt"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            alignment="right"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "c20",
                                  "rules": Array [
                                    "
  padding: ",
                                    "12",
                                    "px;
  text-align: left;

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "
",
                                  ],
                                },
                                "displayName": "styled.td",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": "td",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            isFirstColumn={false}
                            isLastColumn={true}
                            onClick={[Function]}
                          >
                            <td
                              className="c20"
                              onClick={[Function]}
                            >
                              <div
                                key="1"
                              >
                                override
                              </div>
                            </td>
                          </StyledComponent>
                        </styled.td>
                      </tr>
                    </StyledComponent>
                  </styled.tr>
                  <styled.tr>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kAzzGY",
                            "isStatic": false,
                            "lastClassName": "c22",
                            "rules": Array [
                              "
  border-bottom: 1px solid ",
                              "#EDF1F5",
                              ";
  background: ",
                              "#FFFFFF",
                              ";
",
                            ],
                          },
                          "displayName": "styled.tr",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kAzzGY",
                          "target": "tr",
                          "toString": [Function],
                          "usesTheme": false,
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <tr
                        className="c22"
                      >
                        <styled.td
                          colSpan={3}
                        >
                          <StyledComponent
                            colSpan={3}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-kgoBCf",
                                  "isStatic": false,
                                  "lastClassName": "c23",
                                  "rules": Array [
                                    "
  height: ",
                                    "2",
                                    "px;
  padding: 0;
",
                                  ],
                                },
                                "displayName": "styled.td",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-kgoBCf",
                                "target": "td",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <td
                              className="c23"
                              colSpan={3}
                            >
                              <styled.div
                                percentage={50}
                                previousPercentage={0}
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-kGXeez",
                                        "isStatic": false,
                                        "lastClassName": "c25",
                                        "rules": Array [
                                          "
  height: 100%;
  animation-name: ",
                                          [Function],
                                          ";
  animation-duration: 1s;
  animation-timing-function: ease-in-out;

  ",
                                          [Function],
                                          "
",
                                        ],
                                      },
                                      "displayName": "styled.div",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-kGXeez",
                                      "target": "div",
                                      "toString": [Function],
                                      "usesTheme": false,
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  percentage={50}
                                  previousPercentage={0}
                                >
                                  <div
                                    className="c25"
                                  />
                                </StyledComponent>
                              </styled.div>
                            </td>
                          </StyledComponent>
                        </styled.td>
                      </tr>
                    </StyledComponent>
                  </styled.tr>
                </TableRow>
                <TableRow
                  columns={
                    Array [
                      Object {
                        "alignment": "left",
                        "content": [Function],
                        "name": "fileName",
                        "size": "auto",
                        "title": "file name",
                      },
                      Object {
                        "alignment": "right",
                        "content": [Function],
                        "name": "createAt",
                        "size": "shrink",
                        "title": "created at",
                      },
                    ]
                  }
                  hasTableSwipeActions={false}
                  isMobile={false}
                  key="3"
                  row={
                    Object {
                      "data": Object {
                        "createAt": "05/01/2018",
                        "fileName": "test.pdf",
                        "fileType": "PDF",
                        "size": "2.2",
                      },
                      "id": "3",
                      "isSelectable": true,
                    }
                  }
                  selectedRows={
                    Object {
                      "3": false,
                      "4": false,
                    }
                  }
                  setSelectedRows={[Function]}
                >
                  <styled.tr
                    isHoverable={true}
                    isSelected={false}
                    movement={0}
                    onMouseDown={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onTouchStart={[Function]}
                    variant="neutral"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "c3",
                            "isStatic": false,
                            "lastClassName": "c26",
                            "rules": Array [
                              "
  white-space: nowrap;
  border-bottom: 1px solid ",
                              "#EDF1F5",
                              ";
  border-top: 1px solid ",
                              "#EDF1F5",
                              ";
  background: ",
                              "#FFFFFF",
                              ";
  transition: transform 0.2s ease-out;
  height: ",
                              "58",
                              "px;

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.tr",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "c3",
                          "target": "tr",
                          "toString": [Function],
                          "usesTheme": false,
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      isHoverable={true}
                      isSelected={false}
                      movement={0}
                      onMouseDown={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTouchStart={[Function]}
                      variant="neutral"
                    >
                      <tr
                        className="c3 c26"
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onTouchStart={[Function]}
                      >
                        <styled.th>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-jTzLTM",
                                  "isStatic": false,
                                  "lastClassName": "c5",
                                  "rules": Array [
                                    "
  padding: ",
                                    "12",
                                    "px ",
                                    "12",
                                    "px ",
                                    "12",
                                    "px ",
                                    "16",
                                    "px;
  text-align: center;
  width: ",
                                    "32",
                                    "px;
",
                                  ],
                                },
                                "displayName": "styled.th",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-jTzLTM",
                                "target": "th",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <th
                              className="c5"
                            >
                              <TableCheckboxInput
                                name="3"
                                onChange={[Function]}
                                value="false"
                              >
                                <styled.input
                                  checked={false}
                                  data-component-type="checkbox_input"
                                  id="3"
                                  labelValue="false"
                                  name="3"
                                  onChange={[Function]}
                                  type="checkbox"
                                  value={0}
                                >
                                  <StyledComponent
                                    checked={false}
                                    data-component-type="checkbox_input"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-jKJlTe",
                                          "isStatic": false,
                                          "lastClassName": "c6",
                                          "rules": Array [
                                            "
  line-height: 16px;
  height: 0;
  opacity: 0;
  position: absolute;
  width: 0;

  margin: 0;

  &::-ms-clear {
    display: none;
  }

  & + label {
    margin: 0;
  }

  &:disabled + label {
    margin: 0;
    color: ",
                                            "#8FA1B3",
                                            ";
    cursor: not-allowed;

    &::before {
      background-color: ",
                                            "#FAFBFC",
                                            ";
      border-color: ",
                                            "#E1E6EB",
                                            ";
    }
  }

  &:focus + label {
    margin: 0;
    &.checkbox {
      border-color: ",
                                            "#432DF3",
                                            ";

      &::before {
        background-color: ",
                                            "#E1E6EB",
                                            ";
        border-color: ",
                                            "#432DF3",
                                            ";
      }
    }

    &.checkbox-button {
      background-color: ",
                                            "#F5F7FA",
                                            ";
      border-color: ",
                                            "#432DF3",
                                            ";
    }
  }

  &:checked + label {
    margin: 0;
    border-color: ",
                                            "#0F0080",
                                            ";

    &::before {
      border-color: ",
                                            "#432DF3",
                                            ";
    }

    &:hover {
      border-color: ",
                                            "#432DF3",
                                            ";

      &::before {
        border-color: ",
                                            "#432DF3",
                                            ";
      }
    }
  }

  ",
                                            [Function],
                                            "
",
                                          ],
                                        },
                                        "displayName": "styled.input",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-jKJlTe",
                                        "target": "input",
                                        "toString": [Function],
                                        "usesTheme": false,
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    id="3"
                                    labelValue="false"
                                    name="3"
                                    onChange={[Function]}
                                    type="checkbox"
                                    value={0}
                                  >
                                    <input
                                      checked={false}
                                      className="c6"
                                      data-component-type="checkbox_input"
                                      id="3"
                                      name="3"
                                      onChange={[Function]}
                                      type="checkbox"
                                      value={0}
                                    />
                                  </StyledComponent>
                                </styled.input>
                                <styled.label
                                  htmlFor="3"
                                  value="false"
                                >
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-eNQAEJ",
                                          "isStatic": false,
                                          "lastClassName": "c7",
                                          "rules": Array [
                                            "
  width:20px;
  height:20px;
  position: relative;
  cursor: pointer;
  transition: .25s ease-out;
  margin: 0;

  &::before {
      background-color: ",
                                            "#FAFBFC",
                                            ";
      border: 2px solid  ",
                                            "#C5CED6",
                                            ";
      border-radius: ",
                                            "4",
                                            "px;
      content: '';
      display: inline-block;
      height: 20px;
      left: 0;
      position: absolute;
      top: 4px;
      transition: .25s ease-out, color .25s ease-out;
      vertical-align: top;
      width: 20px;
    }

  &:hover {

    &::before {
      background-color: ",
                                            "#E1E6EB",
                                            ";
      border-color: ",
                                            "#667380",
                                            ";
    }
  }

  ",
                                            [Function],
                                            "
",
                                          ],
                                        },
                                        "displayName": "styled.label",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-eNQAEJ",
                                        "target": "label",
                                        "toString": [Function],
                                        "usesTheme": false,
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    htmlFor="3"
                                    value="false"
                                  >
                                    <label
                                      className="c7"
                                      htmlFor="3"
                                      value="false"
                                    />
                                  </StyledComponent>
                                </styled.label>
                              </TableCheckboxInput>
                            </th>
                          </StyledComponent>
                        </styled.th>
                        <styled.td
                          alignment="left"
                          isFirstColumn={false}
                          isLastColumn={false}
                          key="fileName"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            alignment="left"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "c20",
                                  "rules": Array [
                                    "
  padding: ",
                                    "12",
                                    "px;
  text-align: left;

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "
",
                                  ],
                                },
                                "displayName": "styled.td",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": "td",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            isFirstColumn={false}
                            isLastColumn={false}
                            onClick={[Function]}
                          >
                            <td
                              className="c19"
                              onClick={[Function]}
                            >
                              <div>
                                test.pdf
                              </div>
                            </td>
                          </StyledComponent>
                        </styled.td>
                        <styled.td
                          alignment="right"
                          isFirstColumn={false}
                          isLastColumn={true}
                          key="createAt"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            alignment="right"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "c20",
                                  "rules": Array [
                                    "
  padding: ",
                                    "12",
                                    "px;
  text-align: left;

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "
",
                                  ],
                                },
                                "displayName": "styled.td",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": "td",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            isFirstColumn={false}
                            isLastColumn={true}
                            onClick={[Function]}
                          >
                            <td
                              className="c20"
                              onClick={[Function]}
                            >
                              <div>
                                05/01/2018
                              </div>
                            </td>
                          </StyledComponent>
                        </styled.td>
                      </tr>
                    </StyledComponent>
                  </styled.tr>
                </TableRow>
                <TableRow
                  columns={
                    Array [
                      Object {
                        "alignment": "left",
                        "content": [Function],
                        "name": "fileName",
                        "size": "auto",
                        "title": "file name",
                      },
                      Object {
                        "alignment": "right",
                        "content": [Function],
                        "name": "createAt",
                        "size": "shrink",
                        "title": "created at",
                      },
                    ]
                  }
                  hasTableSwipeActions={false}
                  isMobile={false}
                  key="4"
                  row={
                    Object {
                      "data": Object {
                        "createAt": "05/01/2018",
                        "fileName": "test1.pdf",
                        "fileType": "PDF",
                        "size": "1.5",
                      },
                      "id": "4",
                      "isSelectable": true,
                    }
                  }
                  selectedRows={
                    Object {
                      "3": false,
                      "4": false,
                    }
                  }
                  setSelectedRows={[Function]}
                >
                  <styled.tr
                    isHoverable={true}
                    isSelected={false}
                    movement={0}
                    onMouseDown={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onTouchStart={[Function]}
                    variant="neutral"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "c3",
                            "isStatic": false,
                            "lastClassName": "c26",
                            "rules": Array [
                              "
  white-space: nowrap;
  border-bottom: 1px solid ",
                              "#EDF1F5",
                              ";
  border-top: 1px solid ",
                              "#EDF1F5",
                              ";
  background: ",
                              "#FFFFFF",
                              ";
  transition: transform 0.2s ease-out;
  height: ",
                              "58",
                              "px;

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.tr",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "c3",
                          "target": "tr",
                          "toString": [Function],
                          "usesTheme": false,
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      isHoverable={true}
                      isSelected={false}
                      movement={0}
                      onMouseDown={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTouchStart={[Function]}
                      variant="neutral"
                    >
                      <tr
                        className="c3 c26"
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onTouchStart={[Function]}
                      >
                        <styled.th>
                          <StyledComponent
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-jTzLTM",
                                  "isStatic": false,
                                  "lastClassName": "c5",
                                  "rules": Array [
                                    "
  padding: ",
                                    "12",
                                    "px ",
                                    "12",
                                    "px ",
                                    "12",
                                    "px ",
                                    "16",
                                    "px;
  text-align: center;
  width: ",
                                    "32",
                                    "px;
",
                                  ],
                                },
                                "displayName": "styled.th",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-jTzLTM",
                                "target": "th",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <th
                              className="c5"
                            >
                              <TableCheckboxInput
                                name="4"
                                onChange={[Function]}
                                value="false"
                              >
                                <styled.input
                                  checked={false}
                                  data-component-type="checkbox_input"
                                  id="4"
                                  labelValue="false"
                                  name="4"
                                  onChange={[Function]}
                                  type="checkbox"
                                  value={0}
                                >
                                  <StyledComponent
                                    checked={false}
                                    data-component-type="checkbox_input"
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-jKJlTe",
                                          "isStatic": false,
                                          "lastClassName": "c6",
                                          "rules": Array [
                                            "
  line-height: 16px;
  height: 0;
  opacity: 0;
  position: absolute;
  width: 0;

  margin: 0;

  &::-ms-clear {
    display: none;
  }

  & + label {
    margin: 0;
  }

  &:disabled + label {
    margin: 0;
    color: ",
                                            "#8FA1B3",
                                            ";
    cursor: not-allowed;

    &::before {
      background-color: ",
                                            "#FAFBFC",
                                            ";
      border-color: ",
                                            "#E1E6EB",
                                            ";
    }
  }

  &:focus + label {
    margin: 0;
    &.checkbox {
      border-color: ",
                                            "#432DF3",
                                            ";

      &::before {
        background-color: ",
                                            "#E1E6EB",
                                            ";
        border-color: ",
                                            "#432DF3",
                                            ";
      }
    }

    &.checkbox-button {
      background-color: ",
                                            "#F5F7FA",
                                            ";
      border-color: ",
                                            "#432DF3",
                                            ";
    }
  }

  &:checked + label {
    margin: 0;
    border-color: ",
                                            "#0F0080",
                                            ";

    &::before {
      border-color: ",
                                            "#432DF3",
                                            ";
    }

    &:hover {
      border-color: ",
                                            "#432DF3",
                                            ";

      &::before {
        border-color: ",
                                            "#432DF3",
                                            ";
      }
    }
  }

  ",
                                            [Function],
                                            "
",
                                          ],
                                        },
                                        "displayName": "styled.input",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-jKJlTe",
                                        "target": "input",
                                        "toString": [Function],
                                        "usesTheme": false,
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    id="4"
                                    labelValue="false"
                                    name="4"
                                    onChange={[Function]}
                                    type="checkbox"
                                    value={0}
                                  >
                                    <input
                                      checked={false}
                                      className="c6"
                                      data-component-type="checkbox_input"
                                      id="4"
                                      name="4"
                                      onChange={[Function]}
                                      type="checkbox"
                                      value={0}
                                    />
                                  </StyledComponent>
                                </styled.input>
                                <styled.label
                                  htmlFor="4"
                                  value="false"
                                >
                                  <StyledComponent
                                    forwardedComponent={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "attrs": Array [],
                                        "componentStyle": ComponentStyle {
                                          "componentId": "sc-eNQAEJ",
                                          "isStatic": false,
                                          "lastClassName": "c7",
                                          "rules": Array [
                                            "
  width:20px;
  height:20px;
  position: relative;
  cursor: pointer;
  transition: .25s ease-out;
  margin: 0;

  &::before {
      background-color: ",
                                            "#FAFBFC",
                                            ";
      border: 2px solid  ",
                                            "#C5CED6",
                                            ";
      border-radius: ",
                                            "4",
                                            "px;
      content: '';
      display: inline-block;
      height: 20px;
      left: 0;
      position: absolute;
      top: 4px;
      transition: .25s ease-out, color .25s ease-out;
      vertical-align: top;
      width: 20px;
    }

  &:hover {

    &::before {
      background-color: ",
                                            "#E1E6EB",
                                            ";
      border-color: ",
                                            "#667380",
                                            ";
    }
  }

  ",
                                            [Function],
                                            "
",
                                          ],
                                        },
                                        "displayName": "styled.label",
                                        "foldedComponentIds": Array [],
                                        "render": [Function],
                                        "styledComponentId": "sc-eNQAEJ",
                                        "target": "label",
                                        "toString": [Function],
                                        "usesTheme": false,
                                        "warnTooManyClasses": [Function],
                                        "withComponent": [Function],
                                      }
                                    }
                                    forwardedRef={null}
                                    htmlFor="4"
                                    value="false"
                                  >
                                    <label
                                      className="c7"
                                      htmlFor="4"
                                      value="false"
                                    />
                                  </StyledComponent>
                                </styled.label>
                              </TableCheckboxInput>
                            </th>
                          </StyledComponent>
                        </styled.th>
                        <styled.td
                          alignment="left"
                          isFirstColumn={false}
                          isLastColumn={false}
                          key="fileName"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            alignment="left"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "c20",
                                  "rules": Array [
                                    "
  padding: ",
                                    "12",
                                    "px;
  text-align: left;

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "
",
                                  ],
                                },
                                "displayName": "styled.td",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": "td",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            isFirstColumn={false}
                            isLastColumn={false}
                            onClick={[Function]}
                          >
                            <td
                              className="c19"
                              onClick={[Function]}
                            >
                              <div>
                                test1.pdf
                              </div>
                            </td>
                          </StyledComponent>
                        </styled.td>
                        <styled.td
                          alignment="right"
                          isFirstColumn={false}
                          isLastColumn={true}
                          key="createAt"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            alignment="right"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "c20",
                                  "rules": Array [
                                    "
  padding: ",
                                    "12",
                                    "px;
  text-align: left;

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "
",
                                  ],
                                },
                                "displayName": "styled.td",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": "td",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            isFirstColumn={false}
                            isLastColumn={true}
                            onClick={[Function]}
                          >
                            <td
                              className="c20"
                              onClick={[Function]}
                            >
                              <div>
                                05/01/2018
                              </div>
                            </td>
                          </StyledComponent>
                        </styled.td>
                      </tr>
                    </StyledComponent>
                  </styled.tr>
                </TableRow>
              </tbody>
            </table>
          </StyledComponent>
        </styled.table>
      </div>
    </StyledComponent>
  </styled.div>
</Table>
`;

exports[`<Table /> should render a table 2`] = `
.c10 {
  display: inline-block;
  font-stretch: normal;
  --fa-primary-color: #2512B3;
  --fa-secondary-color: #2512B3;
}

.c10.icon {
  text-align: center;
  font-size: 1rem;
}

.c9 {
  outline: none;
  cursor: pointer;
  width: 32px;
  height: 32px;
  border-radius: 32px;
  -webkit-transition: 0.15s ease-in;
  transition: 0.15s ease-in;
  color: #667380;
}

.c9:hover {
  color: #424F5C;
  background: #EDF1F5;
  -webkit-transition: 0.2s ease-out;
  transition: 0.2s ease-out;
}

.c2 {
  background: none;
  border-bottom: none;
}

.c0 {
  border: 1px solid #EDF1F5;
}

.c1 {
  margin: 0;
  overflow: hidden;
  border-collapse: collapse;
  border-spacing: 0;
}

.c5 {
  padding: 12px 16px;
  text-align: left;
  width: 100%;
}

.c11 {
  padding: 12px 16px;
  text-align: left;
  padding: 12px 16px 12px 12px;
  text-align: right;
}

.c15 {
  padding: 12px;
  text-align: left;
  text-align: right;
  padding: 12px 16px 12px 12px;
}

.c14 {
  padding: 12px;
  text-align: left;
  padding: 12px 12px 12px 16px;
}

.c17 {
  border-bottom: 1px solid #EDF1F5;
  background: #FFFFFF;
}

.c4 {
  white-space: nowrap;
  border-bottom: 1px solid #EDF1F5;
  border-top: 1px solid #EDF1F5;
  background: #FFFFFF;
  -webkit-transition: -webkit-transform 0.2s ease-out;
  -webkit-transition: transform 0.2s ease-out;
  transition: transform 0.2s ease-out;
  height: 58px;
}

.c16 {
  white-space: nowrap;
  border-bottom: 1px solid #EDF1F5;
  border-top: 1px solid #EDF1F5;
  background: #FFFFFF;
  -webkit-transition: -webkit-transform 0.2s ease-out;
  -webkit-transition: transform 0.2s ease-out;
  transition: transform 0.2s ease-out;
  height: 58px;
  border-bottom: none;
}

.c13 {
  white-space: nowrap;
  border-bottom: 1px solid #EDF1F5;
  border-top: 1px solid #EDF1F5;
  background: #FFFFFF;
  -webkit-transition: -webkit-transform 0.2s ease-out;
  -webkit-transition: transform 0.2s ease-out;
  transition: transform 0.2s ease-out;
  height: 58px;
}

.c18 {
  height: 2px;
  padding: 0;
}

.c19 {
  height: 100%;
  -webkit-animation-name: bqbqsY;
  animation-name: bqbqsY;
  -webkit-animation-duration: 1s;
  animation-duration: 1s;
  -webkit-animation-timing-function: ease-in-out;
  animation-timing-function: ease-in-out;
  width: 70%;
  background: #8FA1B3;
}

.c20 {
  height: 100%;
  -webkit-animation-name: jxTSlB;
  animation-name: jxTSlB;
  -webkit-animation-duration: 1s;
  animation-duration: 1s;
  -webkit-animation-timing-function: ease-in-out;
  animation-timing-function: ease-in-out;
  width: 50%;
  background: #8FA1B3;
}

.c8 {
  display: none;
  margin: 0;
  -webkit-transition: -webkit-transform .2s ease-out,display .2s ease-out;
  -webkit-transition: transform .2s ease-out,display .2s ease-out;
  transition: transform .2s ease-out,display .2s ease-out;
  margin-left: 8px;
}

.c22:hover .c8 {
  display: inline-block;
}

.c12 {
  display: none;
  margin: 0;
  -webkit-transition: -webkit-transform .2s ease-out,display .2s ease-out;
  -webkit-transition: transform .2s ease-out,display .2s ease-out;
  transition: transform .2s ease-out,display .2s ease-out;
  margin-right: 8px;
  display: inline-block;
}

.c22:hover .c12 {
  display: inline-block;
}

.c3:hover .c21::before {
  background-color: #E1E6EB;
  border-color: #667380;
  -webkit-transition: .25s ease-out,color .25s ease-out;
  transition: .25s ease-out,color .25s ease-out;
}

.c6 {
  font-size: 16px;
  line-height: 24px;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  color: #424F5C;
  font-weight: 600;
}

.c7,
.c7:link,
.c7:visited,
.c7:hover,
.c7:active {
  color: inherit;
}

<Table
  columns={
    Array [
      Object {
        "alignment": "left",
        "content": [Function],
        "name": "fileName",
        "size": "auto",
        "title": "file name",
      },
      Object {
        "alignment": "right",
        "content": [Function],
        "name": "createAt",
        "size": "shrink",
        "title": "created at",
      },
    ]
  }
  emptyState={
    <div>
      empty
    </div>
  }
  isMobile={true}
  onSelectionChanged={
    [MockFunction] {
      "calls": Array [
        Array [
          Array [],
        ],
        Array [
          Array [],
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  onSortChange={[MockFunction]}
  rows={
    Array [
      Object {
        "contentOverride": [Function],
        "data": Object {
          "createAt": "05/01/2018",
          "fileName": "fail.pdf",
          "fileType": "PDF",
          "size": "8.2",
        },
        "id": "0",
        "isRemovable": true,
        "isSelectable": false,
        "onClick": [MockFunction],
        "variant": "red",
      },
      Object {
        "contentOverride": [Function],
        "data": Object {
          "createAt": "05/01/2018",
          "fileName": "uploading.pdf",
          "fileType": "PDF",
          "size": "99",
        },
        "id": "1",
        "isRemovable": true,
        "isSelectable": false,
        "progress": 0.7,
      },
      Object {
        "contentOverride": [Function],
        "data": Object {
          "createAt": "05/01/2018",
          "fileName": "success.pdf",
          "fileType": "PDF",
          "size": "3.7",
        },
        "id": "2",
        "isRemovable": true,
        "isSelectable": false,
        "progress": 0.5,
      },
      Object {
        "data": Object {
          "createAt": "05/01/2018",
          "fileName": "test.pdf",
          "fileType": "PDF",
          "size": "2.2",
        },
        "id": "3",
        "isSelectable": true,
      },
      Object {
        "data": Object {
          "createAt": "05/01/2018",
          "fileName": "test1.pdf",
          "fileType": "PDF",
          "size": "1.5",
        },
        "id": "4",
        "isSelectable": true,
      },
    ]
  }
  sort={
    Object {
      "createAt": "down",
    }
  }
>
  <styled.div
    data-component-type="table"
  >
    <StyledComponent
      data-component-type="table"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-iwsKbI",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  border: 1px solid ",
              "#EDF1F5",
              ";

  ",
              [Function],
              "
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-iwsKbI",
          "target": "div",
          "toString": [Function],
          "usesTheme": false,
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
        data-component-type="table"
      >
        <styled.table>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gZMcBi",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  margin: 0;
  overflow: hidden;
  border-collapse: collapse;
  border-spacing: 0;
",
                  ],
                },
                "displayName": "styled.table",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gZMcBi",
                "target": "table",
                "toString": [Function],
                "usesTheme": false,
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <table
              className="c1"
            >
              <styled.thead>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-dnqmqq",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  background: none;
  border-bottom: none;
",
                        ],
                      },
                      "displayName": "styled.thead",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-dnqmqq",
                      "target": "thead",
                      "toString": [Function],
                      "usesTheme": false,
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <thead
                    className="c2"
                  >
                    <TableHeader
                      columns={
                        Array [
                          Object {
                            "alignment": "left",
                            "content": [Function],
                            "name": "fileName",
                            "size": "auto",
                            "title": "file name",
                          },
                          Object {
                            "alignment": "right",
                            "content": [Function],
                            "name": "createAt",
                            "size": "shrink",
                            "title": "created at",
                          },
                        ]
                      }
                      hasBulkAction={false}
                      hasTableSwipeActions={false}
                      isEmpty={false}
                      isMobile={true}
                      onSortChange={[MockFunction]}
                      selectedAll="false"
                      setSelectedAll={[Function]}
                      sort={
                        Object {
                          "createAt": "down",
                        }
                      }
                    >
                      <styled.tr
                        variant="neutral"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c3",
                                "isStatic": false,
                                "lastClassName": "c13",
                                "rules": Array [
                                  "
  white-space: nowrap;
  border-bottom: 1px solid ",
                                  "#EDF1F5",
                                  ";
  border-top: 1px solid ",
                                  "#EDF1F5",
                                  ";
  background: ",
                                  "#FFFFFF",
                                  ";
  transition: transform 0.2s ease-out;
  height: ",
                                  "58",
                                  "px;

  ",
                                  [Function],
                                  "

  ",
                                  [Function],
                                  "

  ",
                                  [Function],
                                  "

  ",
                                  [Function],
                                  "

  ",
                                  [Function],
                                  "
",
                                ],
                              },
                              "displayName": "styled.tr",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c3",
                              "target": "tr",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          variant="neutral"
                        >
                          <tr
                            className="c3 c4"
                          >
                            <styled.th
                              alignment="left"
                              isFirstColumn={false}
                              isLastColumn={false}
                              key="fileName"
                              size="auto"
                            >
                              <StyledComponent
                                alignment="left"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-VigVT",
                                      "isStatic": false,
                                      "lastClassName": "c11",
                                      "rules": Array [
                                        "
  padding:  ",
                                        "12",
                                        "px ",
                                        "16",
                                        "px;
  text-align: left;

  ",
                                        [Function],
                                        "

  ",
                                        [Function],
                                        "

  ",
                                        [Function],
                                        "

  ",
                                        [Function],
                                        "
",
                                      ],
                                    },
                                    "displayName": "styled.th",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-VigVT",
                                    "target": "th",
                                    "toString": [Function],
                                    "usesTheme": false,
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isFirstColumn={false}
                                isLastColumn={false}
                                size="auto"
                              >
                                <th
                                  className="c5"
                                  size="auto"
                                >
                                  <TableHeaderCellContent
                                    column={
                                      Object {
                                        "alignment": "left",
                                        "content": [Function],
                                        "name": "fileName",
                                        "size": "auto",
                                        "title": "file name",
                                      }
                                    }
                                    hasTableSwipeActions={false}
                                    isFirstColumn={false}
                                    isLastColumn={false}
                                    onSortChange={[MockFunction]}
                                    sort={
                                      Object {
                                        "createAt": "down",
                                      }
                                    }
                                  >
                                    <span
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                    >
                                      <Text
                                        isInline={true}
                                        tag="span"
                                        type="body"
                                        weight={600}
                                      >
                                        <styled.span
                                          as="span"
                                          data-component-type="text"
                                          isInline={true}
                                          textType="body"
                                          weight={600}
                                        >
                                          <StyledComponent
                                            as="span"
                                            data-component-type="text"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-cMljjf",
                                                  "isStatic": false,
                                                  "lastClassName": "c6",
                                                  "rules": Array [
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "
",
                                                  ],
                                                },
                                                "displayName": "styled.span",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-cMljjf",
                                                "target": "span",
                                                "toString": [Function],
                                                "usesTheme": false,
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            isInline={true}
                                            textType="body"
                                            weight={600}
                                          >
                                            <span
                                              className="c6"
                                              data-component-type="text"
                                            >
                                              <Link
                                                onClick={[Function]}
                                                variant="unstyled"
                                              >
                                                <styled.a
                                                  onClick={[Function]}
                                                  role="button"
                                                  variant="unstyled"
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-jAaTju",
                                                          "isStatic": false,
                                                          "lastClassName": "c7",
                                                          "rules": Array [
                                                            "
  &:hover {
    ",
                                                            [Function],
                                                            "
  }

  ",
                                                            [Function],
                                                            "
",
                                                          ],
                                                        },
                                                        "displayName": "styled.a",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-jAaTju",
                                                        "target": "a",
                                                        "toString": [Function],
                                                        "usesTheme": false,
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    onClick={[Function]}
                                                    role="button"
                                                    variant="unstyled"
                                                  >
                                                    <a
                                                      className="c7"
                                                      onClick={[Function]}
                                                      role="button"
                                                    >
                                                      file name
                                                    </a>
                                                  </StyledComponent>
                                                </styled.a>
                                              </Link>
                                            </span>
                                          </StyledComponent>
                                        </styled.span>
                                      </Text>
                                    </span>
                                    <styled.div
                                      alignment="left"
                                      onClick={[Function]}
                                    >
                                      <StyledComponent
                                        alignment="left"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-ckVGcZ",
                                              "isStatic": false,
                                              "lastClassName": "c12",
                                              "rules": Array [
                                                "
  display: none;
  margin: 0;
  transition: transform .2s ease-out, display .2s ease-out;

  ",
                                                [Function],
                                                "

  ",
                                                [Function],
                                                "

  ",
                                                [Function],
                                                "

  ",
                                                [Function],
                                                "

  ",
                                                ".c22",
                                                ":hover & {
    display: inline-block;
  }
",
                                              ],
                                            },
                                            "displayName": "styled.div",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-ckVGcZ",
                                            "target": "div",
                                            "toString": [Function],
                                            "usesTheme": false,
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onClick={[Function]}
                                      >
                                        <div
                                          className="c8"
                                          onClick={[Function]}
                                        >
                                          <FontAwesomeIconButton
                                            icon="arrow-down"
                                            isHovered={false}
                                            type="solid"
                                          >
                                            <styled.button
                                              data-component-type="font_awesome_icon_button"
                                              isHovered={false}
                                              isSelected={false}
                                              variant="neutral"
                                            >
                                              <StyledComponent
                                                data-component-type="font_awesome_icon_button"
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-bZQynM",
                                                      "isStatic": false,
                                                      "lastClassName": "c9",
                                                      "rules": Array [
                                                        "
  outline: none;
  cursor: pointer;
  width: ",
                                                        "32",
                                                        "px;
  height: ",
                                                        "32",
                                                        "px;
  border-radius: ",
                                                        "32",
                                                        "px;
  transition: 0.15s ease-in;
  ",
                                                        [Function],
                                                        ";
  ",
                                                        [Function],
                                                        "
  ",
                                                        [Function],
                                                        "

  ",
                                                        [Function],
                                                        "
",
                                                      ],
                                                    },
                                                    "displayName": "styled.button",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-bZQynM",
                                                    "target": "button",
                                                    "toString": [Function],
                                                    "usesTheme": false,
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                isHovered={false}
                                                isSelected={false}
                                                variant="neutral"
                                              >
                                                <button
                                                  className="c9"
                                                  data-component-type="font_awesome_icon_button"
                                                >
                                                  <FontAwesomeIcon
                                                    icon="arrow-down"
                                                    type="solid"
                                                  >
                                                    <Icon
                                                      icon="fas fa-arrow-down"
                                                    >
                                                      <styled.i
                                                        aria-hidden={true}
                                                        className="icon fas fa-arrow-down"
                                                        size="medium"
                                                      >
                                                        <StyledComponent
                                                          aria-hidden={true}
                                                          className="icon fas fa-arrow-down"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htpNat",
                                                                "isStatic": false,
                                                                "lastClassName": "c10",
                                                                "rules": Array [
                                                                  "
  display: inline-block;
  font-stretch: normal;
  --fa-primary-color: ",
                                                                  "#2512B3",
                                                                  ";
  --fa-secondary-color: ",
                                                                  "#2512B3",
                                                                  ";

  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "
  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "

  &.icon {
    text-align: center;

  ",
                                                                  [Function],
                                                                  "
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.i",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htpNat",
                                                              "target": "i",
                                                              "toString": [Function],
                                                              "usesTheme": false,
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          size="medium"
                                                        >
                                                          <i
                                                            aria-hidden={true}
                                                            className="c10 icon fas fa-arrow-down"
                                                            size="medium"
                                                          />
                                                        </StyledComponent>
                                                      </styled.i>
                                                    </Icon>
                                                  </FontAwesomeIcon>
                                                </button>
                                              </StyledComponent>
                                            </styled.button>
                                          </FontAwesomeIconButton>
                                        </div>
                                      </StyledComponent>
                                    </styled.div>
                                  </TableHeaderCellContent>
                                </th>
                              </StyledComponent>
                            </styled.th>
                            <styled.th
                              alignment="right"
                              isFirstColumn={false}
                              isLastColumn={true}
                              key="createAt"
                              size="shrink"
                            >
                              <StyledComponent
                                alignment="right"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-VigVT",
                                      "isStatic": false,
                                      "lastClassName": "c11",
                                      "rules": Array [
                                        "
  padding:  ",
                                        "12",
                                        "px ",
                                        "16",
                                        "px;
  text-align: left;

  ",
                                        [Function],
                                        "

  ",
                                        [Function],
                                        "

  ",
                                        [Function],
                                        "

  ",
                                        [Function],
                                        "
",
                                      ],
                                    },
                                    "displayName": "styled.th",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-VigVT",
                                    "target": "th",
                                    "toString": [Function],
                                    "usesTheme": false,
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isFirstColumn={false}
                                isLastColumn={true}
                                size="shrink"
                              >
                                <th
                                  className="c11"
                                  size="shrink"
                                >
                                  <TableHeaderCellContent
                                    column={
                                      Object {
                                        "alignment": "right",
                                        "content": [Function],
                                        "name": "createAt",
                                        "size": "shrink",
                                        "title": "created at",
                                      }
                                    }
                                    hasTableSwipeActions={false}
                                    isFirstColumn={false}
                                    isLastColumn={true}
                                    onSortChange={[MockFunction]}
                                    sort={
                                      Object {
                                        "createAt": "down",
                                      }
                                    }
                                  >
                                    <styled.div
                                      alignment="right"
                                      onClick={[Function]}
                                      sort="down"
                                    >
                                      <StyledComponent
                                        alignment="right"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-ckVGcZ",
                                              "isStatic": false,
                                              "lastClassName": "c12",
                                              "rules": Array [
                                                "
  display: none;
  margin: 0;
  transition: transform .2s ease-out, display .2s ease-out;

  ",
                                                [Function],
                                                "

  ",
                                                [Function],
                                                "

  ",
                                                [Function],
                                                "

  ",
                                                [Function],
                                                "

  ",
                                                ".c22",
                                                ":hover & {
    display: inline-block;
  }
",
                                              ],
                                            },
                                            "displayName": "styled.div",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-ckVGcZ",
                                            "target": "div",
                                            "toString": [Function],
                                            "usesTheme": false,
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onClick={[Function]}
                                        sort="down"
                                      >
                                        <div
                                          className="c12"
                                          onClick={[Function]}
                                        >
                                          <FontAwesomeIconButton
                                            icon="arrow-down"
                                            isHovered={false}
                                            type="solid"
                                          >
                                            <styled.button
                                              data-component-type="font_awesome_icon_button"
                                              isHovered={false}
                                              isSelected={false}
                                              variant="neutral"
                                            >
                                              <StyledComponent
                                                data-component-type="font_awesome_icon_button"
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-bZQynM",
                                                      "isStatic": false,
                                                      "lastClassName": "c9",
                                                      "rules": Array [
                                                        "
  outline: none;
  cursor: pointer;
  width: ",
                                                        "32",
                                                        "px;
  height: ",
                                                        "32",
                                                        "px;
  border-radius: ",
                                                        "32",
                                                        "px;
  transition: 0.15s ease-in;
  ",
                                                        [Function],
                                                        ";
  ",
                                                        [Function],
                                                        "
  ",
                                                        [Function],
                                                        "

  ",
                                                        [Function],
                                                        "
",
                                                      ],
                                                    },
                                                    "displayName": "styled.button",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-bZQynM",
                                                    "target": "button",
                                                    "toString": [Function],
                                                    "usesTheme": false,
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                isHovered={false}
                                                isSelected={false}
                                                variant="neutral"
                                              >
                                                <button
                                                  className="c9"
                                                  data-component-type="font_awesome_icon_button"
                                                >
                                                  <FontAwesomeIcon
                                                    icon="arrow-down"
                                                    type="solid"
                                                  >
                                                    <Icon
                                                      icon="fas fa-arrow-down"
                                                    >
                                                      <styled.i
                                                        aria-hidden={true}
                                                        className="icon fas fa-arrow-down"
                                                        size="medium"
                                                      >
                                                        <StyledComponent
                                                          aria-hidden={true}
                                                          className="icon fas fa-arrow-down"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htpNat",
                                                                "isStatic": false,
                                                                "lastClassName": "c10",
                                                                "rules": Array [
                                                                  "
  display: inline-block;
  font-stretch: normal;
  --fa-primary-color: ",
                                                                  "#2512B3",
                                                                  ";
  --fa-secondary-color: ",
                                                                  "#2512B3",
                                                                  ";

  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "
  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "

  &.icon {
    text-align: center;

  ",
                                                                  [Function],
                                                                  "
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.i",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htpNat",
                                                              "target": "i",
                                                              "toString": [Function],
                                                              "usesTheme": false,
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          size="medium"
                                                        >
                                                          <i
                                                            aria-hidden={true}
                                                            className="c10 icon fas fa-arrow-down"
                                                            size="medium"
                                                          />
                                                        </StyledComponent>
                                                      </styled.i>
                                                    </Icon>
                                                  </FontAwesomeIcon>
                                                </button>
                                              </StyledComponent>
                                            </styled.button>
                                          </FontAwesomeIconButton>
                                        </div>
                                      </StyledComponent>
                                    </styled.div>
                                    <span
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                    >
                                      <Text
                                        isInline={true}
                                        tag="span"
                                        type="body"
                                        weight={600}
                                      >
                                        <styled.span
                                          as="span"
                                          data-component-type="text"
                                          isInline={true}
                                          textType="body"
                                          weight={600}
                                        >
                                          <StyledComponent
                                            as="span"
                                            data-component-type="text"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-cMljjf",
                                                  "isStatic": false,
                                                  "lastClassName": "c6",
                                                  "rules": Array [
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "
",
                                                  ],
                                                },
                                                "displayName": "styled.span",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-cMljjf",
                                                "target": "span",
                                                "toString": [Function],
                                                "usesTheme": false,
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            isInline={true}
                                            textType="body"
                                            weight={600}
                                          >
                                            <span
                                              className="c6"
                                              data-component-type="text"
                                            >
                                              <Link
                                                onClick={[Function]}
                                                variant="unstyled"
                                              >
                                                <styled.a
                                                  onClick={[Function]}
                                                  role="button"
                                                  variant="unstyled"
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-jAaTju",
                                                          "isStatic": false,
                                                          "lastClassName": "c7",
                                                          "rules": Array [
                                                            "
  &:hover {
    ",
                                                            [Function],
                                                            "
  }

  ",
                                                            [Function],
                                                            "
",
                                                          ],
                                                        },
                                                        "displayName": "styled.a",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-jAaTju",
                                                        "target": "a",
                                                        "toString": [Function],
                                                        "usesTheme": false,
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    onClick={[Function]}
                                                    role="button"
                                                    variant="unstyled"
                                                  >
                                                    <a
                                                      className="c7"
                                                      onClick={[Function]}
                                                      role="button"
                                                    >
                                                      created at
                                                    </a>
                                                  </StyledComponent>
                                                </styled.a>
                                              </Link>
                                            </span>
                                          </StyledComponent>
                                        </styled.span>
                                      </Text>
                                    </span>
                                  </TableHeaderCellContent>
                                </th>
                              </StyledComponent>
                            </styled.th>
                          </tr>
                        </StyledComponent>
                      </styled.tr>
                    </TableHeader>
                  </thead>
                </StyledComponent>
              </styled.thead>
              <tbody>
                <TableRow
                  columns={
                    Array [
                      Object {
                        "alignment": "left",
                        "content": [Function],
                        "name": "fileName",
                        "size": "auto",
                        "title": "file name",
                      },
                      Object {
                        "alignment": "right",
                        "content": [Function],
                        "name": "createAt",
                        "size": "shrink",
                        "title": "created at",
                      },
                    ]
                  }
                  hasTableSwipeActions={false}
                  isMobile={true}
                  key="0"
                  row={
                    Object {
                      "contentOverride": [Function],
                      "data": Object {
                        "createAt": "05/01/2018",
                        "fileName": "fail.pdf",
                        "fileType": "PDF",
                        "size": "8.2",
                      },
                      "id": "0",
                      "isRemovable": true,
                      "isSelectable": false,
                      "onClick": [MockFunction],
                      "variant": "red",
                    }
                  }
                  selectedRows={
                    Object {
                      "3": false,
                      "4": false,
                    }
                  }
                  setSelectedRows={[Function]}
                >
                  <styled.tr
                    isHoverable={false}
                    isSelected={false}
                    movement={0}
                    onMouseDown={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onTouchStart={[Function]}
                    variant="red"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "c3",
                            "isStatic": false,
                            "lastClassName": "c13",
                            "rules": Array [
                              "
  white-space: nowrap;
  border-bottom: 1px solid ",
                              "#EDF1F5",
                              ";
  border-top: 1px solid ",
                              "#EDF1F5",
                              ";
  background: ",
                              "#FFFFFF",
                              ";
  transition: transform 0.2s ease-out;
  height: ",
                              "58",
                              "px;

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.tr",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "c3",
                          "target": "tr",
                          "toString": [Function],
                          "usesTheme": false,
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      isHoverable={false}
                      isSelected={false}
                      movement={0}
                      onMouseDown={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTouchStart={[Function]}
                      variant="red"
                    >
                      <tr
                        className="c3 c13"
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onTouchStart={[Function]}
                      >
                        <styled.td
                          alignment="left"
                          isFirstColumn={true}
                          isLastColumn={false}
                          key="fileName"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            alignment="left"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "c15",
                                  "rules": Array [
                                    "
  padding: ",
                                    "12",
                                    "px;
  text-align: left;

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "
",
                                  ],
                                },
                                "displayName": "styled.td",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": "td",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            isFirstColumn={true}
                            isLastColumn={false}
                            onClick={[Function]}
                          >
                            <td
                              className="c14"
                              onClick={[Function]}
                            >
                              <div
                                key="0"
                              >
                                override
                              </div>
                            </td>
                          </StyledComponent>
                        </styled.td>
                        <styled.td
                          alignment="right"
                          isFirstColumn={false}
                          isLastColumn={true}
                          key="createAt"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            alignment="right"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "c15",
                                  "rules": Array [
                                    "
  padding: ",
                                    "12",
                                    "px;
  text-align: left;

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "
",
                                  ],
                                },
                                "displayName": "styled.td",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": "td",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            isFirstColumn={false}
                            isLastColumn={true}
                            onClick={[Function]}
                          >
                            <td
                              className="c15"
                              onClick={[Function]}
                            >
                              <div
                                key="1"
                              >
                                override
                              </div>
                            </td>
                          </StyledComponent>
                        </styled.td>
                      </tr>
                    </StyledComponent>
                  </styled.tr>
                </TableRow>
                <TableRow
                  columns={
                    Array [
                      Object {
                        "alignment": "left",
                        "content": [Function],
                        "name": "fileName",
                        "size": "auto",
                        "title": "file name",
                      },
                      Object {
                        "alignment": "right",
                        "content": [Function],
                        "name": "createAt",
                        "size": "shrink",
                        "title": "created at",
                      },
                    ]
                  }
                  hasTableSwipeActions={false}
                  isMobile={true}
                  key="1"
                  row={
                    Object {
                      "contentOverride": [Function],
                      "data": Object {
                        "createAt": "05/01/2018",
                        "fileName": "uploading.pdf",
                        "fileType": "PDF",
                        "size": "99",
                      },
                      "id": "1",
                      "isRemovable": true,
                      "isSelectable": false,
                      "progress": 0.7,
                    }
                  }
                  selectedRows={
                    Object {
                      "3": false,
                      "4": false,
                    }
                  }
                  setSelectedRows={[Function]}
                >
                  <styled.tr
                    hasProgressBar={0.7}
                    isHoverable={false}
                    isSelected={false}
                    movement={0}
                    onMouseDown={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onTouchStart={[Function]}
                    variant="neutral"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "c3",
                            "isStatic": false,
                            "lastClassName": "c13",
                            "rules": Array [
                              "
  white-space: nowrap;
  border-bottom: 1px solid ",
                              "#EDF1F5",
                              ";
  border-top: 1px solid ",
                              "#EDF1F5",
                              ";
  background: ",
                              "#FFFFFF",
                              ";
  transition: transform 0.2s ease-out;
  height: ",
                              "58",
                              "px;

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.tr",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "c3",
                          "target": "tr",
                          "toString": [Function],
                          "usesTheme": false,
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      hasProgressBar={0.7}
                      isHoverable={false}
                      isSelected={false}
                      movement={0}
                      onMouseDown={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTouchStart={[Function]}
                      variant="neutral"
                    >
                      <tr
                        className="c3 c16"
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onTouchStart={[Function]}
                      >
                        <styled.td
                          alignment="left"
                          isFirstColumn={true}
                          isLastColumn={false}
                          key="fileName"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            alignment="left"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "c15",
                                  "rules": Array [
                                    "
  padding: ",
                                    "12",
                                    "px;
  text-align: left;

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "
",
                                  ],
                                },
                                "displayName": "styled.td",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": "td",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            isFirstColumn={true}
                            isLastColumn={false}
                            onClick={[Function]}
                          >
                            <td
                              className="c14"
                              onClick={[Function]}
                            >
                              <div
                                key="0"
                              >
                                override
                              </div>
                            </td>
                          </StyledComponent>
                        </styled.td>
                        <styled.td
                          alignment="right"
                          isFirstColumn={false}
                          isLastColumn={true}
                          key="createAt"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            alignment="right"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "c15",
                                  "rules": Array [
                                    "
  padding: ",
                                    "12",
                                    "px;
  text-align: left;

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "
",
                                  ],
                                },
                                "displayName": "styled.td",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": "td",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            isFirstColumn={false}
                            isLastColumn={true}
                            onClick={[Function]}
                          >
                            <td
                              className="c15"
                              onClick={[Function]}
                            >
                              <div
                                key="1"
                              >
                                override
                              </div>
                            </td>
                          </StyledComponent>
                        </styled.td>
                      </tr>
                    </StyledComponent>
                  </styled.tr>
                  <styled.tr>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kAzzGY",
                            "isStatic": false,
                            "lastClassName": "c17",
                            "rules": Array [
                              "
  border-bottom: 1px solid ",
                              "#EDF1F5",
                              ";
  background: ",
                              "#FFFFFF",
                              ";
",
                            ],
                          },
                          "displayName": "styled.tr",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kAzzGY",
                          "target": "tr",
                          "toString": [Function],
                          "usesTheme": false,
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <tr
                        className="c17"
                      >
                        <styled.td
                          colSpan={2}
                        >
                          <StyledComponent
                            colSpan={2}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-kgoBCf",
                                  "isStatic": false,
                                  "lastClassName": "c18",
                                  "rules": Array [
                                    "
  height: ",
                                    "2",
                                    "px;
  padding: 0;
",
                                  ],
                                },
                                "displayName": "styled.td",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-kgoBCf",
                                "target": "td",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <td
                              className="c18"
                              colSpan={2}
                            >
                              <styled.div
                                percentage={70}
                                previousPercentage={0}
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-kGXeez",
                                        "isStatic": false,
                                        "lastClassName": "c20",
                                        "rules": Array [
                                          "
  height: 100%;
  animation-name: ",
                                          [Function],
                                          ";
  animation-duration: 1s;
  animation-timing-function: ease-in-out;

  ",
                                          [Function],
                                          "
",
                                        ],
                                      },
                                      "displayName": "styled.div",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-kGXeez",
                                      "target": "div",
                                      "toString": [Function],
                                      "usesTheme": false,
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  percentage={70}
                                  previousPercentage={0}
                                >
                                  <div
                                    className="c19"
                                  />
                                </StyledComponent>
                              </styled.div>
                            </td>
                          </StyledComponent>
                        </styled.td>
                      </tr>
                    </StyledComponent>
                  </styled.tr>
                </TableRow>
                <TableRow
                  columns={
                    Array [
                      Object {
                        "alignment": "left",
                        "content": [Function],
                        "name": "fileName",
                        "size": "auto",
                        "title": "file name",
                      },
                      Object {
                        "alignment": "right",
                        "content": [Function],
                        "name": "createAt",
                        "size": "shrink",
                        "title": "created at",
                      },
                    ]
                  }
                  hasTableSwipeActions={false}
                  isMobile={true}
                  key="2"
                  row={
                    Object {
                      "contentOverride": [Function],
                      "data": Object {
                        "createAt": "05/01/2018",
                        "fileName": "success.pdf",
                        "fileType": "PDF",
                        "size": "3.7",
                      },
                      "id": "2",
                      "isRemovable": true,
                      "isSelectable": false,
                      "progress": 0.5,
                    }
                  }
                  selectedRows={
                    Object {
                      "3": false,
                      "4": false,
                    }
                  }
                  setSelectedRows={[Function]}
                >
                  <styled.tr
                    hasProgressBar={0.5}
                    isHoverable={false}
                    isSelected={false}
                    movement={0}
                    onMouseDown={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onTouchStart={[Function]}
                    variant="neutral"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "c3",
                            "isStatic": false,
                            "lastClassName": "c13",
                            "rules": Array [
                              "
  white-space: nowrap;
  border-bottom: 1px solid ",
                              "#EDF1F5",
                              ";
  border-top: 1px solid ",
                              "#EDF1F5",
                              ";
  background: ",
                              "#FFFFFF",
                              ";
  transition: transform 0.2s ease-out;
  height: ",
                              "58",
                              "px;

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.tr",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "c3",
                          "target": "tr",
                          "toString": [Function],
                          "usesTheme": false,
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      hasProgressBar={0.5}
                      isHoverable={false}
                      isSelected={false}
                      movement={0}
                      onMouseDown={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTouchStart={[Function]}
                      variant="neutral"
                    >
                      <tr
                        className="c3 c16"
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onTouchStart={[Function]}
                      >
                        <styled.td
                          alignment="left"
                          isFirstColumn={true}
                          isLastColumn={false}
                          key="fileName"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            alignment="left"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "c15",
                                  "rules": Array [
                                    "
  padding: ",
                                    "12",
                                    "px;
  text-align: left;

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "
",
                                  ],
                                },
                                "displayName": "styled.td",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": "td",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            isFirstColumn={true}
                            isLastColumn={false}
                            onClick={[Function]}
                          >
                            <td
                              className="c14"
                              onClick={[Function]}
                            >
                              <div
                                key="0"
                              >
                                override
                              </div>
                            </td>
                          </StyledComponent>
                        </styled.td>
                        <styled.td
                          alignment="right"
                          isFirstColumn={false}
                          isLastColumn={true}
                          key="createAt"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            alignment="right"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "c15",
                                  "rules": Array [
                                    "
  padding: ",
                                    "12",
                                    "px;
  text-align: left;

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "
",
                                  ],
                                },
                                "displayName": "styled.td",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": "td",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            isFirstColumn={false}
                            isLastColumn={true}
                            onClick={[Function]}
                          >
                            <td
                              className="c15"
                              onClick={[Function]}
                            >
                              <div
                                key="1"
                              >
                                override
                              </div>
                            </td>
                          </StyledComponent>
                        </styled.td>
                      </tr>
                    </StyledComponent>
                  </styled.tr>
                  <styled.tr>
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kAzzGY",
                            "isStatic": false,
                            "lastClassName": "c17",
                            "rules": Array [
                              "
  border-bottom: 1px solid ",
                              "#EDF1F5",
                              ";
  background: ",
                              "#FFFFFF",
                              ";
",
                            ],
                          },
                          "displayName": "styled.tr",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kAzzGY",
                          "target": "tr",
                          "toString": [Function],
                          "usesTheme": false,
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <tr
                        className="c17"
                      >
                        <styled.td
                          colSpan={2}
                        >
                          <StyledComponent
                            colSpan={2}
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-kgoBCf",
                                  "isStatic": false,
                                  "lastClassName": "c18",
                                  "rules": Array [
                                    "
  height: ",
                                    "2",
                                    "px;
  padding: 0;
",
                                  ],
                                },
                                "displayName": "styled.td",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-kgoBCf",
                                "target": "td",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                          >
                            <td
                              className="c18"
                              colSpan={2}
                            >
                              <styled.div
                                percentage={50}
                                previousPercentage={0}
                              >
                                <StyledComponent
                                  forwardedComponent={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "attrs": Array [],
                                      "componentStyle": ComponentStyle {
                                        "componentId": "sc-kGXeez",
                                        "isStatic": false,
                                        "lastClassName": "c20",
                                        "rules": Array [
                                          "
  height: 100%;
  animation-name: ",
                                          [Function],
                                          ";
  animation-duration: 1s;
  animation-timing-function: ease-in-out;

  ",
                                          [Function],
                                          "
",
                                        ],
                                      },
                                      "displayName": "styled.div",
                                      "foldedComponentIds": Array [],
                                      "render": [Function],
                                      "styledComponentId": "sc-kGXeez",
                                      "target": "div",
                                      "toString": [Function],
                                      "usesTheme": false,
                                      "warnTooManyClasses": [Function],
                                      "withComponent": [Function],
                                    }
                                  }
                                  forwardedRef={null}
                                  percentage={50}
                                  previousPercentage={0}
                                >
                                  <div
                                    className="c20"
                                  />
                                </StyledComponent>
                              </styled.div>
                            </td>
                          </StyledComponent>
                        </styled.td>
                      </tr>
                    </StyledComponent>
                  </styled.tr>
                </TableRow>
                <TableRow
                  columns={
                    Array [
                      Object {
                        "alignment": "left",
                        "content": [Function],
                        "name": "fileName",
                        "size": "auto",
                        "title": "file name",
                      },
                      Object {
                        "alignment": "right",
                        "content": [Function],
                        "name": "createAt",
                        "size": "shrink",
                        "title": "created at",
                      },
                    ]
                  }
                  hasTableSwipeActions={false}
                  isMobile={true}
                  key="3"
                  row={
                    Object {
                      "data": Object {
                        "createAt": "05/01/2018",
                        "fileName": "test.pdf",
                        "fileType": "PDF",
                        "size": "2.2",
                      },
                      "id": "3",
                      "isSelectable": true,
                    }
                  }
                  selectedRows={
                    Object {
                      "3": false,
                      "4": false,
                    }
                  }
                  setSelectedRows={[Function]}
                >
                  <styled.tr
                    isHoverable={false}
                    isSelected={false}
                    movement={0}
                    onMouseDown={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onTouchStart={[Function]}
                    variant="neutral"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "c3",
                            "isStatic": false,
                            "lastClassName": "c13",
                            "rules": Array [
                              "
  white-space: nowrap;
  border-bottom: 1px solid ",
                              "#EDF1F5",
                              ";
  border-top: 1px solid ",
                              "#EDF1F5",
                              ";
  background: ",
                              "#FFFFFF",
                              ";
  transition: transform 0.2s ease-out;
  height: ",
                              "58",
                              "px;

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.tr",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "c3",
                          "target": "tr",
                          "toString": [Function],
                          "usesTheme": false,
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      isHoverable={false}
                      isSelected={false}
                      movement={0}
                      onMouseDown={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTouchStart={[Function]}
                      variant="neutral"
                    >
                      <tr
                        className="c3 c13"
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onTouchStart={[Function]}
                      >
                        <styled.td
                          alignment="left"
                          isFirstColumn={true}
                          isLastColumn={false}
                          key="fileName"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            alignment="left"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "c15",
                                  "rules": Array [
                                    "
  padding: ",
                                    "12",
                                    "px;
  text-align: left;

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "
",
                                  ],
                                },
                                "displayName": "styled.td",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": "td",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            isFirstColumn={true}
                            isLastColumn={false}
                            onClick={[Function]}
                          >
                            <td
                              className="c14"
                              onClick={[Function]}
                            >
                              <div>
                                test.pdf
                              </div>
                            </td>
                          </StyledComponent>
                        </styled.td>
                        <styled.td
                          alignment="right"
                          isFirstColumn={false}
                          isLastColumn={true}
                          key="createAt"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            alignment="right"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "c15",
                                  "rules": Array [
                                    "
  padding: ",
                                    "12",
                                    "px;
  text-align: left;

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "
",
                                  ],
                                },
                                "displayName": "styled.td",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": "td",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            isFirstColumn={false}
                            isLastColumn={true}
                            onClick={[Function]}
                          >
                            <td
                              className="c15"
                              onClick={[Function]}
                            >
                              <div>
                                05/01/2018
                              </div>
                            </td>
                          </StyledComponent>
                        </styled.td>
                      </tr>
                    </StyledComponent>
                  </styled.tr>
                </TableRow>
                <TableRow
                  columns={
                    Array [
                      Object {
                        "alignment": "left",
                        "content": [Function],
                        "name": "fileName",
                        "size": "auto",
                        "title": "file name",
                      },
                      Object {
                        "alignment": "right",
                        "content": [Function],
                        "name": "createAt",
                        "size": "shrink",
                        "title": "created at",
                      },
                    ]
                  }
                  hasTableSwipeActions={false}
                  isMobile={true}
                  key="4"
                  row={
                    Object {
                      "data": Object {
                        "createAt": "05/01/2018",
                        "fileName": "test1.pdf",
                        "fileType": "PDF",
                        "size": "1.5",
                      },
                      "id": "4",
                      "isSelectable": true,
                    }
                  }
                  selectedRows={
                    Object {
                      "3": false,
                      "4": false,
                    }
                  }
                  setSelectedRows={[Function]}
                >
                  <styled.tr
                    isHoverable={false}
                    isSelected={false}
                    movement={0}
                    onMouseDown={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onTouchStart={[Function]}
                    variant="neutral"
                  >
                    <StyledComponent
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "c3",
                            "isStatic": false,
                            "lastClassName": "c13",
                            "rules": Array [
                              "
  white-space: nowrap;
  border-bottom: 1px solid ",
                              "#EDF1F5",
                              ";
  border-top: 1px solid ",
                              "#EDF1F5",
                              ";
  background: ",
                              "#FFFFFF",
                              ";
  transition: transform 0.2s ease-out;
  height: ",
                              "58",
                              "px;

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "

  ",
                              [Function],
                              "
",
                            ],
                          },
                          "displayName": "styled.tr",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "c3",
                          "target": "tr",
                          "toString": [Function],
                          "usesTheme": false,
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      isHoverable={false}
                      isSelected={false}
                      movement={0}
                      onMouseDown={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      onTouchStart={[Function]}
                      variant="neutral"
                    >
                      <tr
                        className="c3 c13"
                        onMouseDown={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        onTouchStart={[Function]}
                      >
                        <styled.td
                          alignment="left"
                          isFirstColumn={true}
                          isLastColumn={false}
                          key="fileName"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            alignment="left"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "c15",
                                  "rules": Array [
                                    "
  padding: ",
                                    "12",
                                    "px;
  text-align: left;

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "
",
                                  ],
                                },
                                "displayName": "styled.td",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": "td",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            isFirstColumn={true}
                            isLastColumn={false}
                            onClick={[Function]}
                          >
                            <td
                              className="c14"
                              onClick={[Function]}
                            >
                              <div>
                                test1.pdf
                              </div>
                            </td>
                          </StyledComponent>
                        </styled.td>
                        <styled.td
                          alignment="right"
                          isFirstColumn={false}
                          isLastColumn={true}
                          key="createAt"
                          onClick={[Function]}
                        >
                          <StyledComponent
                            alignment="right"
                            forwardedComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "attrs": Array [],
                                "componentStyle": ComponentStyle {
                                  "componentId": "sc-cSHVUG",
                                  "isStatic": false,
                                  "lastClassName": "c15",
                                  "rules": Array [
                                    "
  padding: ",
                                    "12",
                                    "px;
  text-align: left;

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "

  ",
                                    [Function],
                                    "
",
                                  ],
                                },
                                "displayName": "styled.td",
                                "foldedComponentIds": Array [],
                                "render": [Function],
                                "styledComponentId": "sc-cSHVUG",
                                "target": "td",
                                "toString": [Function],
                                "usesTheme": false,
                                "warnTooManyClasses": [Function],
                                "withComponent": [Function],
                              }
                            }
                            forwardedRef={null}
                            isFirstColumn={false}
                            isLastColumn={true}
                            onClick={[Function]}
                          >
                            <td
                              className="c15"
                              onClick={[Function]}
                            >
                              <div>
                                05/01/2018
                              </div>
                            </td>
                          </StyledComponent>
                        </styled.td>
                      </tr>
                    </StyledComponent>
                  </styled.tr>
                </TableRow>
              </tbody>
            </table>
          </StyledComponent>
        </styled.table>
      </div>
    </StyledComponent>
  </styled.div>
</Table>
`;

exports[`<Table /> should render an empty table 1`] = `
.c10 {
  display: inline-block;
  font-stretch: normal;
  --fa-primary-color: #2512B3;
  --fa-secondary-color: #2512B3;
}

.c10.icon {
  text-align: center;
  font-size: 1rem;
}

.c9 {
  outline: none;
  cursor: pointer;
  width: 32px;
  height: 32px;
  border-radius: 32px;
  -webkit-transition: 0.15s ease-in;
  transition: 0.15s ease-in;
  color: #667380;
}

.c9:hover {
  color: #424F5C;
  background: #EDF1F5;
  -webkit-transition: 0.2s ease-out;
  transition: 0.2s ease-out;
}

.c2 {
  background: none;
  border-bottom: none;
}

.c0 {
  border: 1px solid #EDF1F5;
}

.c1 {
  margin: 0;
  overflow: hidden;
  border-collapse: collapse;
  border-spacing: 0;
}

.c5 {
  padding: 12px 16px;
  text-align: left;
  width: 100%;
}

.c11 {
  padding: 12px 16px;
  text-align: left;
  padding: 12px 16px 12px 12px;
  text-align: right;
}

.c4 {
  white-space: nowrap;
  border-bottom: 1px solid #EDF1F5;
  border-top: 1px solid #EDF1F5;
  background: #FFFFFF;
  -webkit-transition: -webkit-transform 0.2s ease-out;
  -webkit-transition: transform 0.2s ease-out;
  transition: transform 0.2s ease-out;
  height: 58px;
}

.c13 {
  padding: 48px;
}

.c8 {
  display: none;
  margin: 0;
  -webkit-transition: -webkit-transform .2s ease-out,display .2s ease-out;
  -webkit-transition: transform .2s ease-out,display .2s ease-out;
  transition: transform .2s ease-out,display .2s ease-out;
  margin-left: 8px;
}

.c15:hover .c8 {
  display: inline-block;
}

.c12 {
  display: none;
  margin: 0;
  -webkit-transition: -webkit-transform .2s ease-out,display .2s ease-out;
  -webkit-transition: transform .2s ease-out,display .2s ease-out;
  transition: transform .2s ease-out,display .2s ease-out;
  margin-right: 8px;
  display: inline-block;
}

.c15:hover .c12 {
  display: inline-block;
}

.c3:hover .c14::before {
  background-color: #E1E6EB;
  border-color: #667380;
  -webkit-transition: .25s ease-out,color .25s ease-out;
  transition: .25s ease-out,color .25s ease-out;
}

.c6 {
  font-size: 16px;
  line-height: 24px;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  color: #424F5C;
  font-weight: 600;
}

.c7,
.c7:link,
.c7:visited,
.c7:hover,
.c7:active {
  color: inherit;
}

<Table
  columns={
    Array [
      Object {
        "alignment": "left",
        "content": [Function],
        "name": "fileName",
        "size": "auto",
        "title": "file name",
      },
      Object {
        "alignment": "right",
        "content": [Function],
        "name": "createAt",
        "size": "shrink",
        "title": "created at",
      },
    ]
  }
  emptyState={
    <div>
      empty
    </div>
  }
  onSelectionChanged={
    [MockFunction] {
      "calls": Array [
        Array [
          Array [],
        ],
        Array [
          Array [],
        ],
        Array [
          Array [],
        ],
        Array [
          Array [],
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  onSortChange={[MockFunction]}
  rows={Array []}
  sort={
    Object {
      "createAt": "down",
    }
  }
>
  <styled.div
    data-component-type="table"
  >
    <StyledComponent
      data-component-type="table"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-iwsKbI",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  border: 1px solid ",
              "#EDF1F5",
              ";

  ",
              [Function],
              "
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-iwsKbI",
          "target": "div",
          "toString": [Function],
          "usesTheme": false,
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
        data-component-type="table"
      >
        <styled.table>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gZMcBi",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  margin: 0;
  overflow: hidden;
  border-collapse: collapse;
  border-spacing: 0;
",
                  ],
                },
                "displayName": "styled.table",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gZMcBi",
                "target": "table",
                "toString": [Function],
                "usesTheme": false,
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <table
              className="c1"
            >
              <styled.thead>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-dnqmqq",
                        "isStatic": false,
                        "lastClassName": "c2",
                        "rules": Array [
                          "
  background: none;
  border-bottom: none;
",
                        ],
                      },
                      "displayName": "styled.thead",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-dnqmqq",
                      "target": "thead",
                      "toString": [Function],
                      "usesTheme": false,
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <thead
                    className="c2"
                  >
                    <TableHeader
                      columns={
                        Array [
                          Object {
                            "alignment": "left",
                            "content": [Function],
                            "name": "fileName",
                            "size": "auto",
                            "title": "file name",
                          },
                          Object {
                            "alignment": "right",
                            "content": [Function],
                            "name": "createAt",
                            "size": "shrink",
                            "title": "created at",
                          },
                        ]
                      }
                      hasBulkAction={false}
                      hasTableSwipeActions={false}
                      isEmpty={true}
                      isMobile={false}
                      onSortChange={[MockFunction]}
                      selectedAll="false"
                      setSelectedAll={[Function]}
                      sort={
                        Object {
                          "createAt": "down",
                        }
                      }
                    >
                      <styled.tr
                        variant="neutral"
                      >
                        <StyledComponent
                          forwardedComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "attrs": Array [],
                              "componentStyle": ComponentStyle {
                                "componentId": "c3",
                                "isStatic": false,
                                "lastClassName": "c4",
                                "rules": Array [
                                  "
  white-space: nowrap;
  border-bottom: 1px solid ",
                                  "#EDF1F5",
                                  ";
  border-top: 1px solid ",
                                  "#EDF1F5",
                                  ";
  background: ",
                                  "#FFFFFF",
                                  ";
  transition: transform 0.2s ease-out;
  height: ",
                                  "58",
                                  "px;

  ",
                                  [Function],
                                  "

  ",
                                  [Function],
                                  "

  ",
                                  [Function],
                                  "

  ",
                                  [Function],
                                  "

  ",
                                  [Function],
                                  "
",
                                ],
                              },
                              "displayName": "styled.tr",
                              "foldedComponentIds": Array [],
                              "render": [Function],
                              "styledComponentId": "c3",
                              "target": "tr",
                              "toString": [Function],
                              "usesTheme": false,
                              "warnTooManyClasses": [Function],
                              "withComponent": [Function],
                            }
                          }
                          forwardedRef={null}
                          variant="neutral"
                        >
                          <tr
                            className="c3 c4"
                          >
                            <styled.th
                              alignment="left"
                              isFirstColumn={false}
                              isLastColumn={false}
                              key="fileName"
                              size="auto"
                            >
                              <StyledComponent
                                alignment="left"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-VigVT",
                                      "isStatic": false,
                                      "lastClassName": "c11",
                                      "rules": Array [
                                        "
  padding:  ",
                                        "12",
                                        "px ",
                                        "16",
                                        "px;
  text-align: left;

  ",
                                        [Function],
                                        "

  ",
                                        [Function],
                                        "

  ",
                                        [Function],
                                        "

  ",
                                        [Function],
                                        "
",
                                      ],
                                    },
                                    "displayName": "styled.th",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-VigVT",
                                    "target": "th",
                                    "toString": [Function],
                                    "usesTheme": false,
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isFirstColumn={false}
                                isLastColumn={false}
                                size="auto"
                              >
                                <th
                                  className="c5"
                                  size="auto"
                                >
                                  <TableHeaderCellContent
                                    column={
                                      Object {
                                        "alignment": "left",
                                        "content": [Function],
                                        "name": "fileName",
                                        "size": "auto",
                                        "title": "file name",
                                      }
                                    }
                                    hasTableSwipeActions={false}
                                    isFirstColumn={false}
                                    isLastColumn={false}
                                    onSortChange={[MockFunction]}
                                    sort={
                                      Object {
                                        "createAt": "down",
                                      }
                                    }
                                  >
                                    <span
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                    >
                                      <Text
                                        isInline={true}
                                        tag="span"
                                        type="body"
                                        weight={600}
                                      >
                                        <styled.span
                                          as="span"
                                          data-component-type="text"
                                          isInline={true}
                                          textType="body"
                                          weight={600}
                                        >
                                          <StyledComponent
                                            as="span"
                                            data-component-type="text"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-cMljjf",
                                                  "isStatic": false,
                                                  "lastClassName": "c6",
                                                  "rules": Array [
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "
",
                                                  ],
                                                },
                                                "displayName": "styled.span",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-cMljjf",
                                                "target": "span",
                                                "toString": [Function],
                                                "usesTheme": false,
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            isInline={true}
                                            textType="body"
                                            weight={600}
                                          >
                                            <span
                                              className="c6"
                                              data-component-type="text"
                                            >
                                              <Link
                                                onClick={[Function]}
                                                variant="unstyled"
                                              >
                                                <styled.a
                                                  onClick={[Function]}
                                                  role="button"
                                                  variant="unstyled"
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-jAaTju",
                                                          "isStatic": false,
                                                          "lastClassName": "c7",
                                                          "rules": Array [
                                                            "
  &:hover {
    ",
                                                            [Function],
                                                            "
  }

  ",
                                                            [Function],
                                                            "
",
                                                          ],
                                                        },
                                                        "displayName": "styled.a",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-jAaTju",
                                                        "target": "a",
                                                        "toString": [Function],
                                                        "usesTheme": false,
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    onClick={[Function]}
                                                    role="button"
                                                    variant="unstyled"
                                                  >
                                                    <a
                                                      className="c7"
                                                      onClick={[Function]}
                                                      role="button"
                                                    >
                                                      file name
                                                    </a>
                                                  </StyledComponent>
                                                </styled.a>
                                              </Link>
                                            </span>
                                          </StyledComponent>
                                        </styled.span>
                                      </Text>
                                    </span>
                                    <styled.div
                                      alignment="left"
                                      onClick={[Function]}
                                    >
                                      <StyledComponent
                                        alignment="left"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-ckVGcZ",
                                              "isStatic": false,
                                              "lastClassName": "c12",
                                              "rules": Array [
                                                "
  display: none;
  margin: 0;
  transition: transform .2s ease-out, display .2s ease-out;

  ",
                                                [Function],
                                                "

  ",
                                                [Function],
                                                "

  ",
                                                [Function],
                                                "

  ",
                                                [Function],
                                                "

  ",
                                                ".c15",
                                                ":hover & {
    display: inline-block;
  }
",
                                              ],
                                            },
                                            "displayName": "styled.div",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-ckVGcZ",
                                            "target": "div",
                                            "toString": [Function],
                                            "usesTheme": false,
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onClick={[Function]}
                                      >
                                        <div
                                          className="c8"
                                          onClick={[Function]}
                                        >
                                          <FontAwesomeIconButton
                                            icon="arrow-down"
                                            isHovered={false}
                                            type="solid"
                                          >
                                            <styled.button
                                              data-component-type="font_awesome_icon_button"
                                              isHovered={false}
                                              isSelected={false}
                                              variant="neutral"
                                            >
                                              <StyledComponent
                                                data-component-type="font_awesome_icon_button"
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-bZQynM",
                                                      "isStatic": false,
                                                      "lastClassName": "c9",
                                                      "rules": Array [
                                                        "
  outline: none;
  cursor: pointer;
  width: ",
                                                        "32",
                                                        "px;
  height: ",
                                                        "32",
                                                        "px;
  border-radius: ",
                                                        "32",
                                                        "px;
  transition: 0.15s ease-in;
  ",
                                                        [Function],
                                                        ";
  ",
                                                        [Function],
                                                        "
  ",
                                                        [Function],
                                                        "

  ",
                                                        [Function],
                                                        "
",
                                                      ],
                                                    },
                                                    "displayName": "styled.button",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-bZQynM",
                                                    "target": "button",
                                                    "toString": [Function],
                                                    "usesTheme": false,
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                isHovered={false}
                                                isSelected={false}
                                                variant="neutral"
                                              >
                                                <button
                                                  className="c9"
                                                  data-component-type="font_awesome_icon_button"
                                                >
                                                  <FontAwesomeIcon
                                                    icon="arrow-down"
                                                    type="solid"
                                                  >
                                                    <Icon
                                                      icon="fas fa-arrow-down"
                                                    >
                                                      <styled.i
                                                        aria-hidden={true}
                                                        className="icon fas fa-arrow-down"
                                                        size="medium"
                                                      >
                                                        <StyledComponent
                                                          aria-hidden={true}
                                                          className="icon fas fa-arrow-down"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htpNat",
                                                                "isStatic": false,
                                                                "lastClassName": "c10",
                                                                "rules": Array [
                                                                  "
  display: inline-block;
  font-stretch: normal;
  --fa-primary-color: ",
                                                                  "#2512B3",
                                                                  ";
  --fa-secondary-color: ",
                                                                  "#2512B3",
                                                                  ";

  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "
  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "

  &.icon {
    text-align: center;

  ",
                                                                  [Function],
                                                                  "
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.i",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htpNat",
                                                              "target": "i",
                                                              "toString": [Function],
                                                              "usesTheme": false,
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          size="medium"
                                                        >
                                                          <i
                                                            aria-hidden={true}
                                                            className="c10 icon fas fa-arrow-down"
                                                            size="medium"
                                                          />
                                                        </StyledComponent>
                                                      </styled.i>
                                                    </Icon>
                                                  </FontAwesomeIcon>
                                                </button>
                                              </StyledComponent>
                                            </styled.button>
                                          </FontAwesomeIconButton>
                                        </div>
                                      </StyledComponent>
                                    </styled.div>
                                  </TableHeaderCellContent>
                                </th>
                              </StyledComponent>
                            </styled.th>
                            <styled.th
                              alignment="right"
                              isFirstColumn={false}
                              isLastColumn={true}
                              key="createAt"
                              size="shrink"
                            >
                              <StyledComponent
                                alignment="right"
                                forwardedComponent={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "attrs": Array [],
                                    "componentStyle": ComponentStyle {
                                      "componentId": "sc-VigVT",
                                      "isStatic": false,
                                      "lastClassName": "c11",
                                      "rules": Array [
                                        "
  padding:  ",
                                        "12",
                                        "px ",
                                        "16",
                                        "px;
  text-align: left;

  ",
                                        [Function],
                                        "

  ",
                                        [Function],
                                        "

  ",
                                        [Function],
                                        "

  ",
                                        [Function],
                                        "
",
                                      ],
                                    },
                                    "displayName": "styled.th",
                                    "foldedComponentIds": Array [],
                                    "render": [Function],
                                    "styledComponentId": "sc-VigVT",
                                    "target": "th",
                                    "toString": [Function],
                                    "usesTheme": false,
                                    "warnTooManyClasses": [Function],
                                    "withComponent": [Function],
                                  }
                                }
                                forwardedRef={null}
                                isFirstColumn={false}
                                isLastColumn={true}
                                size="shrink"
                              >
                                <th
                                  className="c11"
                                  size="shrink"
                                >
                                  <TableHeaderCellContent
                                    column={
                                      Object {
                                        "alignment": "right",
                                        "content": [Function],
                                        "name": "createAt",
                                        "size": "shrink",
                                        "title": "created at",
                                      }
                                    }
                                    hasTableSwipeActions={false}
                                    isFirstColumn={false}
                                    isLastColumn={true}
                                    onSortChange={[MockFunction]}
                                    sort={
                                      Object {
                                        "createAt": "down",
                                      }
                                    }
                                  >
                                    <styled.div
                                      alignment="right"
                                      onClick={[Function]}
                                      sort="down"
                                    >
                                      <StyledComponent
                                        alignment="right"
                                        forwardedComponent={
                                          Object {
                                            "$$typeof": Symbol(react.forward_ref),
                                            "attrs": Array [],
                                            "componentStyle": ComponentStyle {
                                              "componentId": "sc-ckVGcZ",
                                              "isStatic": false,
                                              "lastClassName": "c12",
                                              "rules": Array [
                                                "
  display: none;
  margin: 0;
  transition: transform .2s ease-out, display .2s ease-out;

  ",
                                                [Function],
                                                "

  ",
                                                [Function],
                                                "

  ",
                                                [Function],
                                                "

  ",
                                                [Function],
                                                "

  ",
                                                ".c15",
                                                ":hover & {
    display: inline-block;
  }
",
                                              ],
                                            },
                                            "displayName": "styled.div",
                                            "foldedComponentIds": Array [],
                                            "render": [Function],
                                            "styledComponentId": "sc-ckVGcZ",
                                            "target": "div",
                                            "toString": [Function],
                                            "usesTheme": false,
                                            "warnTooManyClasses": [Function],
                                            "withComponent": [Function],
                                          }
                                        }
                                        forwardedRef={null}
                                        onClick={[Function]}
                                        sort="down"
                                      >
                                        <div
                                          className="c12"
                                          onClick={[Function]}
                                        >
                                          <FontAwesomeIconButton
                                            icon="arrow-down"
                                            isHovered={false}
                                            type="solid"
                                          >
                                            <styled.button
                                              data-component-type="font_awesome_icon_button"
                                              isHovered={false}
                                              isSelected={false}
                                              variant="neutral"
                                            >
                                              <StyledComponent
                                                data-component-type="font_awesome_icon_button"
                                                forwardedComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "attrs": Array [],
                                                    "componentStyle": ComponentStyle {
                                                      "componentId": "sc-bZQynM",
                                                      "isStatic": false,
                                                      "lastClassName": "c9",
                                                      "rules": Array [
                                                        "
  outline: none;
  cursor: pointer;
  width: ",
                                                        "32",
                                                        "px;
  height: ",
                                                        "32",
                                                        "px;
  border-radius: ",
                                                        "32",
                                                        "px;
  transition: 0.15s ease-in;
  ",
                                                        [Function],
                                                        ";
  ",
                                                        [Function],
                                                        "
  ",
                                                        [Function],
                                                        "

  ",
                                                        [Function],
                                                        "
",
                                                      ],
                                                    },
                                                    "displayName": "styled.button",
                                                    "foldedComponentIds": Array [],
                                                    "render": [Function],
                                                    "styledComponentId": "sc-bZQynM",
                                                    "target": "button",
                                                    "toString": [Function],
                                                    "usesTheme": false,
                                                    "warnTooManyClasses": [Function],
                                                    "withComponent": [Function],
                                                  }
                                                }
                                                forwardedRef={null}
                                                isHovered={false}
                                                isSelected={false}
                                                variant="neutral"
                                              >
                                                <button
                                                  className="c9"
                                                  data-component-type="font_awesome_icon_button"
                                                >
                                                  <FontAwesomeIcon
                                                    icon="arrow-down"
                                                    type="solid"
                                                  >
                                                    <Icon
                                                      icon="fas fa-arrow-down"
                                                    >
                                                      <styled.i
                                                        aria-hidden={true}
                                                        className="icon fas fa-arrow-down"
                                                        size="medium"
                                                      >
                                                        <StyledComponent
                                                          aria-hidden={true}
                                                          className="icon fas fa-arrow-down"
                                                          forwardedComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "attrs": Array [],
                                                              "componentStyle": ComponentStyle {
                                                                "componentId": "sc-htpNat",
                                                                "isStatic": false,
                                                                "lastClassName": "c10",
                                                                "rules": Array [
                                                                  "
  display: inline-block;
  font-stretch: normal;
  --fa-primary-color: ",
                                                                  "#2512B3",
                                                                  ";
  --fa-secondary-color: ",
                                                                  "#2512B3",
                                                                  ";

  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "
  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "

  ",
                                                                  [Function],
                                                                  "

  &.icon {
    text-align: center;

  ",
                                                                  [Function],
                                                                  "
  }
",
                                                                ],
                                                              },
                                                              "displayName": "styled.i",
                                                              "foldedComponentIds": Array [],
                                                              "render": [Function],
                                                              "styledComponentId": "sc-htpNat",
                                                              "target": "i",
                                                              "toString": [Function],
                                                              "usesTheme": false,
                                                              "warnTooManyClasses": [Function],
                                                              "withComponent": [Function],
                                                            }
                                                          }
                                                          forwardedRef={null}
                                                          size="medium"
                                                        >
                                                          <i
                                                            aria-hidden={true}
                                                            className="c10 icon fas fa-arrow-down"
                                                            size="medium"
                                                          />
                                                        </StyledComponent>
                                                      </styled.i>
                                                    </Icon>
                                                  </FontAwesomeIcon>
                                                </button>
                                              </StyledComponent>
                                            </styled.button>
                                          </FontAwesomeIconButton>
                                        </div>
                                      </StyledComponent>
                                    </styled.div>
                                    <span
                                      onMouseEnter={[Function]}
                                      onMouseLeave={[Function]}
                                    >
                                      <Text
                                        isInline={true}
                                        tag="span"
                                        type="body"
                                        weight={600}
                                      >
                                        <styled.span
                                          as="span"
                                          data-component-type="text"
                                          isInline={true}
                                          textType="body"
                                          weight={600}
                                        >
                                          <StyledComponent
                                            as="span"
                                            data-component-type="text"
                                            forwardedComponent={
                                              Object {
                                                "$$typeof": Symbol(react.forward_ref),
                                                "attrs": Array [],
                                                "componentStyle": ComponentStyle {
                                                  "componentId": "sc-cMljjf",
                                                  "isStatic": false,
                                                  "lastClassName": "c6",
                                                  "rules": Array [
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "

  ",
                                                    [Function],
                                                    "
",
                                                  ],
                                                },
                                                "displayName": "styled.span",
                                                "foldedComponentIds": Array [],
                                                "render": [Function],
                                                "styledComponentId": "sc-cMljjf",
                                                "target": "span",
                                                "toString": [Function],
                                                "usesTheme": false,
                                                "warnTooManyClasses": [Function],
                                                "withComponent": [Function],
                                              }
                                            }
                                            forwardedRef={null}
                                            isInline={true}
                                            textType="body"
                                            weight={600}
                                          >
                                            <span
                                              className="c6"
                                              data-component-type="text"
                                            >
                                              <Link
                                                onClick={[Function]}
                                                variant="unstyled"
                                              >
                                                <styled.a
                                                  onClick={[Function]}
                                                  role="button"
                                                  variant="unstyled"
                                                >
                                                  <StyledComponent
                                                    forwardedComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "attrs": Array [],
                                                        "componentStyle": ComponentStyle {
                                                          "componentId": "sc-jAaTju",
                                                          "isStatic": false,
                                                          "lastClassName": "c7",
                                                          "rules": Array [
                                                            "
  &:hover {
    ",
                                                            [Function],
                                                            "
  }

  ",
                                                            [Function],
                                                            "
",
                                                          ],
                                                        },
                                                        "displayName": "styled.a",
                                                        "foldedComponentIds": Array [],
                                                        "render": [Function],
                                                        "styledComponentId": "sc-jAaTju",
                                                        "target": "a",
                                                        "toString": [Function],
                                                        "usesTheme": false,
                                                        "warnTooManyClasses": [Function],
                                                        "withComponent": [Function],
                                                      }
                                                    }
                                                    forwardedRef={null}
                                                    onClick={[Function]}
                                                    role="button"
                                                    variant="unstyled"
                                                  >
                                                    <a
                                                      className="c7"
                                                      onClick={[Function]}
                                                      role="button"
                                                    >
                                                      created at
                                                    </a>
                                                  </StyledComponent>
                                                </styled.a>
                                              </Link>
                                            </span>
                                          </StyledComponent>
                                        </styled.span>
                                      </Text>
                                    </span>
                                  </TableHeaderCellContent>
                                </th>
                              </StyledComponent>
                            </styled.th>
                          </tr>
                        </StyledComponent>
                      </styled.tr>
                    </TableHeader>
                  </thead>
                </StyledComponent>
              </styled.thead>
              <tbody>
                <tr>
                  <styled.td
                    colSpan={2}
                  >
                    <StyledComponent
                      colSpan={2}
                      forwardedComponent={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": Array [],
                          "componentStyle": ComponentStyle {
                            "componentId": "sc-kpOJdX",
                            "isStatic": false,
                            "lastClassName": "c13",
                            "rules": Array [
                              "
  padding: ",
                              "48",
                              "px;
",
                            ],
                          },
                          "displayName": "styled.td",
                          "foldedComponentIds": Array [],
                          "render": [Function],
                          "styledComponentId": "sc-kpOJdX",
                          "target": "td",
                          "toString": [Function],
                          "usesTheme": false,
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                    >
                      <td
                        className="c13"
                        colSpan={2}
                      >
                        <div>
                          empty
                        </div>
                      </td>
                    </StyledComponent>
                  </styled.td>
                </tr>
              </tbody>
            </table>
          </StyledComponent>
        </styled.table>
      </div>
    </StyledComponent>
  </styled.div>
</Table>
`;
