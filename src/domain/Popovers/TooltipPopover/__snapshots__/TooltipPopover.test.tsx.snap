// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TooltipPopover /> Render a popover using a custom trigger should match the snapshot 1`] = `
<Fragment>
  <styled.span>
    <span
      aria-expanded={false}
      aria-haspopup={true}
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      role="button"
    >
      Custom trigger component
    </span>
  </styled.span>
  <Popover
    animationType="tooltip"
    id=""
    isOpen={false}
    parentAnchorPosition="auto"
    parentRef={
      Object {
        "current": null,
      }
    }
    popoverAnchorPosition="auto"
  >
    <styled.div
      variant="neutral"
      width={300}
    >
      Triggered Customly
    </styled.div>
  </Popover>
</Fragment>
`;

exports[`<TooltipPopover /> Simple popover behaviour should match the snapshot 1`] = `
<Fragment>
  <styled.span>
    <span
      aria-expanded={false}
      aria-haspopup={true}
      className="popoverTrigger"
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      role="button"
    >
      <Memo(FontAwesomeIcon)
        color="#424F5C"
        icon="question-circle"
        type="regular"
      />
    </span>
  </styled.span>
  <Popover
    animationType="tooltip"
    id=""
    isOpen={false}
    parentAnchorPosition="auto"
    parentRef={
      Object {
        "current": null,
      }
    }
    popoverAnchorPosition="auto"
  >
    <styled.div
      variant="neutral"
      width={300}
    >
      Simple Popover
    </styled.div>
  </Popover>
</Fragment>
`;

exports[`<TooltipPopover /> dark style popover behaviour should match the snapshot 1`] = `
<Fragment>
  <styled.span>
    <span
      aria-expanded={false}
      aria-haspopup={true}
      className="popoverTrigger"
      onMouseEnter={[Function]}
      onMouseLeave={[Function]}
      role="button"
    >
      <Memo(FontAwesomeIcon)
        color="#424F5C"
        icon="question-circle"
        type="regular"
      />
    </span>
  </styled.span>
  <Popover
    animationType="tooltip"
    id=""
    isOpen={false}
    parentAnchorPosition="auto"
    parentRef={
      Object {
        "current": null,
      }
    }
    popoverAnchorPosition="auto"
  >
    <styled.div
      variant="dark"
      width={300}
    >
      dark Popover
    </styled.div>
  </Popover>
</Fragment>
`;
