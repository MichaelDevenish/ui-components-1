// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Statistic /> should render Statistic Record component 1`] = `
.c0 {
  margin-bottom: 4px;
  font-size: 14px;
  line-height: 20px;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
}

.c2 {
  color: #262D33;
  font-weight: 600;
  font-size: 24px;
  line-height: 32px;
  -webkit-letter-spacing: -.02em;
  -moz-letter-spacing: -.02em;
  -ms-letter-spacing: -.02em;
  letter-spacing: -.02em;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

<Component
  title="Total Cost"
  value="99.00"
>
  <div
    data-component-type="statistic"
  >
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-jTzLTM",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  margin-bottom: ",
                "4",
                "px;

 ",
                "
          font-size: ",
                "14",
                "px;
          line-height: ",
                "20",
                "px;
          letter-spacing: normal;
        ",
                "
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-jTzLTM",
            "target": "div",
            "toString": [Function],
            "usesTheme": false,
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="c0"
        >
          Total Cost
        </div>
      </StyledComponent>
    </styled.div>
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-jzJRlG",
              "isStatic": false,
              "lastClassName": "c1",
              "rules": Array [
                "
  display: flex;
  align-items: center;
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-jzJRlG",
            "target": "div",
            "toString": [Function],
            "usesTheme": false,
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="c1"
        >
          <div>
            <styled.span>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-fjdhpX",
                      "isStatic": false,
                      "lastClassName": "c2",
                      "rules": Array [
                        "
  color: ",
                        "#262D33",
                        ";
  font-weight: ",
                        "600",
                        ";

 ",
                        "
          font-size: ",
                        "24",
                        "px;
          line-height: ",
                        "32",
                        "px;
          letter-spacing: -.02em;
        ",
                        "
",
                      ],
                    },
                    "displayName": "styled.span",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-fjdhpX",
                    "target": "span",
                    "toString": [Function],
                    "usesTheme": false,
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <span
                  className="c2"
                >
                  99.00
                </span>
              </StyledComponent>
            </styled.span>
          </div>
        </div>
      </StyledComponent>
    </styled.div>
  </div>
</Component>
`;

exports[`<Statistic /> should render a Statistic component with a prefix 1`] = `
.c2 {
  color: #262D33;
  margin-right: 8px;
  font-weight: 600;
  font-size: 18px;
  line-height: 24px;
  -webkit-letter-spacing: -.02em;
  -moz-letter-spacing: -.02em;
  -ms-letter-spacing: -.02em;
  letter-spacing: -.02em;
}

.c0 {
  margin-bottom: 4px;
  font-size: 14px;
  line-height: 20px;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
}

.c3 {
  color: #262D33;
  font-weight: 600;
  font-size: 24px;
  line-height: 32px;
  -webkit-letter-spacing: -.02em;
  -moz-letter-spacing: -.02em;
  -ms-letter-spacing: -.02em;
  letter-spacing: -.02em;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

<Component
  prefix="AUD"
  title="Total Cost"
  value="99.00"
>
  <div
    data-component-type="statistic"
  >
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-jTzLTM",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  margin-bottom: ",
                "4",
                "px;

 ",
                "
          font-size: ",
                "14",
                "px;
          line-height: ",
                "20",
                "px;
          letter-spacing: normal;
        ",
                "
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-jTzLTM",
            "target": "div",
            "toString": [Function],
            "usesTheme": false,
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="c0"
        >
          Total Cost
        </div>
      </StyledComponent>
    </styled.div>
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-jzJRlG",
              "isStatic": false,
              "lastClassName": "c1",
              "rules": Array [
                "
  display: flex;
  align-items: center;
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-jzJRlG",
            "target": "div",
            "toString": [Function],
            "usesTheme": false,
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="c1"
        >
          <div>
            <styled.span>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-VigVT",
                      "isStatic": false,
                      "lastClassName": "c2",
                      "rules": Array [
                        "
  color: ",
                        "#262D33",
                        ";
  margin-right: ",
                        "8",
                        "px;
  font-weight: ",
                        "600",
                        ";

  ",
                        "
          font-size: ",
                        "18",
                        "px;
          line-height: ",
                        "24",
                        "px;
          letter-spacing: -.02em;
        ",
                        "
",
                      ],
                    },
                    "displayName": "styled.span",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-VigVT",
                    "target": "span",
                    "toString": [Function],
                    "usesTheme": false,
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <span
                  className="c2"
                >
                  AUD
                </span>
              </StyledComponent>
            </styled.span>
            <styled.span>
              <StyledComponent
                forwardedComponent={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": Array [],
                    "componentStyle": ComponentStyle {
                      "componentId": "sc-fjdhpX",
                      "isStatic": false,
                      "lastClassName": "c3",
                      "rules": Array [
                        "
  color: ",
                        "#262D33",
                        ";
  font-weight: ",
                        "600",
                        ";

 ",
                        "
          font-size: ",
                        "24",
                        "px;
          line-height: ",
                        "32",
                        "px;
          letter-spacing: -.02em;
        ",
                        "
",
                      ],
                    },
                    "displayName": "styled.span",
                    "foldedComponentIds": Array [],
                    "render": [Function],
                    "styledComponentId": "sc-fjdhpX",
                    "target": "span",
                    "toString": [Function],
                    "usesTheme": false,
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
              >
                <span
                  className="c3"
                >
                  99.00
                </span>
              </StyledComponent>
            </styled.span>
          </div>
        </div>
      </StyledComponent>
    </styled.div>
  </div>
</Component>
`;

exports[`<Statistic /> should render not provided when no value is provided 1`] = `
.c1 {
  color: #667380;
  font-size: 16px;
  line-height: 24px;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
}

.c0 {
  margin-bottom: 4px;
  font-size: 14px;
  line-height: 20px;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
}

<Component
  prefix="AUD"
  title="Total Cost"
  value={null}
>
  <div
    data-component-type="statistic"
  >
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-jTzLTM",
              "isStatic": false,
              "lastClassName": "c0",
              "rules": Array [
                "
  margin-bottom: ",
                "4",
                "px;

 ",
                "
          font-size: ",
                "14",
                "px;
          line-height: ",
                "20",
                "px;
          letter-spacing: normal;
        ",
                "
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-jTzLTM",
            "target": "div",
            "toString": [Function],
            "usesTheme": false,
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="c0"
        >
          Total Cost
        </div>
      </StyledComponent>
    </styled.div>
    <styled.span>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-gqjmRU",
              "isStatic": false,
              "lastClassName": "c1",
              "rules": Array [
                "
  color: ",
                "#667380",
                ";

 ",
                "
          font-size: ",
                "16",
                "px;
          line-height: ",
                "24",
                "px;
          letter-spacing: normal;
        ",
                "
",
              ],
            },
            "displayName": "styled.span",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-gqjmRU",
            "target": "span",
            "toString": [Function],
            "usesTheme": false,
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <span
          className="c1"
        >
          Not Provided
        </span>
      </StyledComponent>
    </styled.span>
  </div>
</Component>
`;
