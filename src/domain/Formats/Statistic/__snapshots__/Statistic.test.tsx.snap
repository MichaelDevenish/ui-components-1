// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Statistic /> should render Statistic Record component 1`] = `
<Component
  title="Total Cost"
  value="99.00"
>
  <div
    data-component-type="statistic"
  >
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": true,
              "lastClassName": "gdTfPL",
              "rules": Array [
                "
  margin-bottom: ",
                "4",
                "px;

 ",
                "
          font-size: ",
                "14",
                "px;
          line-height: ",
                "20",
                "px;
          letter-spacing: normal;
        ",
                "
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="gdTfPL"
        >
          Total Cost
        </div>
      </StyledComponent>
    </styled.div>
    <styled.span>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bxivhb",
              "isStatic": true,
              "lastClassName": "dWvAjs",
              "rules": Array [
                "
  color: ",
                "#262D33",
                ";
  font-weight: ",
                "600",
                ";

 ",
                "
          font-size: ",
                "24",
                "px;
          line-height: ",
                "32",
                "px;
          letter-spacing: -.02em;
        ",
                "
",
              ],
            },
            "displayName": "styled.span",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bxivhb",
            "target": "span",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <span
          className="dWvAjs"
        >
          99.00
        </span>
      </StyledComponent>
    </styled.span>
  </div>
</Component>
`;

exports[`<Statistic /> should render a Statistic component with a prefix 1`] = `
<Component
  prefix="AUD"
  title="Total Cost"
  value="99.00"
>
  <div
    data-component-type="statistic"
  >
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": true,
              "lastClassName": "gdTfPL",
              "rules": Array [
                "
  margin-bottom: ",
                "4",
                "px;

 ",
                "
          font-size: ",
                "14",
                "px;
          line-height: ",
                "20",
                "px;
          letter-spacing: normal;
        ",
                "
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="gdTfPL"
        >
          Total Cost
        </div>
      </StyledComponent>
    </styled.div>
    <styled.span>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": true,
              "lastClassName": "bHSMIU",
              "rules": Array [
                "
  color: ",
                "#262D33",
                ";
  margin-right: ",
                "8",
                "px;
  font-weight: ",
                "600",
                ";

  ",
                "
          font-size: ",
                "18",
                "px;
          line-height: ",
                "24",
                "px;
          letter-spacing: -.02em;
        ",
                "
",
              ],
            },
            "displayName": "styled.span",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": "span",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <span
          className="bHSMIU"
        >
          AUD
        </span>
      </StyledComponent>
    </styled.span>
    <styled.span>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bxivhb",
              "isStatic": true,
              "lastClassName": "dWvAjs",
              "rules": Array [
                "
  color: ",
                "#262D33",
                ";
  font-weight: ",
                "600",
                ";

 ",
                "
          font-size: ",
                "24",
                "px;
          line-height: ",
                "32",
                "px;
          letter-spacing: -.02em;
        ",
                "
",
              ],
            },
            "displayName": "styled.span",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bxivhb",
            "target": "span",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <span
          className="dWvAjs"
        >
          99.00
        </span>
      </StyledComponent>
    </styled.span>
  </div>
</Component>
`;

exports[`<Statistic /> should render not provided when no value is provided 1`] = `
<Component
  prefix="AUD"
  title="Total Cost"
  value={null}
>
  <div
    data-component-type="statistic"
  >
    <styled.div>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": true,
              "lastClassName": "gdTfPL",
              "rules": Array [
                "
  margin-bottom: ",
                "4",
                "px;

 ",
                "
          font-size: ",
                "14",
                "px;
          line-height: ",
                "20",
                "px;
          letter-spacing: normal;
        ",
                "
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <div
          className="gdTfPL"
        >
          Total Cost
        </div>
      </StyledComponent>
    </styled.div>
    <styled.span>
      <StyledComponent
        forwardedComponent={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bdVaJa",
              "isStatic": true,
              "lastClassName": "eoMxsT",
              "rules": Array [
                "
  color: ",
                "#667380",
                ";

 ",
                "
          font-size: ",
                "16",
                "px;
          line-height: ",
                "24",
                "px;
          letter-spacing: normal;
        ",
                "
",
              ],
            },
            "displayName": "styled.span",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bdVaJa",
            "target": "span",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        forwardedRef={null}
      >
        <span
          className="eoMxsT"
        >
          Not Provided
        </span>
      </StyledComponent>
    </styled.span>
  </div>
</Component>
`;
