// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ButtonGroup /> should render a button group with buttons and link buttons 1`] = `
.c0 > a,
.c0 > button {
  margin-right: 8px;
}

.c0 > a:last-child,
.c0 > button:last-child {
  margin-right: 0;
}

<ButtonGroup>
  <styled.span
    data-component-type="button_group"
  >
    <StyledComponent
      data-component-type="button_group"
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-EHOje",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "
  > a,
  > button {
    margin-right: 8px;

    &:last-child {
      margin-right: 0;
    }
  }
",
            ],
          },
          "displayName": "styled.span",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-EHOje",
          "target": "span",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <span
        className="c0"
        data-component-type="button_group"
      >
        <Button
          hasLegacyMargins={false}
          iconAlignment="left"
          key="button1"
          showSpinner={false}
          type="neutral"
        >
          <styled.button
            className="button neutral"
            data-component-type="button"
            type="button"
          >
            <StyledComponent
              className="button neutral"
              data-component-type="button"
              forwardedComponent={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-ifAKCX",
                    "isStatic": false,
                    "lastClassName": "fRjHBe",
                    "rules": Array [
                      "
   ",
                      [Function],
                      "
",
                    ],
                  },
                  "displayName": "styled.button",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-ifAKCX",
                  "target": "button",
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              type="button"
            >
              <button
                className="button neutral "
                data-component-type="button"
                type="button"
              >
                Button 1
              </button>
            </StyledComponent>
          </styled.button>
        </Button>
        ,
        <LinkButton
          disabled={false}
          hasLegacyMargins={false}
          iconAlignment="left"
          key="button2"
          showSpinner={false}
          type="neutral"
        >
          <Anchor
            href="#"
            onClick={[Function]}
          >
            <a
              href="#"
              onClick={[Function]}
            >
              <span
                className="button neutral"
                data-component-type="link_button"
              >
                Button 2
              </span>
            </a>
          </Anchor>
        </LinkButton>
      </span>
    </StyledComponent>
  </styled.span>
</ButtonGroup>
`;
