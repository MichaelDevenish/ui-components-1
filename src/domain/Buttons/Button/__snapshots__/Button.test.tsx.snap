// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Button /> should render a button with a simple text 1`] = `
<Button
  buttonComponentProps={
    Object {
      "onClick": [Function],
    }
  }
  hasLegacyMargins={false}
  iconAlignment="left"
  id="test-button"
  loading={false}
  type="neutral"
>
  <button
    className="button neutral"
    data-component-type="button"
  >
    testing testing 123
  </button>
</Button>
`;

exports[`<Button /> should render a button with a size large 1`] = `
<Button
  buttonComponentProps={
    Object {
      "onClick": [Function],
    }
  }
  hasLegacyMargins={false}
  iconAlignment="left"
  id="test-button-large"
  loading={false}
  size="large"
  type="neutral"
>
  <button
    className="button large neutral"
    data-component-type="button"
  >
    testing testing 123
  </button>
</Button>
`;

exports[`<Button /> should render a button with a type delete-subtle 1`] = `
<Button
  buttonComponentProps={
    Object {
      "onClick": [Function],
    }
  }
  hasLegacyMargins={false}
  iconAlignment="left"
  id="test-button-delete-subtle"
  loading={false}
  type="delete-subtle"
>
  <button
    className="button delete-subtle"
    data-component-type="button"
  >
    testing testing 123
  </button>
</Button>
`;

exports[`<Button /> should render a button with an icon 1`] = `
.c0 {
  width: 1.28571em;
}

.c0.icon {
  text-align: center;
  font-size: 1rem;
}

<Button
  hasLegacyMargins={false}
  icon={
    <FontAwesomeIcon
      type="star"
    />
  }
  iconAlignment="right"
  id="test-button-icon"
  loading={false}
  type="primary-hollow"
>
  <button
    className="button primary-hollow"
    data-component-type="button"
  >
    primary-hollow
    <span
      className="button-icon right"
      data-component-type="button_icon"
    >
      <FontAwesomeIcon
        type="star"
      >
        <Icon
          isSpinning={false}
          size="medium"
          type="fa-star"
        >
          <styled.i
            aria-hidden={true}
            className="icon fa fa-star"
            size="medium"
          >
            <i
              aria-hidden={true}
              className="icon fa fa-star c0"
              size="medium"
            />
          </styled.i>
        </Icon>
      </FontAwesomeIcon>
    </span>
  </button>
</Button>
`;

exports[`<Button /> should render a disabled button 1`] = `
<Button
  buttonComponentProps={
    Object {
      "disabled": true,
      "onClick": [Function],
    }
  }
  hasLegacyMargins={false}
  iconAlignment="left"
  id="test-button-disabled"
  loading={false}
  type="neutral"
>
  <button
    className="button neutral"
    data-component-type="button"
  >
    testing testing 123
  </button>
</Button>
`;

exports[`should render a button with a spinner 1`] = `
.c0.page {
  position: fixed;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
}

.c0.left {
  float: left;
}

.c0.center {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c0.right {
  float: right;
}

.c0.inline {
  display: inline-block;
  vertical-align: middle;
}

<Button
  hasLegacyMargins={false}
  iconAlignment="left"
  id="test-button-spinner"
  loading={true}
  type="neutral"
>
  <button
    className="button neutral loading"
    data-component-type="button"
  >
    <Spinner
      color="#424F5C"
      size={10}
      type="three-bounce"
    >
      <styled.div
        className="spinner"
      >
        <div
          className="spinner c0"
        >
          <ThreeBounce
            color="#424F5C"
            duration="1.5s"
            gutter={2}
            scaleEnd={1}
            scaleStart={0}
            size={10}
            timingFunction="ease-in-out"
          >
            <Base
              css="
        @-webkit-keyframes brsk-three-bounce {
          0%, 80%, 100% {
            -webkit-transform: scale(0);
          }
          40% {
            -webkit-transform: scale(1);
          }
        }

        @keyframes brsk-three-bounce {
          0%, 80%, 100% {
            transform: scale(0);
            -webkit-transform: scale(0);
          }
          40% {
            transform: scale(1);
            -webkit-transform: scale(1);
          }
        }
      "
            >
              <span>
                <style>
                   @-webkit-keyframes brsk-three-bounce { 0%, 80%, 100% { -webkit-transform: scale(0); } 40% { -webkit-transform: scale(1); } } @keyframes brsk-three-bounce { 0%, 80%, 100% { transform: scale(0); -webkit-transform: scale(0); } 40% { transform: scale(1); -webkit-transform: scale(1); } } 
                </style>
                <div
                  style={
                    Object {
                      "WebkitAnimationDelay": "-0.32s",
                      "WebkitAnimationDuration": "1.5s",
                      "WebkitAnimationIterationCount": "infinite",
                      "WebkitAnimationName": "brsk-three-bounce",
                      "WebkitAnimationTimingFunction": "ease-in-out",
                      "animationDelay": "-0.32s",
                      "animationDuration": "1.5s",
                      "animationIterationCount": "infinite",
                      "animationName": "brsk-three-bounce",
                      "animationTimingFunction": "ease-in-out",
                      "backgroundColor": "#424F5C",
                      "borderRadius": "100%",
                      "display": "inline-block",
                      "height": 10,
                      "marginRight": 2,
                      "width": 10,
                    }
                  }
                />
                <div
                  style={
                    Object {
                      "WebkitAnimationDelay": "-0.16s",
                      "WebkitAnimationDuration": "1.5s",
                      "WebkitAnimationIterationCount": "infinite",
                      "WebkitAnimationName": "brsk-three-bounce",
                      "WebkitAnimationTimingFunction": "ease-in-out",
                      "animationDelay": "-0.16s",
                      "animationDuration": "1.5s",
                      "animationIterationCount": "infinite",
                      "animationName": "brsk-three-bounce",
                      "animationTimingFunction": "ease-in-out",
                      "backgroundColor": "#424F5C",
                      "borderRadius": "100%",
                      "display": "inline-block",
                      "height": 10,
                      "marginRight": 2,
                      "width": 10,
                    }
                  }
                />
                <div
                  style={
                    Object {
                      "WebkitAnimationDuration": "1.5s",
                      "WebkitAnimationIterationCount": "infinite",
                      "WebkitAnimationName": "brsk-three-bounce",
                      "WebkitAnimationTimingFunction": "ease-in-out",
                      "animationDuration": "1.5s",
                      "animationIterationCount": "infinite",
                      "animationName": "brsk-three-bounce",
                      "animationTimingFunction": "ease-in-out",
                      "backgroundColor": "#424F5C",
                      "borderRadius": "100%",
                      "display": "inline-block",
                      "height": 10,
                      "width": 10,
                    }
                  }
                />
              </span>
            </Base>
          </ThreeBounce>
        </div>
      </styled.div>
    </Spinner>
  </button>
</Button>
`;
