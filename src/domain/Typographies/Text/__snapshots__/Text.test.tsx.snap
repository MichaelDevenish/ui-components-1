// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Text /> should render a non-inline text element 1`] = `
.c0 {
  font-size: 16px;
  line-height: 24px;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  color: #424F5C;
  font-weight: 400;
  display: block;
}

<Text
  isInline={false}
  tag="span"
  type="body"
>
  <styled.span
    data-component-type="text"
    isInline={false}
    textType="body"
  >
    <span
      className="c0"
      data-component-type="text"
    >
      Hello, world!
    </span>
  </styled.span>
</Text>
`;

exports[`<Text /> should render a text element as a h1 1`] = `
.c0 {
  font-size: 16px;
  line-height: 24px;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  color: #424F5C;
  font-weight: 400;
}

<Text
  isInline={true}
  tag="h1"
  type="body"
>
  <styled.h1
    data-component-type="text"
    isInline={true}
    textType="body"
  >
    <h1
      className="c0"
      data-component-type="text"
    >
      Hello, world!
    </h1>
  </styled.h1>
</Text>
`;

exports[`<Text /> should render a text with data attributes 1`] = `
.c0 {
  font-size: 16px;
  line-height: 24px;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  color: #424F5C;
  font-weight: 400;
}

<Text
  dataAttributes={
    Object {
      "otherKey": "myOtherKey",
      "role": "myRole",
    }
  }
  isInline={true}
  tag="span"
  type="body"
>
  <styled.span
    data-component-type="text"
    data-otherKey="myOtherKey"
    data-role="myRole"
    isInline={true}
    textType="body"
  >
    <span
      className="c0"
      data-component-type="text"
      data-otherKey="myOtherKey"
      data-role="myRole"
    >
      Hello! I am text with data attributes
    </span>
  </styled.span>
</Text>
`;

exports[`<Text /> should render a text with margin 1`] = `
.c0 {
  margin-top: 20px;
  margin-bottom: 20px;
  margin-left: 20px;
  margin-right: 20px;
  font-size: 16px;
  line-height: 24px;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  color: #424F5C;
  font-weight: 400;
}

<Text
  isInline={true}
  margins={
    Object {
      "bottom": 20,
      "left": 20,
      "right": 20,
      "top": 20,
    }
  }
  tag="span"
  type="body"
>
  <styled.span
    data-component-type="text"
    isInline={true}
    margins={
      Object {
        "bottom": 20,
        "left": 20,
        "right": 20,
        "top": 20,
      }
    }
    textType="body"
  >
    <span
      className="c0"
      data-component-type="text"
    >
      Hello! I have special margin
    </span>
  </styled.span>
</Text>
`;

exports[`<Text /> should render an element with colored text 1`] = `
.c0 {
  font-size: 16px;
  line-height: 24px;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  color: #F25749;
  font-weight: 400;
}

<Text
  color="#F25749"
  isInline={true}
  tag="span"
  type="body"
>
  <styled.span
    color="#F25749"
    data-component-type="text"
    isInline={true}
    textType="body"
  >
    <span
      className="c0"
      color="#F25749"
      data-component-type="text"
    >
      Hello, world!
    </span>
  </styled.span>
</Text>
`;

exports[`<Text /> should render an element with heading text 1`] = `
.c0 {
  font-size: 18px;
  line-height: 24px;
  -webkit-letter-spacing: -.02em;
  -moz-letter-spacing: -.02em;
  -ms-letter-spacing: -.02em;
  letter-spacing: -.02em;
  color: #424F5C;
  font-weight: 600;
}

<Text
  isInline={true}
  tag="span"
  type="heading"
>
  <styled.span
    data-component-type="text"
    isInline={true}
    textType="heading"
  >
    <span
      className="c0"
      data-component-type="text"
    >
      Hello, world!
    </span>
  </styled.span>
</Text>
`;

exports[`<Text /> should render an element with semi bold text 1`] = `
.c0 {
  font-weight: 600;
  font-size: 16px;
  line-height: 24px;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  color: #424F5C;
  font-weight: 400;
}

<Text
  isInline={true}
  tag="span"
  type="body"
  weight={600}
>
  <styled.span
    data-component-type="text"
    isInline={true}
    textType="body"
    weight={600}
  >
    <span
      className="c0"
      data-component-type="text"
    >
      Hello, world!
    </span>
  </styled.span>
</Text>
`;

exports[`<Text /> should render an element with small text 1`] = `
.c0 {
  font-size: 14px;
  line-height: 20px;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  color: #262D33;
  font-weight: 400;
}

<Text
  isInline={true}
  tag="span"
  type="small"
>
  <styled.span
    data-component-type="text"
    isInline={true}
    textType="small"
  >
    <span
      className="c0"
      data-component-type="text"
    >
      Hello, world!
    </span>
  </styled.span>
</Text>
`;

exports[`<Text /> should render an element with text 1`] = `
.c0 {
  font-size: 16px;
  line-height: 24px;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  color: #424F5C;
  font-weight: 400;
}

<Text
  isInline={true}
  tag="span"
  type="body"
>
  <styled.span
    data-component-type="text"
    isInline={true}
    textType="body"
  >
    <span
      className="c0"
      data-component-type="text"
    >
      Hello, world!
    </span>
  </styled.span>
</Text>
`;

exports[`<Text /> should render an element with the text converted to uppercase 1`] = `
.c0 {
  font-size: 16px;
  line-height: 24px;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  color: #424F5C;
  font-weight: 400;
  text-transform: uppercase;
}

<Text
  isInline={true}
  isUpper={true}
  tag="span"
  type="body"
>
  <styled.span
    data-component-type="text"
    isInline={true}
    isUpper={true}
    textType="body"
  >
    <span
      className="c0"
      data-component-type="text"
    >
      Hello, world!
    </span>
  </styled.span>
</Text>
`;
