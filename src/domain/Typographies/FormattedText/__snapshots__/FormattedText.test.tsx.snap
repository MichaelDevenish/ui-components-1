// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<FormattedText /> should include a custom text renderer 1`] = `
<styled.div>
  <ReactMarkdown
    astPlugins={Array []}
    className="react-markdown-block"
    escapeHtml={true}
    plugins={Array []}
    rawSourcePos={false}
    renderers={
      Object {
        "link": [Function],
        "text": [Function],
      }
    }
    skipHtml={false}
    source=":crocodile:"
    sourcePos={false}
    transformLinkUri={[Function]}
  />
</styled.div>
`;

exports[`<FormattedText /> should not include a custom text renderer 1`] = `
<styled.div>
  <ReactMarkdown
    astPlugins={Array []}
    className="react-markdown-block"
    escapeHtml={true}
    plugins={Array []}
    rawSourcePos={false}
    renderers={
      Object {
        "link": [Function],
      }
    }
    skipHtml={false}
    source=":crocodile:"
    sourcePos={false}
    transformLinkUri={[Function]}
  />
</styled.div>
`;

exports[`<FormattedText /> should render a big block of markdown 1`] = `
.c0 {
  white-space: pre-wrap;
}

.c0 .react-markdown-block > :last-child {
  margin-bottom: 0;
}

.c1 {
  -webkit-transition: color .25s ease-out;
  transition: color .25s ease-out;
  font-size: 16px;
  line-height: 24px;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  display: inline;
}

.c1,
.c1:link,
.c1:visited {
  color: #432DF3;
}

.c1:hover {
  color: #2512B3;
}

.c1:active {
  color: #0F0080;
}

<FormattedText
  renderEmojis={false}
  text="
FormattedText supports all syntax supported by markdown.

Typography
----------
Multiple line breaks will be collapsed to a single paragraph:




See?

# H1
## H2
### H3
#### H4
##### H5
###### H6

---

Links
-----
http://www.intellihr.com.au
[Inline link](http://www.google.com)

---

Images
------
![Alt text](https://i.imgur.com/eyUDgtd.jpg \\"Title Text\\")

---

Code
----

Inline code with \`blah\`

---

Tables
------
Colons can be used to align columns.

| Tables        | Are           | Cool  |
| ------------- |:-------------:| -----:|
| col 3 is      | right-aligned | $1600 |
| col 2 is      | centered      |   $12 |
| zebra stripes | are neat      |    $1 |

---

Quotes
------

> What the navy seal did you just navy seal about me, you little navy seal? I'll have you know I navy sealed top of my class in the navy seals, and I've been involved in numerous secret raids on the navy seals, and I have over 300 confirmed...

---

Lists
-----

Unordered Lists:

 * Wow
 * Eat carrots
 * Eat things which aren't carrots
 
Ordered/multi-level lists:

 1. Nothing wrong with me
 2. Nothing wrong with me
 3. Nothing
    * Wrong
    * With
      - me?
"
>
  <styled.div>
    <div
      className="c0"
    >
      <ReactMarkdown
        astPlugins={Array []}
        className="react-markdown-block"
        escapeHtml={true}
        plugins={Array []}
        rawSourcePos={false}
        renderers={
          Object {
            "link": [Function],
          }
        }
        skipHtml={false}
        source="
FormattedText supports all syntax supported by markdown.

Typography
----------
Multiple line breaks will be collapsed to a single paragraph:




See?

# H1
## H2
### H3
#### H4
##### H5
###### H6

---

Links
-----
http://www.intellihr.com.au
[Inline link](http://www.google.com)

---

Images
------
![Alt text](https://i.imgur.com/eyUDgtd.jpg \\"Title Text\\")

---

Code
----

Inline code with \`blah\`

---

Tables
------
Colons can be used to align columns.

| Tables        | Are           | Cool  |
| ------------- |:-------------:| -----:|
| col 3 is      | right-aligned | $1600 |
| col 2 is      | centered      |   $12 |
| zebra stripes | are neat      |    $1 |

---

Quotes
------

> What the navy seal did you just navy seal about me, you little navy seal? I'll have you know I navy sealed top of my class in the navy seals, and I've been involved in numerous secret raids on the navy seals, and I have over 300 confirmed...

---

Lists
-----

Unordered Lists:

 * Wow
 * Eat carrots
 * Eat things which aren't carrots
 
Ordered/multi-level lists:

 1. Nothing wrong with me
 2. Nothing wrong with me
 3. Nothing
    * Wrong
    * With
      - me?
"
        sourcePos={false}
        transformLinkUri={[Function]}
      >
        <div
          className="react-markdown-block"
          key="root-1-1"
        >
          <p
            key="paragraph-2-1"
          >
            FormattedText supports all syntax supported by markdown.
          </p>
          <Heading
            key="heading-4-1"
            level={2}
          >
            <h2>
              Typography
            </h2>
          </Heading>
          <p
            key="paragraph-6-1"
          >
            Multiple line breaks will be collapsed to a single paragraph:
          </p>
          <p
            key="paragraph-11-1"
          >
            See?
          </p>
          <Heading
            key="heading-13-1"
            level={1}
          >
            <h1>
              H1
            </h1>
          </Heading>
          <Heading
            key="heading-14-1"
            level={2}
          >
            <h2>
              H2
            </h2>
          </Heading>
          <Heading
            key="heading-15-1"
            level={3}
          >
            <h3>
              H3
            </h3>
          </Heading>
          <Heading
            key="heading-16-1"
            level={4}
          >
            <h4>
              H4
            </h4>
          </Heading>
          <Heading
            key="heading-17-1"
            level={5}
          >
            <h5>
              H5
            </h5>
          </Heading>
          <Heading
            key="heading-18-1"
            level={6}
          >
            <h6>
              H6
            </h6>
          </Heading>
          <hr
            key="thematicBreak-20-1"
          />
          <Heading
            key="heading-22-1"
            level={2}
          >
            <h2>
              Links
            </h2>
          </Heading>
          <p
            key="paragraph-24-1"
          >
            <Component
              href="http://www.intellihr.com.au"
              key="link-24-1"
            >
              <TextLink
                anchorComponent="a"
                href="http://www.intellihr.com.au"
                isInline={true}
                target="_blank"
              >
                <Styled(Component)
                  anchorComponent="a"
                  href="http://www.intellihr.com.au"
                  isInline={true}
                  target="_blank"
                >
                  <Component
                    anchorComponent="a"
                    className="c1"
                    href="http://www.intellihr.com.au"
                    isInline={true}
                    target="_blank"
                  >
                    <Anchor
                      anchorComponent="a"
                      className="c1"
                      href="http://www.intellihr.com.au"
                      target="_blank"
                    >
                      <a
                        className="c1"
                        href="http://www.intellihr.com.au"
                        target="_blank"
                      >
                        http://www.intellihr.com.au
                      </a>
                    </Anchor>
                  </Component>
                </Styled(Component)>
              </TextLink>
            </Component>
            

            <Component
              href="http://www.google.com"
              key="link-25-1"
            >
              <TextLink
                anchorComponent="a"
                href="http://www.google.com"
                isInline={true}
                target="_blank"
              >
                <Styled(Component)
                  anchorComponent="a"
                  href="http://www.google.com"
                  isInline={true}
                  target="_blank"
                >
                  <Component
                    anchorComponent="a"
                    className="c1"
                    href="http://www.google.com"
                    isInline={true}
                    target="_blank"
                  >
                    <Anchor
                      anchorComponent="a"
                      className="c1"
                      href="http://www.google.com"
                      target="_blank"
                    >
                      <a
                        className="c1"
                        href="http://www.google.com"
                        target="_blank"
                      >
                        Inline link
                      </a>
                    </Anchor>
                  </Component>
                </Styled(Component)>
              </TextLink>
            </Component>
          </p>
          <hr
            key="thematicBreak-27-1"
          />
          <Heading
            key="heading-29-1"
            level={2}
          >
            <h2>
              Images
            </h2>
          </Heading>
          <p
            key="paragraph-31-1"
          >
            <img
              alt="Alt text"
              key="image-31-1"
              src="https://i.imgur.com/eyUDgtd.jpg"
              title="Title Text"
            />
          </p>
          <hr
            key="thematicBreak-33-1"
          />
          <Heading
            key="heading-35-1"
            level={2}
          >
            <h2>
              Code
            </h2>
          </Heading>
          <p
            key="paragraph-38-1"
          >
            Inline code with 
            <InlineCode
              inline={true}
              key="inlineCode-38-18"
              value="blah"
            >
              <code>
                blah
              </code>
            </InlineCode>
          </p>
          <hr
            key="thematicBreak-40-1"
          />
          <Heading
            key="heading-42-1"
            level={2}
          >
            <h2>
              Tables
            </h2>
          </Heading>
          <p
            key="paragraph-44-1"
          >
            Colons can be used to align columns.
          </p>
          <bound SimpleRenderer
            columnAlignment={
              Array [
                null,
                "center",
                "right",
              ]
            }
            key="table-46-1"
          >
            <table>
              <bound SimpleRenderer
                columnAlignment={
                  Array [
                    null,
                    "center",
                    "right",
                  ]
                }
                key="tableHead-46-1"
              >
                <thead>
                  <bound SimpleRenderer
                    columnAlignment={
                      Array [
                        null,
                        "center",
                        "right",
                      ]
                    }
                    isHeader={true}
                    key="tableRow-46-1"
                  >
                    <tr>
                      <TableCell
                        align={null}
                        isHeader={true}
                        key="tableCell-46-3"
                      >
                        <th>
                          Tables
                        </th>
                      </TableCell>
                      <TableCell
                        align="center"
                        isHeader={true}
                        key="tableCell-46-19"
                      >
                        <th
                          style={
                            Object {
                              "textAlign": "center",
                            }
                          }
                        >
                          Are
                        </th>
                      </TableCell>
                      <TableCell
                        align="right"
                        isHeader={true}
                        key="tableCell-46-35"
                      >
                        <th
                          style={
                            Object {
                              "textAlign": "right",
                            }
                          }
                        >
                          Cool
                        </th>
                      </TableCell>
                    </tr>
                  </bound SimpleRenderer>
                </thead>
              </bound SimpleRenderer>
              <bound SimpleRenderer
                columnAlignment={
                  Array [
                    null,
                    "center",
                    "right",
                  ]
                }
                key="tableBody-48-1"
              >
                <tbody>
                  <bound SimpleRenderer
                    columnAlignment={
                      Array [
                        null,
                        "center",
                        "right",
                      ]
                    }
                    isHeader={false}
                    key="tableRow-48-1"
                  >
                    <tr>
                      <TableCell
                        align={null}
                        isHeader={false}
                        key="tableCell-48-3"
                      >
                        <td>
                          col 3 is
                        </td>
                      </TableCell>
                      <TableCell
                        align="center"
                        isHeader={false}
                        key="tableCell-48-19"
                      >
                        <td
                          style={
                            Object {
                              "textAlign": "center",
                            }
                          }
                        >
                          right-aligned
                        </td>
                      </TableCell>
                      <TableCell
                        align="right"
                        isHeader={false}
                        key="tableCell-48-35"
                      >
                        <td
                          style={
                            Object {
                              "textAlign": "right",
                            }
                          }
                        >
                          $1600
                        </td>
                      </TableCell>
                    </tr>
                  </bound SimpleRenderer>
                  <bound SimpleRenderer
                    columnAlignment={
                      Array [
                        null,
                        "center",
                        "right",
                      ]
                    }
                    isHeader={false}
                    key="tableRow-49-1"
                  >
                    <tr>
                      <TableCell
                        align={null}
                        isHeader={false}
                        key="tableCell-49-3"
                      >
                        <td>
                          col 2 is
                        </td>
                      </TableCell>
                      <TableCell
                        align="center"
                        isHeader={false}
                        key="tableCell-49-19"
                      >
                        <td
                          style={
                            Object {
                              "textAlign": "center",
                            }
                          }
                        >
                          centered
                        </td>
                      </TableCell>
                      <TableCell
                        align="right"
                        isHeader={false}
                        key="tableCell-49-37"
                      >
                        <td
                          style={
                            Object {
                              "textAlign": "right",
                            }
                          }
                        >
                          $12
                        </td>
                      </TableCell>
                    </tr>
                  </bound SimpleRenderer>
                  <bound SimpleRenderer
                    columnAlignment={
                      Array [
                        null,
                        "center",
                        "right",
                      ]
                    }
                    isHeader={false}
                    key="tableRow-50-1"
                  >
                    <tr>
                      <TableCell
                        align={null}
                        isHeader={false}
                        key="tableCell-50-3"
                      >
                        <td>
                          zebra stripes
                        </td>
                      </TableCell>
                      <TableCell
                        align="center"
                        isHeader={false}
                        key="tableCell-50-19"
                      >
                        <td
                          style={
                            Object {
                              "textAlign": "center",
                            }
                          }
                        >
                          are neat
                        </td>
                      </TableCell>
                      <TableCell
                        align="right"
                        isHeader={false}
                        key="tableCell-50-38"
                      >
                        <td
                          style={
                            Object {
                              "textAlign": "right",
                            }
                          }
                        >
                          $1
                        </td>
                      </TableCell>
                    </tr>
                  </bound SimpleRenderer>
                </tbody>
              </bound SimpleRenderer>
            </table>
          </bound SimpleRenderer>
          <hr
            key="thematicBreak-52-1"
          />
          <Heading
            key="heading-54-1"
            level={2}
          >
            <h2>
              Quotes
            </h2>
          </Heading>
          <blockquote
            key="blockquote-57-1"
          >
            <p
              key="paragraph-57-3"
            >
              What the navy seal did you just navy seal about me, you little navy seal? I'll have you know I navy sealed top of my class in the navy seals, and I've been involved in numerous secret raids on the navy seals, and I have over 300 confirmed...
            </p>
          </blockquote>
          <hr
            key="thematicBreak-59-1"
          />
          <Heading
            key="heading-61-1"
            level={2}
          >
            <h2>
              Lists
            </h2>
          </Heading>
          <p
            key="paragraph-64-1"
          >
            Unordered Lists:
          </p>
          <List
            key="list-66-1"
            ordered={false}
            start={null}
            tight={false}
          >
            <ul>
              <ListItem
                checked={null}
                key="listItem-66-1"
                tight={true}
              >
                <li>
                  Wow
                </li>
              </ListItem>
              <ListItem
                checked={null}
                key="listItem-67-1"
                tight={true}
              >
                <li>
                  Eat carrots
                </li>
              </ListItem>
              <ListItem
                checked={null}
                key="listItem-68-1"
                tight={false}
              >
                <li>
                  <p
                    key="paragraph-68-4"
                  >
                    Eat things which aren't carrots
                  </p>
                </li>
              </ListItem>
            </ul>
          </List>
          <p
            key="paragraph-70-1"
          >
            Ordered/multi-level lists:
          </p>
          <List
            key="list-72-1"
            ordered={true}
            start={1}
            tight={true}
          >
            <ol>
              <ListItem
                checked={null}
                key="listItem-72-1"
                tight={true}
              >
                <li>
                  Nothing wrong with me
                </li>
              </ListItem>
              <ListItem
                checked={null}
                key="listItem-73-1"
                tight={true}
              >
                <li>
                  Nothing wrong with me
                </li>
              </ListItem>
              <ListItem
                checked={null}
                key="listItem-74-1"
                tight={true}
              >
                <li>
                  Nothing
                  <List
                    key="list-75-5"
                    ordered={false}
                    start={null}
                    tight={true}
                  >
                    <ul>
                      <ListItem
                        checked={null}
                        key="listItem-75-5"
                        tight={true}
                      >
                        <li>
                          Wrong
                        </li>
                      </ListItem>
                      <ListItem
                        checked={null}
                        key="listItem-76-5"
                        tight={true}
                      >
                        <li>
                          With
                          <List
                            key="list-77-7"
                            ordered={false}
                            start={null}
                            tight={true}
                          >
                            <ul>
                              <ListItem
                                checked={null}
                                key="listItem-77-7"
                                tight={true}
                              >
                                <li>
                                  me?
                                </li>
                              </ListItem>
                            </ul>
                          </List>
                        </li>
                      </ListItem>
                    </ul>
                  </List>
                </li>
              </ListItem>
            </ol>
          </List>
        </div>
      </ReactMarkdown>
    </div>
  </styled.div>
</FormattedText>
`;

exports[`<FormattedText /> should render any urls as links 1`] = `
.c0 {
  white-space: pre-wrap;
}

.c0 .react-markdown-block > :last-child {
  margin-bottom: 0;
}

.c1 {
  -webkit-transition: color .25s ease-out;
  transition: color .25s ease-out;
  font-size: 16px;
  line-height: 24px;
  -webkit-letter-spacing: normal;
  -moz-letter-spacing: normal;
  -ms-letter-spacing: normal;
  letter-spacing: normal;
  display: inline;
}

.c1,
.c1:link,
.c1:visited {
  color: #432DF3;
}

.c1:hover {
  color: #2512B3;
}

.c1:active {
  color: #0F0080;
}

<FormattedText
  renderEmojis={false}
  text="http://www.heyguy.com

        also this one http://www.ozbargain.com.au"
>
  <styled.div>
    <div
      className="c0"
    >
      <ReactMarkdown
        astPlugins={Array []}
        className="react-markdown-block"
        escapeHtml={true}
        plugins={Array []}
        rawSourcePos={false}
        renderers={
          Object {
            "link": [Function],
          }
        }
        skipHtml={false}
        source="http://www.heyguy.com

        also this one http://www.ozbargain.com.au"
        sourcePos={false}
        transformLinkUri={[Function]}
      >
        <div
          className="react-markdown-block"
          key="root-1-1"
        >
          <p
            key="paragraph-1-1"
          >
            <Component
              href="http://www.heyguy.com"
              key="link-1-1"
            >
              <TextLink
                anchorComponent="a"
                href="http://www.heyguy.com"
                isInline={true}
                target="_blank"
              >
                <Styled(Component)
                  anchorComponent="a"
                  href="http://www.heyguy.com"
                  isInline={true}
                  target="_blank"
                >
                  <Component
                    anchorComponent="a"
                    className="c1"
                    href="http://www.heyguy.com"
                    isInline={true}
                    target="_blank"
                  >
                    <Anchor
                      anchorComponent="a"
                      className="c1"
                      href="http://www.heyguy.com"
                      target="_blank"
                    >
                      <a
                        className="c1"
                        href="http://www.heyguy.com"
                        target="_blank"
                      >
                        http://www.heyguy.com
                      </a>
                    </Anchor>
                  </Component>
                </Styled(Component)>
              </TextLink>
            </Component>
          </p>
          <CodeBlock
            key="code-3-1"
            language={null}
            value="    also this one http://www.ozbargain.com.au"
          >
            <pre>
              <code>
                    also this one http://www.ozbargain.com.au
              </code>
            </pre>
          </CodeBlock>
        </div>
      </ReactMarkdown>
    </div>
  </styled.div>
</FormattedText>
`;

exports[`<FormattedText /> should render the formatted text 1`] = `
.c0 {
  white-space: pre-wrap;
}

.c0 .react-markdown-block > :last-child {
  margin-bottom: 0;
}

<FormattedText
  renderEmojis={false}
  text="Hello. I am a piece of paragraph text.

        This should be on a new line :)"
>
  <styled.div>
    <div
      className="c0"
    >
      <ReactMarkdown
        astPlugins={Array []}
        className="react-markdown-block"
        escapeHtml={true}
        plugins={Array []}
        rawSourcePos={false}
        renderers={
          Object {
            "link": [Function],
          }
        }
        skipHtml={false}
        source="Hello. I am a piece of paragraph text.

        This should be on a new line :)"
        sourcePos={false}
        transformLinkUri={[Function]}
      >
        <div
          className="react-markdown-block"
          key="root-1-1"
        >
          <p
            key="paragraph-1-1"
          >
            Hello. I am a piece of paragraph text.
          </p>
          <CodeBlock
            key="code-3-1"
            language={null}
            value="    This should be on a new line :)"
          >
            <pre>
              <code>
                    This should be on a new line :)
              </code>
            </pre>
          </CodeBlock>
        </div>
      </ReactMarkdown>
    </div>
  </styled.div>
</FormattedText>
`;
