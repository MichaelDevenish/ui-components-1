// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Header /> should render modal header 1`] = `
.c0 {
  min-height: 80px;
  background-color: #F5F7FA;
  padding: 24px;
}

.c1 {
  font-size: 24px;
  line-height: 32px;
  -webkit-letter-spacing: -.02em;
  -moz-letter-spacing: -.02em;
  -ms-letter-spacing: -.02em;
  letter-spacing: -.02em;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  font-weight: 600;
}

@media only screen and (max-width:640px) {
  .c0 {
    padding: 12px;
    min-height: 48px;
    height: 48px;
    position: fixed;
    width: 100%;
  }
}

@media only screen and (min-width:641px) {
  .c1 {
    margin-right: 32px;
  }
}

@media only screen and (max-width:640px) {
  .c1 {
    font-size: 18px;
    line-height: 24px;
    -webkit-letter-spacing: -.02em;
    -moz-letter-spacing: -.02em;
    -ms-letter-spacing: -.02em;
    letter-spacing: -.02em;
    margin-left: 38px;
  }
}

<Header>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "c0",
            "rules": Array [
              "
  min-height: 80px;
  background-color: ",
              "#F5F7FA",
              ";
  padding: 24px;

  @media only screen and (max-width: ",
              "640",
              "px) {
    padding: 12px;
    min-height: 48px;
    height: 48px;
    position: fixed;
    width: 100%;
  }
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "usesTheme": false,
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="c0"
      >
        <styled.div>
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    "
  ",
                    "
          font-size: ",
                    "24",
                    "px;
          line-height: ",
                    "32",
                    "px;
          letter-spacing: -.02em;
        ",
                    "
  ",
                    "
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  ",
                    "
  font-weight: ",
                    "600",
                    ";

  @media only screen and (min-width: ",
                    "641",
                    "px) {
      margin-right: 32px;
  }

  @media only screen and (max-width: ",
                    "640",
                    "px) {
      ",
                    "
          font-size: ",
                    "18",
                    "px;
          line-height: ",
                    "24",
                    "px;
          letter-spacing: -.02em;
        ",
                    "
      margin-left: 38px;
  }
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": "div",
                "toString": [Function],
                "usesTheme": false,
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="c1"
            >
              Header Text
            </div>
          </StyledComponent>
        </styled.div>
      </div>
    </StyledComponent>
  </styled.div>
</Header>
`;
