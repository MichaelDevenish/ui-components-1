// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<DataTable /> Renders a basic DataTable 1`] = `
<DataTable
  NoDataComponent={[Function]}
  PaginationComponent={[Function]}
  columns={
    Array [
      Object {
        "Header": "Name",
        "accessor": "name",
      },
      Object {
        "Header": "Age",
        "accessor": "age",
      },
    ]
  }
  data={
    Array [
      Object {
        "age": 26,
        "name": "Tanner Linsley",
      },
      Object {
        "age": 23,
        "name": "Jason Maurer",
      },
    ]
  }
  defaultPageSize={25}
  defaultSortDesc={false}
  defaultSorted={Array []}
  filterable={false}
  noDataText="No data found!"
  pageSizeOptions={
    Array [
      10,
      25,
      50,
      100,
    ]
  }
  showPageSizeOptions={false}
  showPagination={false}
  showPaginationBottom={true}
  showPaginationTop={true}
  sortable={false}
>
  <ReactTable
    AggregatedComponent={[Function]}
    ExpanderComponent={[Function]}
    FilterComponent={[Function]}
    LoadingComponent={[Function]}
    NoDataComponent={[Function]}
    PadRowComponent={[Function]}
    PaginationComponent={[Function]}
    PivotValueComponent={[Function]}
    ResizerComponent={[Function]}
    TableComponent={[Function]}
    TbodyComponent={[Function]}
    TdComponent={[Function]}
    TfootComponent={[Function]}
    ThComponent={[Function]}
    TheadComponent={[Function]}
    TrComponent={[Function]}
    TrGroupComponent={[Function]}
    aggregatedKey="_aggregated"
    className="reactTable"
    collapseOnDataChange={true}
    collapseOnPageChange={true}
    collapseOnSortingChange={true}
    column={
      Object {
        "Aggregated": undefined,
        "Cell": undefined,
        "Expander": undefined,
        "Filter": undefined,
        "Footer": undefined,
        "Header": undefined,
        "Pivot": undefined,
        "PivotValue": undefined,
        "aggregate": undefined,
        "className": "",
        "filterAll": false,
        "filterMethod": undefined,
        "filterable": undefined,
        "footerClassName": "",
        "footerStyle": Object {},
        "getFooterProps": [Function],
        "getHeaderProps": [Function],
        "getProps": [Function],
        "headerClassName": "",
        "headerStyle": Object {},
        "minWidth": 100,
        "resizable": undefined,
        "show": true,
        "sortMethod": undefined,
        "sortable": undefined,
        "style": Object {},
      }
    }
    columns={
      Array [
        Object {
          "Header": "Name",
          "accessor": "name",
        },
        Object {
          "Header": "Age",
          "accessor": "age",
        },
      ]
    }
    data={
      Array [
        Object {
          "age": 26,
          "name": "Tanner Linsley",
        },
        Object {
          "age": 23,
          "name": "Jason Maurer",
        },
      ]
    }
    defaultExpanded={Object {}}
    defaultFilterMethod={[Function]}
    defaultFiltered={Array []}
    defaultPageSize={25}
    defaultResized={Array []}
    defaultSortDesc={false}
    defaultSortMethod={[Function]}
    defaultSorted={Array []}
    expanderDefaults={
      Object {
        "filterable": false,
        "resizable": false,
        "sortable": false,
        "width": 35,
      }
    }
    filterable={false}
    freezeWhenExpanded={false}
    getLoadingProps={[Function]}
    getNoDataProps={[Function]}
    getPaginationProps={[Function]}
    getProps={[Function]}
    getResizerProps={[Function]}
    getTableProps={[Function]}
    getTbodyProps={[Function]}
    getTdProps={[Function]}
    getTfootProps={[Function]}
    getTfootTdProps={[Function]}
    getTfootTrProps={[Function]}
    getTheadFilterProps={[Function]}
    getTheadFilterThProps={[Function]}
    getTheadFilterTrProps={[Function]}
    getTheadGroupProps={[Function]}
    getTheadGroupThProps={[Function]}
    getTheadGroupTrProps={[Function]}
    getTheadProps={[Function]}
    getTheadThProps={[Function]}
    getTheadTrProps={[Function]}
    getTrGroupProps={[Function]}
    getTrProps={[Function]}
    groupedByPivotKey="_groupedByPivot"
    indexKey="_index"
    loading={false}
    loadingText="Loading..."
    minRows={0}
    multiSort={true}
    nestingLevelKey="_nestingLevel"
    nextText="Next"
    noDataText="No data found!"
    ofText="of"
    onFetchData={[Function]}
    originalKey="_original"
    pageSizeOptions={
      Array [
        10,
        25,
        50,
        100,
      ]
    }
    pageText="Page"
    pivotDefaults={Object {}}
    pivotIDKey="_pivotID"
    pivotValKey="_pivotVal"
    previousText="Previous"
    resizable={false}
    resolveData={[Function]}
    rowsText="rows"
    showPageJump={true}
    showPageSizeOptions={false}
    showPagination={false}
    showPaginationBottom={true}
    showPaginationTop={true}
    sortable={false}
    style={Object {}}
    subRowsKey="_subRows"
  >
    <div
      className="ReactTable reactTable"
      style={Object {}}
    >
      <TableComponent
        className=""
      >
        <div
          className="rt-table"
          role="grid"
        >
          <Thead
            className="-header"
            style={
              Object {
                "minWidth": "200px",
              }
            }
          >
            <div
              className="rt-thead -header"
              style={
                Object {
                  "minWidth": "200px",
                }
              }
            >
              <TrComponent>
                <div
                  className="rt-tr"
                  role="row"
                >
                  <ThComponent
                    className=""
                    key="0-name"
                    style={
                      Object {
                        "flex": "100 0 auto",
                        "maxWidth": null,
                        "width": "100px",
                      }
                    }
                    toggleSort={[Function]}
                  >
                    <div
                      className="rt-th"
                      onClick={[Function]}
                      role="columnheader"
                      style={
                        Object {
                          "flex": "100 0 auto",
                          "maxWidth": null,
                          "width": "100px",
                        }
                      }
                      tabIndex="-1"
                    >
                      <div
                        className=""
                      >
                        Name
                      </div>
                    </div>
                  </ThComponent>
                  <ThComponent
                    className=""
                    key="1-age"
                    style={
                      Object {
                        "flex": "100 0 auto",
                        "maxWidth": null,
                        "width": "100px",
                      }
                    }
                    toggleSort={[Function]}
                  >
                    <div
                      className="rt-th"
                      onClick={[Function]}
                      role="columnheader"
                      style={
                        Object {
                          "flex": "100 0 auto",
                          "maxWidth": null,
                          "width": "100px",
                        }
                      }
                      tabIndex="-1"
                    >
                      <div
                        className=""
                      >
                        Age
                      </div>
                    </div>
                  </ThComponent>
                </div>
              </TrComponent>
            </div>
          </Thead>
          <Tbody
            className=""
            style={
              Object {
                "minWidth": "200px",
              }
            }
          >
            <div
              className="rt-tbody"
              style={
                Object {
                  "minWidth": "200px",
                }
              }
            >
              <TrGroupComponent
                key="0"
              >
                <div
                  className="rt-tr-group"
                  role="rowgroup"
                >
                  <TrComponent
                    className="-odd"
                  >
                    <div
                      className="rt-tr -odd"
                      role="row"
                    >
                      <TdComponent
                        className=""
                        key="0-name"
                        onClick={[Function]}
                        style={
                          Object {
                            "flex": "100 0 auto",
                            "maxWidth": null,
                            "width": "100px",
                          }
                        }
                      >
                        <div
                          className="rt-td"
                          onClick={[Function]}
                          role="gridcell"
                          style={
                            Object {
                              "flex": "100 0 auto",
                              "maxWidth": null,
                              "width": "100px",
                            }
                          }
                        >
                          Tanner Linsley
                        </div>
                      </TdComponent>
                      <TdComponent
                        className=""
                        key="1-age"
                        onClick={[Function]}
                        style={
                          Object {
                            "flex": "100 0 auto",
                            "maxWidth": null,
                            "width": "100px",
                          }
                        }
                      >
                        <div
                          className="rt-td"
                          onClick={[Function]}
                          role="gridcell"
                          style={
                            Object {
                              "flex": "100 0 auto",
                              "maxWidth": null,
                              "width": "100px",
                            }
                          }
                        >
                          26
                        </div>
                      </TdComponent>
                    </div>
                  </TrComponent>
                </div>
              </TrGroupComponent>
              <TrGroupComponent
                key="1"
              >
                <div
                  className="rt-tr-group"
                  role="rowgroup"
                >
                  <TrComponent
                    className="-even"
                  >
                    <div
                      className="rt-tr -even"
                      role="row"
                    >
                      <TdComponent
                        className=""
                        key="0-name"
                        onClick={[Function]}
                        style={
                          Object {
                            "flex": "100 0 auto",
                            "maxWidth": null,
                            "width": "100px",
                          }
                        }
                      >
                        <div
                          className="rt-td"
                          onClick={[Function]}
                          role="gridcell"
                          style={
                            Object {
                              "flex": "100 0 auto",
                              "maxWidth": null,
                              "width": "100px",
                            }
                          }
                        >
                          Jason Maurer
                        </div>
                      </TdComponent>
                      <TdComponent
                        className=""
                        key="1-age"
                        onClick={[Function]}
                        style={
                          Object {
                            "flex": "100 0 auto",
                            "maxWidth": null,
                            "width": "100px",
                          }
                        }
                      >
                        <div
                          className="rt-td"
                          onClick={[Function]}
                          role="gridcell"
                          style={
                            Object {
                              "flex": "100 0 auto",
                              "maxWidth": null,
                              "width": "100px",
                            }
                          }
                        >
                          23
                        </div>
                      </TdComponent>
                    </div>
                  </TrComponent>
                </div>
              </TrGroupComponent>
            </div>
          </Tbody>
        </div>
      </TableComponent>
      <LoadingComponent
        loading={false}
        loadingText="Loading..."
      >
        <div
          className="-loading"
        >
          <div
            className="-loading-inner"
          >
            Loading...
          </div>
        </div>
      </LoadingComponent>
    </div>
  </ReactTable>
</DataTable>
`;

exports[`<DataTable /> Renders a custom component in a DataTable 1`] = `
<DataTable
  NoDataComponent={[Function]}
  PaginationComponent={[Function]}
  columns={
    Array [
      Object {
        "Cell": [Function],
        "Header": "Name",
        "accessor": "name",
      },
      Object {
        "Header": "Age",
        "accessor": "age",
      },
    ]
  }
  data={
    Array [
      Object {
        "age": 26,
        "name": "Tanner Linsley",
      },
      Object {
        "age": 23,
        "name": "Jason Maurer",
      },
    ]
  }
  defaultPageSize={25}
  defaultSortDesc={false}
  defaultSorted={Array []}
  filterable={false}
  noDataText="No data found!"
  pageSizeOptions={
    Array [
      10,
      25,
      50,
      100,
    ]
  }
  showPageSizeOptions={false}
  showPagination={false}
  showPaginationBottom={true}
  showPaginationTop={true}
  sortable={true}
>
  <ReactTable
    AggregatedComponent={[Function]}
    ExpanderComponent={[Function]}
    FilterComponent={[Function]}
    LoadingComponent={[Function]}
    NoDataComponent={[Function]}
    PadRowComponent={[Function]}
    PaginationComponent={[Function]}
    PivotValueComponent={[Function]}
    ResizerComponent={[Function]}
    TableComponent={[Function]}
    TbodyComponent={[Function]}
    TdComponent={[Function]}
    TfootComponent={[Function]}
    ThComponent={[Function]}
    TheadComponent={[Function]}
    TrComponent={[Function]}
    TrGroupComponent={[Function]}
    aggregatedKey="_aggregated"
    className="sortable reactTable"
    collapseOnDataChange={true}
    collapseOnPageChange={true}
    collapseOnSortingChange={true}
    column={
      Object {
        "Aggregated": undefined,
        "Cell": undefined,
        "Expander": undefined,
        "Filter": undefined,
        "Footer": undefined,
        "Header": undefined,
        "Pivot": undefined,
        "PivotValue": undefined,
        "aggregate": undefined,
        "className": "",
        "filterAll": false,
        "filterMethod": undefined,
        "filterable": undefined,
        "footerClassName": "",
        "footerStyle": Object {},
        "getFooterProps": [Function],
        "getHeaderProps": [Function],
        "getProps": [Function],
        "headerClassName": "",
        "headerStyle": Object {},
        "minWidth": 100,
        "resizable": undefined,
        "show": true,
        "sortMethod": undefined,
        "sortable": undefined,
        "style": Object {},
      }
    }
    columns={
      Array [
        Object {
          "Cell": [Function],
          "Header": "Name",
          "accessor": "name",
        },
        Object {
          "Header": "Age",
          "accessor": "age",
        },
      ]
    }
    data={
      Array [
        Object {
          "age": 26,
          "name": "Tanner Linsley",
        },
        Object {
          "age": 23,
          "name": "Jason Maurer",
        },
      ]
    }
    defaultExpanded={Object {}}
    defaultFilterMethod={[Function]}
    defaultFiltered={Array []}
    defaultPageSize={25}
    defaultResized={Array []}
    defaultSortDesc={false}
    defaultSortMethod={[Function]}
    defaultSorted={Array []}
    expanderDefaults={
      Object {
        "filterable": false,
        "resizable": false,
        "sortable": false,
        "width": 35,
      }
    }
    filterable={false}
    freezeWhenExpanded={false}
    getLoadingProps={[Function]}
    getNoDataProps={[Function]}
    getPaginationProps={[Function]}
    getProps={[Function]}
    getResizerProps={[Function]}
    getTableProps={[Function]}
    getTbodyProps={[Function]}
    getTdProps={[Function]}
    getTfootProps={[Function]}
    getTfootTdProps={[Function]}
    getTfootTrProps={[Function]}
    getTheadFilterProps={[Function]}
    getTheadFilterThProps={[Function]}
    getTheadFilterTrProps={[Function]}
    getTheadGroupProps={[Function]}
    getTheadGroupThProps={[Function]}
    getTheadGroupTrProps={[Function]}
    getTheadProps={[Function]}
    getTheadThProps={[Function]}
    getTheadTrProps={[Function]}
    getTrGroupProps={[Function]}
    getTrProps={[Function]}
    groupedByPivotKey="_groupedByPivot"
    indexKey="_index"
    loading={false}
    loadingText="Loading..."
    minRows={0}
    multiSort={true}
    nestingLevelKey="_nestingLevel"
    nextText="Next"
    noDataText="No data found!"
    ofText="of"
    onFetchData={[Function]}
    originalKey="_original"
    pageSizeOptions={
      Array [
        10,
        25,
        50,
        100,
      ]
    }
    pageText="Page"
    pivotDefaults={Object {}}
    pivotIDKey="_pivotID"
    pivotValKey="_pivotVal"
    previousText="Previous"
    resizable={false}
    resolveData={[Function]}
    rowsText="rows"
    showPageJump={true}
    showPageSizeOptions={false}
    showPagination={false}
    showPaginationBottom={true}
    showPaginationTop={true}
    sortable={true}
    style={Object {}}
    subRowsKey="_subRows"
  >
    <div
      className="ReactTable sortable reactTable"
      style={Object {}}
    >
      <TableComponent
        className=""
      >
        <div
          className="rt-table"
          role="grid"
        >
          <Thead
            className="-header"
            style={
              Object {
                "minWidth": "200px",
              }
            }
          >
            <div
              className="rt-thead -header"
              style={
                Object {
                  "minWidth": "200px",
                }
              }
            >
              <TrComponent>
                <div
                  className="rt-tr"
                  role="row"
                >
                  <ThComponent
                    className=" -cursor-pointer"
                    key="0-name"
                    style={
                      Object {
                        "flex": "100 0 auto",
                        "maxWidth": null,
                        "width": "100px",
                      }
                    }
                    toggleSort={[Function]}
                  >
                    <div
                      className="rt-th  -cursor-pointer"
                      onClick={[Function]}
                      role="columnheader"
                      style={
                        Object {
                          "flex": "100 0 auto",
                          "maxWidth": null,
                          "width": "100px",
                        }
                      }
                      tabIndex="-1"
                    >
                      <div
                        className=""
                      >
                        Name
                      </div>
                    </div>
                  </ThComponent>
                  <ThComponent
                    className=" -cursor-pointer"
                    key="1-age"
                    style={
                      Object {
                        "flex": "100 0 auto",
                        "maxWidth": null,
                        "width": "100px",
                      }
                    }
                    toggleSort={[Function]}
                  >
                    <div
                      className="rt-th  -cursor-pointer"
                      onClick={[Function]}
                      role="columnheader"
                      style={
                        Object {
                          "flex": "100 0 auto",
                          "maxWidth": null,
                          "width": "100px",
                        }
                      }
                      tabIndex="-1"
                    >
                      <div
                        className=""
                      >
                        Age
                      </div>
                    </div>
                  </ThComponent>
                </div>
              </TrComponent>
            </div>
          </Thead>
          <Tbody
            className=""
            style={
              Object {
                "minWidth": "200px",
              }
            }
          >
            <div
              className="rt-tbody"
              style={
                Object {
                  "minWidth": "200px",
                }
              }
            >
              <TrGroupComponent
                key="0"
              >
                <div
                  className="rt-tr-group"
                  role="rowgroup"
                >
                  <TrComponent
                    className="-odd"
                  >
                    <div
                      className="rt-tr -odd"
                      role="row"
                    >
                      <TdComponent
                        className=""
                        key="0-name"
                        onClick={[Function]}
                        style={
                          Object {
                            "flex": "100 0 auto",
                            "maxWidth": null,
                            "width": "100px",
                          }
                        }
                      >
                        <div
                          className="rt-td"
                          onClick={[Function]}
                          role="gridcell"
                          style={
                            Object {
                              "flex": "100 0 auto",
                              "maxWidth": null,
                              "width": "100px",
                            }
                          }
                        >
                          <div>
                            Tanner Linsley
                             testing
                          </div>
                        </div>
                      </TdComponent>
                      <TdComponent
                        className=""
                        key="1-age"
                        onClick={[Function]}
                        style={
                          Object {
                            "flex": "100 0 auto",
                            "maxWidth": null,
                            "width": "100px",
                          }
                        }
                      >
                        <div
                          className="rt-td"
                          onClick={[Function]}
                          role="gridcell"
                          style={
                            Object {
                              "flex": "100 0 auto",
                              "maxWidth": null,
                              "width": "100px",
                            }
                          }
                        >
                          26
                        </div>
                      </TdComponent>
                    </div>
                  </TrComponent>
                </div>
              </TrGroupComponent>
              <TrGroupComponent
                key="1"
              >
                <div
                  className="rt-tr-group"
                  role="rowgroup"
                >
                  <TrComponent
                    className="-even"
                  >
                    <div
                      className="rt-tr -even"
                      role="row"
                    >
                      <TdComponent
                        className=""
                        key="0-name"
                        onClick={[Function]}
                        style={
                          Object {
                            "flex": "100 0 auto",
                            "maxWidth": null,
                            "width": "100px",
                          }
                        }
                      >
                        <div
                          className="rt-td"
                          onClick={[Function]}
                          role="gridcell"
                          style={
                            Object {
                              "flex": "100 0 auto",
                              "maxWidth": null,
                              "width": "100px",
                            }
                          }
                        >
                          <div>
                            Jason Maurer
                             testing
                          </div>
                        </div>
                      </TdComponent>
                      <TdComponent
                        className=""
                        key="1-age"
                        onClick={[Function]}
                        style={
                          Object {
                            "flex": "100 0 auto",
                            "maxWidth": null,
                            "width": "100px",
                          }
                        }
                      >
                        <div
                          className="rt-td"
                          onClick={[Function]}
                          role="gridcell"
                          style={
                            Object {
                              "flex": "100 0 auto",
                              "maxWidth": null,
                              "width": "100px",
                            }
                          }
                        >
                          23
                        </div>
                      </TdComponent>
                    </div>
                  </TrComponent>
                </div>
              </TrGroupComponent>
            </div>
          </Tbody>
        </div>
      </TableComponent>
      <LoadingComponent
        loading={false}
        loadingText="Loading..."
      >
        <div
          className="-loading"
        >
          <div
            className="-loading-inner"
          >
            Loading...
          </div>
        </div>
      </LoadingComponent>
    </div>
  </ReactTable>
</DataTable>
`;

exports[`<DataTable /> Renders a filterable DataTable 1`] = `
<DataTable
  NoDataComponent={[Function]}
  PaginationComponent={[Function]}
  columns={
    Array [
      Object {
        "Header": "Name",
        "accessor": "name",
      },
      Object {
        "Header": "Age",
        "accessor": "age",
      },
    ]
  }
  data={
    Array [
      Object {
        "age": 26,
        "name": "Tanner Linsley",
      },
      Object {
        "age": 23,
        "name": "Jason Maurer",
      },
    ]
  }
  defaultPageSize={25}
  defaultSortDesc={false}
  defaultSorted={Array []}
  filterable={true}
  noDataText="No data found!"
  pageSizeOptions={
    Array [
      10,
      25,
      50,
      100,
    ]
  }
  showPageSizeOptions={false}
  showPagination={false}
  showPaginationBottom={true}
  showPaginationTop={true}
  sortable={false}
>
  <ReactTable
    AggregatedComponent={[Function]}
    ExpanderComponent={[Function]}
    FilterComponent={[Function]}
    LoadingComponent={[Function]}
    NoDataComponent={[Function]}
    PadRowComponent={[Function]}
    PaginationComponent={[Function]}
    PivotValueComponent={[Function]}
    ResizerComponent={[Function]}
    TableComponent={[Function]}
    TbodyComponent={[Function]}
    TdComponent={[Function]}
    TfootComponent={[Function]}
    ThComponent={[Function]}
    TheadComponent={[Function]}
    TrComponent={[Function]}
    TrGroupComponent={[Function]}
    aggregatedKey="_aggregated"
    className="reactTable"
    collapseOnDataChange={true}
    collapseOnPageChange={true}
    collapseOnSortingChange={true}
    column={
      Object {
        "Aggregated": undefined,
        "Cell": undefined,
        "Expander": undefined,
        "Filter": undefined,
        "Footer": undefined,
        "Header": undefined,
        "Pivot": undefined,
        "PivotValue": undefined,
        "aggregate": undefined,
        "className": "",
        "filterAll": false,
        "filterMethod": undefined,
        "filterable": undefined,
        "footerClassName": "",
        "footerStyle": Object {},
        "getFooterProps": [Function],
        "getHeaderProps": [Function],
        "getProps": [Function],
        "headerClassName": "",
        "headerStyle": Object {},
        "minWidth": 100,
        "resizable": undefined,
        "show": true,
        "sortMethod": undefined,
        "sortable": undefined,
        "style": Object {},
      }
    }
    columns={
      Array [
        Object {
          "Header": "Name",
          "accessor": "name",
        },
        Object {
          "Header": "Age",
          "accessor": "age",
        },
      ]
    }
    data={
      Array [
        Object {
          "age": 26,
          "name": "Tanner Linsley",
        },
        Object {
          "age": 23,
          "name": "Jason Maurer",
        },
      ]
    }
    defaultExpanded={Object {}}
    defaultFilterMethod={[Function]}
    defaultFiltered={Array []}
    defaultPageSize={25}
    defaultResized={Array []}
    defaultSortDesc={false}
    defaultSortMethod={[Function]}
    defaultSorted={Array []}
    expanderDefaults={
      Object {
        "filterable": false,
        "resizable": false,
        "sortable": false,
        "width": 35,
      }
    }
    filterable={true}
    freezeWhenExpanded={false}
    getLoadingProps={[Function]}
    getNoDataProps={[Function]}
    getPaginationProps={[Function]}
    getProps={[Function]}
    getResizerProps={[Function]}
    getTableProps={[Function]}
    getTbodyProps={[Function]}
    getTdProps={[Function]}
    getTfootProps={[Function]}
    getTfootTdProps={[Function]}
    getTfootTrProps={[Function]}
    getTheadFilterProps={[Function]}
    getTheadFilterThProps={[Function]}
    getTheadFilterTrProps={[Function]}
    getTheadGroupProps={[Function]}
    getTheadGroupThProps={[Function]}
    getTheadGroupTrProps={[Function]}
    getTheadProps={[Function]}
    getTheadThProps={[Function]}
    getTheadTrProps={[Function]}
    getTrGroupProps={[Function]}
    getTrProps={[Function]}
    groupedByPivotKey="_groupedByPivot"
    indexKey="_index"
    loading={false}
    loadingText="Loading..."
    minRows={0}
    multiSort={true}
    nestingLevelKey="_nestingLevel"
    nextText="Next"
    noDataText="No data found!"
    ofText="of"
    onFetchData={[Function]}
    originalKey="_original"
    pageSizeOptions={
      Array [
        10,
        25,
        50,
        100,
      ]
    }
    pageText="Page"
    pivotDefaults={Object {}}
    pivotIDKey="_pivotID"
    pivotValKey="_pivotVal"
    previousText="Previous"
    resizable={false}
    resolveData={[Function]}
    rowsText="rows"
    showPageJump={true}
    showPageSizeOptions={false}
    showPagination={false}
    showPaginationBottom={true}
    showPaginationTop={true}
    sortable={false}
    style={Object {}}
    subRowsKey="_subRows"
  >
    <div
      className="ReactTable reactTable"
      style={Object {}}
    >
      <TableComponent
        className=""
      >
        <div
          className="rt-table"
          role="grid"
        >
          <Thead
            className="-header"
            style={
              Object {
                "minWidth": "200px",
              }
            }
          >
            <div
              className="rt-thead -header"
              style={
                Object {
                  "minWidth": "200px",
                }
              }
            >
              <TrComponent>
                <div
                  className="rt-tr"
                  role="row"
                >
                  <ThComponent
                    className=""
                    key="0-name"
                    style={
                      Object {
                        "flex": "100 0 auto",
                        "maxWidth": null,
                        "width": "100px",
                      }
                    }
                    toggleSort={[Function]}
                  >
                    <div
                      className="rt-th"
                      onClick={[Function]}
                      role="columnheader"
                      style={
                        Object {
                          "flex": "100 0 auto",
                          "maxWidth": null,
                          "width": "100px",
                        }
                      }
                      tabIndex="-1"
                    >
                      <div
                        className=""
                      >
                        Name
                      </div>
                    </div>
                  </ThComponent>
                  <ThComponent
                    className=""
                    key="1-age"
                    style={
                      Object {
                        "flex": "100 0 auto",
                        "maxWidth": null,
                        "width": "100px",
                      }
                    }
                    toggleSort={[Function]}
                  >
                    <div
                      className="rt-th"
                      onClick={[Function]}
                      role="columnheader"
                      style={
                        Object {
                          "flex": "100 0 auto",
                          "maxWidth": null,
                          "width": "100px",
                        }
                      }
                      tabIndex="-1"
                    >
                      <div
                        className=""
                      >
                        Age
                      </div>
                    </div>
                  </ThComponent>
                </div>
              </TrComponent>
            </div>
          </Thead>
          <Thead
            className="-filters"
            style={
              Object {
                "minWidth": "200px",
              }
            }
          >
            <div
              className="rt-thead -filters"
              style={
                Object {
                  "minWidth": "200px",
                }
              }
            >
              <TrComponent>
                <div
                  className="rt-tr"
                  role="row"
                >
                  <ThComponent
                    className=""
                    key="0-name"
                    style={
                      Object {
                        "flex": "100 0 auto",
                        "maxWidth": null,
                        "width": "100px",
                      }
                    }
                  >
                    <div
                      className="rt-th"
                      onClick={[Function]}
                      role="columnheader"
                      style={
                        Object {
                          "flex": "100 0 auto",
                          "maxWidth": null,
                          "width": "100px",
                        }
                      }
                      tabIndex="-1"
                    >
                      <input
                        onChange={[Function]}
                        style={
                          Object {
                            "width": "100%",
                          }
                        }
                        type="text"
                        value=""
                      />
                    </div>
                  </ThComponent>
                  <ThComponent
                    className=""
                    key="1-age"
                    style={
                      Object {
                        "flex": "100 0 auto",
                        "maxWidth": null,
                        "width": "100px",
                      }
                    }
                  >
                    <div
                      className="rt-th"
                      onClick={[Function]}
                      role="columnheader"
                      style={
                        Object {
                          "flex": "100 0 auto",
                          "maxWidth": null,
                          "width": "100px",
                        }
                      }
                      tabIndex="-1"
                    >
                      <input
                        onChange={[Function]}
                        style={
                          Object {
                            "width": "100%",
                          }
                        }
                        type="text"
                        value=""
                      />
                    </div>
                  </ThComponent>
                </div>
              </TrComponent>
            </div>
          </Thead>
          <Tbody
            className=""
            style={
              Object {
                "minWidth": "200px",
              }
            }
          >
            <div
              className="rt-tbody"
              style={
                Object {
                  "minWidth": "200px",
                }
              }
            >
              <TrGroupComponent
                key="0"
              >
                <div
                  className="rt-tr-group"
                  role="rowgroup"
                >
                  <TrComponent
                    className="-odd"
                  >
                    <div
                      className="rt-tr -odd"
                      role="row"
                    >
                      <TdComponent
                        className=""
                        key="0-name"
                        onClick={[Function]}
                        style={
                          Object {
                            "flex": "100 0 auto",
                            "maxWidth": null,
                            "width": "100px",
                          }
                        }
                      >
                        <div
                          className="rt-td"
                          onClick={[Function]}
                          role="gridcell"
                          style={
                            Object {
                              "flex": "100 0 auto",
                              "maxWidth": null,
                              "width": "100px",
                            }
                          }
                        >
                          Tanner Linsley
                        </div>
                      </TdComponent>
                      <TdComponent
                        className=""
                        key="1-age"
                        onClick={[Function]}
                        style={
                          Object {
                            "flex": "100 0 auto",
                            "maxWidth": null,
                            "width": "100px",
                          }
                        }
                      >
                        <div
                          className="rt-td"
                          onClick={[Function]}
                          role="gridcell"
                          style={
                            Object {
                              "flex": "100 0 auto",
                              "maxWidth": null,
                              "width": "100px",
                            }
                          }
                        >
                          26
                        </div>
                      </TdComponent>
                    </div>
                  </TrComponent>
                </div>
              </TrGroupComponent>
              <TrGroupComponent
                key="1"
              >
                <div
                  className="rt-tr-group"
                  role="rowgroup"
                >
                  <TrComponent
                    className="-even"
                  >
                    <div
                      className="rt-tr -even"
                      role="row"
                    >
                      <TdComponent
                        className=""
                        key="0-name"
                        onClick={[Function]}
                        style={
                          Object {
                            "flex": "100 0 auto",
                            "maxWidth": null,
                            "width": "100px",
                          }
                        }
                      >
                        <div
                          className="rt-td"
                          onClick={[Function]}
                          role="gridcell"
                          style={
                            Object {
                              "flex": "100 0 auto",
                              "maxWidth": null,
                              "width": "100px",
                            }
                          }
                        >
                          Jason Maurer
                        </div>
                      </TdComponent>
                      <TdComponent
                        className=""
                        key="1-age"
                        onClick={[Function]}
                        style={
                          Object {
                            "flex": "100 0 auto",
                            "maxWidth": null,
                            "width": "100px",
                          }
                        }
                      >
                        <div
                          className="rt-td"
                          onClick={[Function]}
                          role="gridcell"
                          style={
                            Object {
                              "flex": "100 0 auto",
                              "maxWidth": null,
                              "width": "100px",
                            }
                          }
                        >
                          23
                        </div>
                      </TdComponent>
                    </div>
                  </TrComponent>
                </div>
              </TrGroupComponent>
            </div>
          </Tbody>
        </div>
      </TableComponent>
      <LoadingComponent
        loading={false}
        loadingText="Loading..."
      >
        <div
          className="-loading"
        >
          <div
            className="-loading-inner"
          >
            Loading...
          </div>
        </div>
      </LoadingComponent>
    </div>
  </ReactTable>
</DataTable>
`;

exports[`<DataTable /> Renders a paginated DataTable 1`] = `
<DataTable
  NoDataComponent={[Function]}
  PaginationComponent={[Function]}
  columns={
    Array [
      Object {
        "Header": "Name",
        "accessor": "name",
      },
      Object {
        "Header": "Age",
        "accessor": "age",
      },
    ]
  }
  data={
    Array [
      Object {
        "age": "85",
        "name": "Doe Giacomelli",
      },
      Object {
        "age": "35",
        "name": "Sutherlan Caulfield",
      },
    ]
  }
  defaultPageSize={25}
  defaultSortDesc={false}
  defaultSorted={Array []}
  filterable={false}
  noDataText="No data found!"
  pageSizeOptions={
    Array [
      10,
      25,
      50,
      100,
    ]
  }
  showPageSizeOptions={true}
  showPagination={true}
  showPaginationBottom={true}
  showPaginationTop={true}
  sortable={false}
>
  <ReactTable
    AggregatedComponent={[Function]}
    ExpanderComponent={[Function]}
    FilterComponent={[Function]}
    LoadingComponent={[Function]}
    NoDataComponent={[Function]}
    PadRowComponent={[Function]}
    PaginationComponent={[Function]}
    PivotValueComponent={[Function]}
    ResizerComponent={[Function]}
    TableComponent={[Function]}
    TbodyComponent={[Function]}
    TdComponent={[Function]}
    TfootComponent={[Function]}
    ThComponent={[Function]}
    TheadComponent={[Function]}
    TrComponent={[Function]}
    TrGroupComponent={[Function]}
    aggregatedKey="_aggregated"
    className="reactTable"
    collapseOnDataChange={true}
    collapseOnPageChange={true}
    collapseOnSortingChange={true}
    column={
      Object {
        "Aggregated": undefined,
        "Cell": undefined,
        "Expander": undefined,
        "Filter": undefined,
        "Footer": undefined,
        "Header": undefined,
        "Pivot": undefined,
        "PivotValue": undefined,
        "aggregate": undefined,
        "className": "",
        "filterAll": false,
        "filterMethod": undefined,
        "filterable": undefined,
        "footerClassName": "",
        "footerStyle": Object {},
        "getFooterProps": [Function],
        "getHeaderProps": [Function],
        "getProps": [Function],
        "headerClassName": "",
        "headerStyle": Object {},
        "minWidth": 100,
        "resizable": undefined,
        "show": true,
        "sortMethod": undefined,
        "sortable": undefined,
        "style": Object {},
      }
    }
    columns={
      Array [
        Object {
          "Header": "Name",
          "accessor": "name",
        },
        Object {
          "Header": "Age",
          "accessor": "age",
        },
      ]
    }
    data={
      Array [
        Object {
          "age": "85",
          "name": "Doe Giacomelli",
        },
        Object {
          "age": "35",
          "name": "Sutherlan Caulfield",
        },
      ]
    }
    defaultExpanded={Object {}}
    defaultFilterMethod={[Function]}
    defaultFiltered={Array []}
    defaultPageSize={25}
    defaultResized={Array []}
    defaultSortDesc={false}
    defaultSortMethod={[Function]}
    defaultSorted={Array []}
    expanderDefaults={
      Object {
        "filterable": false,
        "resizable": false,
        "sortable": false,
        "width": 35,
      }
    }
    filterable={false}
    freezeWhenExpanded={false}
    getLoadingProps={[Function]}
    getNoDataProps={[Function]}
    getPaginationProps={[Function]}
    getProps={[Function]}
    getResizerProps={[Function]}
    getTableProps={[Function]}
    getTbodyProps={[Function]}
    getTdProps={[Function]}
    getTfootProps={[Function]}
    getTfootTdProps={[Function]}
    getTfootTrProps={[Function]}
    getTheadFilterProps={[Function]}
    getTheadFilterThProps={[Function]}
    getTheadFilterTrProps={[Function]}
    getTheadGroupProps={[Function]}
    getTheadGroupThProps={[Function]}
    getTheadGroupTrProps={[Function]}
    getTheadProps={[Function]}
    getTheadThProps={[Function]}
    getTheadTrProps={[Function]}
    getTrGroupProps={[Function]}
    getTrProps={[Function]}
    groupedByPivotKey="_groupedByPivot"
    indexKey="_index"
    loading={false}
    loadingText="Loading..."
    minRows={0}
    multiSort={true}
    nestingLevelKey="_nestingLevel"
    nextText="Next"
    noDataText="No data found!"
    ofText="of"
    onFetchData={[Function]}
    originalKey="_original"
    pageSizeOptions={
      Array [
        10,
        25,
        50,
        100,
      ]
    }
    pageText="Page"
    pivotDefaults={Object {}}
    pivotIDKey="_pivotID"
    pivotValKey="_pivotVal"
    previousText="Previous"
    resizable={false}
    resolveData={[Function]}
    rowsText="rows"
    showPageJump={true}
    showPageSizeOptions={true}
    showPagination={true}
    showPaginationBottom={true}
    showPaginationTop={true}
    sortable={false}
    style={Object {}}
    subRowsKey="_subRows"
  >
    <div
      className="ReactTable reactTable"
      style={Object {}}
    >
      <div
        className="pagination-top"
      >
        <ReactTablePagination
          AggregatedComponent={[Function]}
          ExpanderComponent={[Function]}
          FilterComponent={[Function]}
          LoadingComponent={[Function]}
          NoDataComponent={[Function]}
          PadRowComponent={[Function]}
          PaginationComponent={[Function]}
          PivotValueComponent={[Function]}
          ResizerComponent={[Function]}
          TableComponent={[Function]}
          TbodyComponent={[Function]}
          TdComponent={[Function]}
          TfootComponent={[Function]}
          ThComponent={[Function]}
          TheadComponent={[Function]}
          TrComponent={[Function]}
          TrGroupComponent={[Function]}
          aggregatedKey="_aggregated"
          allDecoratedColumns={
            Array [
              Object {
                "Aggregated": undefined,
                "Cell": undefined,
                "Expander": undefined,
                "Filter": undefined,
                "Footer": undefined,
                "Header": "Name",
                "Pivot": undefined,
                "PivotValue": undefined,
                "accessor": [Function],
                "aggregate": undefined,
                "className": "",
                "filterAll": false,
                "filterMethod": undefined,
                "filterable": undefined,
                "footerClassName": "",
                "footerStyle": Object {},
                "getFooterProps": [Function],
                "getHeaderProps": [Function],
                "getProps": [Function],
                "headerClassName": "",
                "headerStyle": Object {},
                "id": "name",
                "minWidth": 100,
                "resizable": undefined,
                "show": true,
                "sortMethod": undefined,
                "sortable": undefined,
                "style": Object {},
              },
              Object {
                "Aggregated": undefined,
                "Cell": undefined,
                "Expander": undefined,
                "Filter": undefined,
                "Footer": undefined,
                "Header": "Age",
                "Pivot": undefined,
                "PivotValue": undefined,
                "accessor": [Function],
                "aggregate": undefined,
                "className": "",
                "filterAll": false,
                "filterMethod": undefined,
                "filterable": undefined,
                "footerClassName": "",
                "footerStyle": Object {},
                "getFooterProps": [Function],
                "getHeaderProps": [Function],
                "getProps": [Function],
                "headerClassName": "",
                "headerStyle": Object {},
                "id": "age",
                "minWidth": 100,
                "resizable": undefined,
                "show": true,
                "sortMethod": undefined,
                "sortable": undefined,
                "style": Object {},
              },
            ]
          }
          allVisibleColumns={
            Array [
              Object {
                "Aggregated": undefined,
                "Cell": undefined,
                "Expander": undefined,
                "Filter": undefined,
                "Footer": undefined,
                "Header": "Name",
                "Pivot": undefined,
                "PivotValue": undefined,
                "accessor": [Function],
                "aggregate": undefined,
                "className": "",
                "filterAll": false,
                "filterMethod": undefined,
                "filterable": undefined,
                "footerClassName": "",
                "footerStyle": Object {},
                "getFooterProps": [Function],
                "getHeaderProps": [Function],
                "getProps": [Function],
                "headerClassName": "",
                "headerStyle": Object {},
                "id": "name",
                "minWidth": 100,
                "resizable": undefined,
                "show": true,
                "sortMethod": undefined,
                "sortable": undefined,
                "style": Object {},
              },
              Object {
                "Aggregated": undefined,
                "Cell": undefined,
                "Expander": undefined,
                "Filter": undefined,
                "Footer": undefined,
                "Header": "Age",
                "Pivot": undefined,
                "PivotValue": undefined,
                "accessor": [Function],
                "aggregate": undefined,
                "className": "",
                "filterAll": false,
                "filterMethod": undefined,
                "filterable": undefined,
                "footerClassName": "",
                "footerStyle": Object {},
                "getFooterProps": [Function],
                "getHeaderProps": [Function],
                "getProps": [Function],
                "headerClassName": "",
                "headerStyle": Object {},
                "id": "age",
                "minWidth": 100,
                "resizable": undefined,
                "show": true,
                "sortMethod": undefined,
                "sortable": undefined,
                "style": Object {},
              },
            ]
          }
          canNext={false}
          canPrevious={false}
          collapseOnDataChange={true}
          collapseOnPageChange={true}
          collapseOnSortingChange={true}
          column={
            Object {
              "Aggregated": undefined,
              "Cell": undefined,
              "Expander": undefined,
              "Filter": undefined,
              "Footer": undefined,
              "Header": undefined,
              "Pivot": undefined,
              "PivotValue": undefined,
              "aggregate": undefined,
              "className": "",
              "filterAll": false,
              "filterMethod": undefined,
              "filterable": undefined,
              "footerClassName": "",
              "footerStyle": Object {},
              "getFooterProps": [Function],
              "getHeaderProps": [Function],
              "getProps": [Function],
              "headerClassName": "",
              "headerStyle": Object {},
              "minWidth": 100,
              "resizable": undefined,
              "show": true,
              "sortMethod": undefined,
              "sortable": undefined,
              "style": Object {},
            }
          }
          columns={
            Array [
              Object {
                "Header": "Name",
                "accessor": "name",
              },
              Object {
                "Header": "Age",
                "accessor": "age",
              },
            ]
          }
          currentlyResizing={false}
          data={
            Array [
              Object {
                "age": "85",
                "name": "Doe Giacomelli",
              },
              Object {
                "age": "35",
                "name": "Sutherlan Caulfield",
              },
            ]
          }
          defaultExpanded={Object {}}
          defaultFilterMethod={[Function]}
          defaultFiltered={Array []}
          defaultPageSize={25}
          defaultResized={Array []}
          defaultSortDesc={false}
          defaultSortMethod={[Function]}
          defaultSorted={Array []}
          expanded={Object {}}
          expanderDefaults={
            Object {
              "filterable": false,
              "resizable": false,
              "sortable": false,
              "width": 35,
            }
          }
          filterable={false}
          filtered={Array []}
          freezeWhenExpanded={false}
          frozen={false}
          getLoadingProps={[Function]}
          getNoDataProps={[Function]}
          getPaginationProps={[Function]}
          getProps={[Function]}
          getResizerProps={[Function]}
          getTableProps={[Function]}
          getTbodyProps={[Function]}
          getTdProps={[Function]}
          getTfootProps={[Function]}
          getTfootTdProps={[Function]}
          getTfootTrProps={[Function]}
          getTheadFilterProps={[Function]}
          getTheadFilterThProps={[Function]}
          getTheadFilterTrProps={[Function]}
          getTheadGroupProps={[Function]}
          getTheadGroupThProps={[Function]}
          getTheadGroupTrProps={[Function]}
          getTheadProps={[Function]}
          getTheadThProps={[Function]}
          getTheadTrProps={[Function]}
          getTrGroupProps={[Function]}
          getTrProps={[Function]}
          groupedByPivotKey="_groupedByPivot"
          hasHeaderGroups={false}
          headerGroups={Array []}
          indexKey="_index"
          loading={false}
          loadingText="Loading..."
          minRows={0}
          multiSort={true}
          nestingLevelKey="_nestingLevel"
          nextText="Next"
          noDataText="No data found!"
          ofText="of"
          onFetchData={[Function]}
          onPageChange={[Function]}
          onPageSizeChange={[Function]}
          originalKey="_original"
          page={0}
          pageSize={25}
          pageSizeOptions={
            Array [
              10,
              25,
              50,
              100,
            ]
          }
          pageText="Page"
          pages={1}
          pivotDefaults={Object {}}
          pivotIDKey="_pivotID"
          pivotValKey="_pivotVal"
          previousText="Previous"
          resizable={false}
          resized={Array []}
          resolveData={[Function]}
          resolvedData={
            Array [
              Object {
                "_index": 0,
                "_nestingLevel": 0,
                "_original": Object {
                  "age": "85",
                  "name": "Doe Giacomelli",
                },
                "_subRows": undefined,
                "age": "85",
                "name": "Doe Giacomelli",
              },
              Object {
                "_index": 1,
                "_nestingLevel": 0,
                "_original": Object {
                  "age": "35",
                  "name": "Sutherlan Caulfield",
                },
                "_subRows": undefined,
                "age": "35",
                "name": "Sutherlan Caulfield",
              },
            ]
          }
          rowsText="rows"
          showPageJump={true}
          showPageSizeOptions={true}
          showPagination={true}
          showPaginationBottom={true}
          showPaginationTop={true}
          skipNextSort={false}
          sortable={false}
          sorted={Array []}
          sortedData={
            Array [
              Object {
                "_index": 0,
                "_nestingLevel": 0,
                "_original": Object {
                  "age": "85",
                  "name": "Doe Giacomelli",
                },
                "_subRows": undefined,
                "age": "85",
                "name": "Doe Giacomelli",
              },
              Object {
                "_index": 1,
                "_nestingLevel": 0,
                "_original": Object {
                  "age": "35",
                  "name": "Sutherlan Caulfield",
                },
                "_subRows": undefined,
                "age": "35",
                "name": "Sutherlan Caulfield",
              },
            ]
          }
          subRowsKey="_subRows"
        >
          <div
            className="-pagination"
          >
            <div
              className="page-details"
            >
              Showing 
              1
               to 
              2
               of 
              2
               entries
            </div>
            <span
              className="select-wrap -pageSizeOptions"
            >
              <label>
                Show 
                <select
                  onChange={[Function]}
                  value={25}
                >
                  <option
                    key="0"
                    value={10}
                  >
                    10
                  </option>
                  <option
                    key="1"
                    value={25}
                  >
                    25
                  </option>
                  <option
                    key="2"
                    value={50}
                  >
                    50
                  </option>
                  <option
                    key="3"
                    value={100}
                  >
                    100
                  </option>
                </select>
                 entries
              </label>
            </span>
            <div
              className="page-navigation"
            >
              <button
                className="-btn"
                disabled={true}
                onClick={[Function]}
                type="button"
              >
                Previous
              </button>
              <button
                className="current page-button -btn"
                key="1"
                onClick={[Function]}
              >
                1
              </button>
              <button
                className="-btn"
                disabled={true}
                onClick={[Function]}
                type="button"
              >
                Next
              </button>
            </div>
          </div>
        </ReactTablePagination>
      </div>
      <TableComponent
        className=""
      >
        <div
          className="rt-table"
          role="grid"
        >
          <Thead
            className="-header"
            style={
              Object {
                "minWidth": "200px",
              }
            }
          >
            <div
              className="rt-thead -header"
              style={
                Object {
                  "minWidth": "200px",
                }
              }
            >
              <TrComponent>
                <div
                  className="rt-tr"
                  role="row"
                >
                  <ThComponent
                    className=""
                    key="0-name"
                    style={
                      Object {
                        "flex": "100 0 auto",
                        "maxWidth": null,
                        "width": "100px",
                      }
                    }
                    toggleSort={[Function]}
                  >
                    <div
                      className="rt-th"
                      onClick={[Function]}
                      role="columnheader"
                      style={
                        Object {
                          "flex": "100 0 auto",
                          "maxWidth": null,
                          "width": "100px",
                        }
                      }
                      tabIndex="-1"
                    >
                      <div
                        className=""
                      >
                        Name
                      </div>
                    </div>
                  </ThComponent>
                  <ThComponent
                    className=""
                    key="1-age"
                    style={
                      Object {
                        "flex": "100 0 auto",
                        "maxWidth": null,
                        "width": "100px",
                      }
                    }
                    toggleSort={[Function]}
                  >
                    <div
                      className="rt-th"
                      onClick={[Function]}
                      role="columnheader"
                      style={
                        Object {
                          "flex": "100 0 auto",
                          "maxWidth": null,
                          "width": "100px",
                        }
                      }
                      tabIndex="-1"
                    >
                      <div
                        className=""
                      >
                        Age
                      </div>
                    </div>
                  </ThComponent>
                </div>
              </TrComponent>
            </div>
          </Thead>
          <Tbody
            className=""
            style={
              Object {
                "minWidth": "200px",
              }
            }
          >
            <div
              className="rt-tbody"
              style={
                Object {
                  "minWidth": "200px",
                }
              }
            >
              <TrGroupComponent
                key="0"
              >
                <div
                  className="rt-tr-group"
                  role="rowgroup"
                >
                  <TrComponent
                    className="-odd"
                  >
                    <div
                      className="rt-tr -odd"
                      role="row"
                    >
                      <TdComponent
                        className=""
                        key="0-name"
                        onClick={[Function]}
                        style={
                          Object {
                            "flex": "100 0 auto",
                            "maxWidth": null,
                            "width": "100px",
                          }
                        }
                      >
                        <div
                          className="rt-td"
                          onClick={[Function]}
                          role="gridcell"
                          style={
                            Object {
                              "flex": "100 0 auto",
                              "maxWidth": null,
                              "width": "100px",
                            }
                          }
                        >
                          Doe Giacomelli
                        </div>
                      </TdComponent>
                      <TdComponent
                        className=""
                        key="1-age"
                        onClick={[Function]}
                        style={
                          Object {
                            "flex": "100 0 auto",
                            "maxWidth": null,
                            "width": "100px",
                          }
                        }
                      >
                        <div
                          className="rt-td"
                          onClick={[Function]}
                          role="gridcell"
                          style={
                            Object {
                              "flex": "100 0 auto",
                              "maxWidth": null,
                              "width": "100px",
                            }
                          }
                        >
                          85
                        </div>
                      </TdComponent>
                    </div>
                  </TrComponent>
                </div>
              </TrGroupComponent>
              <TrGroupComponent
                key="1"
              >
                <div
                  className="rt-tr-group"
                  role="rowgroup"
                >
                  <TrComponent
                    className="-even"
                  >
                    <div
                      className="rt-tr -even"
                      role="row"
                    >
                      <TdComponent
                        className=""
                        key="0-name"
                        onClick={[Function]}
                        style={
                          Object {
                            "flex": "100 0 auto",
                            "maxWidth": null,
                            "width": "100px",
                          }
                        }
                      >
                        <div
                          className="rt-td"
                          onClick={[Function]}
                          role="gridcell"
                          style={
                            Object {
                              "flex": "100 0 auto",
                              "maxWidth": null,
                              "width": "100px",
                            }
                          }
                        >
                          Sutherlan Caulfield
                        </div>
                      </TdComponent>
                      <TdComponent
                        className=""
                        key="1-age"
                        onClick={[Function]}
                        style={
                          Object {
                            "flex": "100 0 auto",
                            "maxWidth": null,
                            "width": "100px",
                          }
                        }
                      >
                        <div
                          className="rt-td"
                          onClick={[Function]}
                          role="gridcell"
                          style={
                            Object {
                              "flex": "100 0 auto",
                              "maxWidth": null,
                              "width": "100px",
                            }
                          }
                        >
                          35
                        </div>
                      </TdComponent>
                    </div>
                  </TrComponent>
                </div>
              </TrGroupComponent>
            </div>
          </Tbody>
        </div>
      </TableComponent>
      <div
        className="pagination-bottom"
      >
        <ReactTablePagination
          AggregatedComponent={[Function]}
          ExpanderComponent={[Function]}
          FilterComponent={[Function]}
          LoadingComponent={[Function]}
          NoDataComponent={[Function]}
          PadRowComponent={[Function]}
          PaginationComponent={[Function]}
          PivotValueComponent={[Function]}
          ResizerComponent={[Function]}
          TableComponent={[Function]}
          TbodyComponent={[Function]}
          TdComponent={[Function]}
          TfootComponent={[Function]}
          ThComponent={[Function]}
          TheadComponent={[Function]}
          TrComponent={[Function]}
          TrGroupComponent={[Function]}
          aggregatedKey="_aggregated"
          allDecoratedColumns={
            Array [
              Object {
                "Aggregated": undefined,
                "Cell": undefined,
                "Expander": undefined,
                "Filter": undefined,
                "Footer": undefined,
                "Header": "Name",
                "Pivot": undefined,
                "PivotValue": undefined,
                "accessor": [Function],
                "aggregate": undefined,
                "className": "",
                "filterAll": false,
                "filterMethod": undefined,
                "filterable": undefined,
                "footerClassName": "",
                "footerStyle": Object {},
                "getFooterProps": [Function],
                "getHeaderProps": [Function],
                "getProps": [Function],
                "headerClassName": "",
                "headerStyle": Object {},
                "id": "name",
                "minWidth": 100,
                "resizable": undefined,
                "show": true,
                "sortMethod": undefined,
                "sortable": undefined,
                "style": Object {},
              },
              Object {
                "Aggregated": undefined,
                "Cell": undefined,
                "Expander": undefined,
                "Filter": undefined,
                "Footer": undefined,
                "Header": "Age",
                "Pivot": undefined,
                "PivotValue": undefined,
                "accessor": [Function],
                "aggregate": undefined,
                "className": "",
                "filterAll": false,
                "filterMethod": undefined,
                "filterable": undefined,
                "footerClassName": "",
                "footerStyle": Object {},
                "getFooterProps": [Function],
                "getHeaderProps": [Function],
                "getProps": [Function],
                "headerClassName": "",
                "headerStyle": Object {},
                "id": "age",
                "minWidth": 100,
                "resizable": undefined,
                "show": true,
                "sortMethod": undefined,
                "sortable": undefined,
                "style": Object {},
              },
            ]
          }
          allVisibleColumns={
            Array [
              Object {
                "Aggregated": undefined,
                "Cell": undefined,
                "Expander": undefined,
                "Filter": undefined,
                "Footer": undefined,
                "Header": "Name",
                "Pivot": undefined,
                "PivotValue": undefined,
                "accessor": [Function],
                "aggregate": undefined,
                "className": "",
                "filterAll": false,
                "filterMethod": undefined,
                "filterable": undefined,
                "footerClassName": "",
                "footerStyle": Object {},
                "getFooterProps": [Function],
                "getHeaderProps": [Function],
                "getProps": [Function],
                "headerClassName": "",
                "headerStyle": Object {},
                "id": "name",
                "minWidth": 100,
                "resizable": undefined,
                "show": true,
                "sortMethod": undefined,
                "sortable": undefined,
                "style": Object {},
              },
              Object {
                "Aggregated": undefined,
                "Cell": undefined,
                "Expander": undefined,
                "Filter": undefined,
                "Footer": undefined,
                "Header": "Age",
                "Pivot": undefined,
                "PivotValue": undefined,
                "accessor": [Function],
                "aggregate": undefined,
                "className": "",
                "filterAll": false,
                "filterMethod": undefined,
                "filterable": undefined,
                "footerClassName": "",
                "footerStyle": Object {},
                "getFooterProps": [Function],
                "getHeaderProps": [Function],
                "getProps": [Function],
                "headerClassName": "",
                "headerStyle": Object {},
                "id": "age",
                "minWidth": 100,
                "resizable": undefined,
                "show": true,
                "sortMethod": undefined,
                "sortable": undefined,
                "style": Object {},
              },
            ]
          }
          canNext={false}
          canPrevious={false}
          collapseOnDataChange={true}
          collapseOnPageChange={true}
          collapseOnSortingChange={true}
          column={
            Object {
              "Aggregated": undefined,
              "Cell": undefined,
              "Expander": undefined,
              "Filter": undefined,
              "Footer": undefined,
              "Header": undefined,
              "Pivot": undefined,
              "PivotValue": undefined,
              "aggregate": undefined,
              "className": "",
              "filterAll": false,
              "filterMethod": undefined,
              "filterable": undefined,
              "footerClassName": "",
              "footerStyle": Object {},
              "getFooterProps": [Function],
              "getHeaderProps": [Function],
              "getProps": [Function],
              "headerClassName": "",
              "headerStyle": Object {},
              "minWidth": 100,
              "resizable": undefined,
              "show": true,
              "sortMethod": undefined,
              "sortable": undefined,
              "style": Object {},
            }
          }
          columns={
            Array [
              Object {
                "Header": "Name",
                "accessor": "name",
              },
              Object {
                "Header": "Age",
                "accessor": "age",
              },
            ]
          }
          currentlyResizing={false}
          data={
            Array [
              Object {
                "age": "85",
                "name": "Doe Giacomelli",
              },
              Object {
                "age": "35",
                "name": "Sutherlan Caulfield",
              },
            ]
          }
          defaultExpanded={Object {}}
          defaultFilterMethod={[Function]}
          defaultFiltered={Array []}
          defaultPageSize={25}
          defaultResized={Array []}
          defaultSortDesc={false}
          defaultSortMethod={[Function]}
          defaultSorted={Array []}
          expanded={Object {}}
          expanderDefaults={
            Object {
              "filterable": false,
              "resizable": false,
              "sortable": false,
              "width": 35,
            }
          }
          filterable={false}
          filtered={Array []}
          freezeWhenExpanded={false}
          frozen={false}
          getLoadingProps={[Function]}
          getNoDataProps={[Function]}
          getPaginationProps={[Function]}
          getProps={[Function]}
          getResizerProps={[Function]}
          getTableProps={[Function]}
          getTbodyProps={[Function]}
          getTdProps={[Function]}
          getTfootProps={[Function]}
          getTfootTdProps={[Function]}
          getTfootTrProps={[Function]}
          getTheadFilterProps={[Function]}
          getTheadFilterThProps={[Function]}
          getTheadFilterTrProps={[Function]}
          getTheadGroupProps={[Function]}
          getTheadGroupThProps={[Function]}
          getTheadGroupTrProps={[Function]}
          getTheadProps={[Function]}
          getTheadThProps={[Function]}
          getTheadTrProps={[Function]}
          getTrGroupProps={[Function]}
          getTrProps={[Function]}
          groupedByPivotKey="_groupedByPivot"
          hasHeaderGroups={false}
          headerGroups={Array []}
          indexKey="_index"
          loading={false}
          loadingText="Loading..."
          minRows={0}
          multiSort={true}
          nestingLevelKey="_nestingLevel"
          nextText="Next"
          noDataText="No data found!"
          ofText="of"
          onFetchData={[Function]}
          onPageChange={[Function]}
          onPageSizeChange={[Function]}
          originalKey="_original"
          page={0}
          pageSize={25}
          pageSizeOptions={
            Array [
              10,
              25,
              50,
              100,
            ]
          }
          pageText="Page"
          pages={1}
          pivotDefaults={Object {}}
          pivotIDKey="_pivotID"
          pivotValKey="_pivotVal"
          previousText="Previous"
          resizable={false}
          resized={Array []}
          resolveData={[Function]}
          resolvedData={
            Array [
              Object {
                "_index": 0,
                "_nestingLevel": 0,
                "_original": Object {
                  "age": "85",
                  "name": "Doe Giacomelli",
                },
                "_subRows": undefined,
                "age": "85",
                "name": "Doe Giacomelli",
              },
              Object {
                "_index": 1,
                "_nestingLevel": 0,
                "_original": Object {
                  "age": "35",
                  "name": "Sutherlan Caulfield",
                },
                "_subRows": undefined,
                "age": "35",
                "name": "Sutherlan Caulfield",
              },
            ]
          }
          rowsText="rows"
          showPageJump={true}
          showPageSizeOptions={true}
          showPagination={true}
          showPaginationBottom={true}
          showPaginationTop={true}
          skipNextSort={false}
          sortable={false}
          sorted={Array []}
          sortedData={
            Array [
              Object {
                "_index": 0,
                "_nestingLevel": 0,
                "_original": Object {
                  "age": "85",
                  "name": "Doe Giacomelli",
                },
                "_subRows": undefined,
                "age": "85",
                "name": "Doe Giacomelli",
              },
              Object {
                "_index": 1,
                "_nestingLevel": 0,
                "_original": Object {
                  "age": "35",
                  "name": "Sutherlan Caulfield",
                },
                "_subRows": undefined,
                "age": "35",
                "name": "Sutherlan Caulfield",
              },
            ]
          }
          subRowsKey="_subRows"
        >
          <div
            className="-pagination"
          >
            <div
              className="page-details"
            >
              Showing 
              1
               to 
              2
               of 
              2
               entries
            </div>
            <span
              className="select-wrap -pageSizeOptions"
            >
              <label>
                Show 
                <select
                  onChange={[Function]}
                  value={25}
                >
                  <option
                    key="0"
                    value={10}
                  >
                    10
                  </option>
                  <option
                    key="1"
                    value={25}
                  >
                    25
                  </option>
                  <option
                    key="2"
                    value={50}
                  >
                    50
                  </option>
                  <option
                    key="3"
                    value={100}
                  >
                    100
                  </option>
                </select>
                 entries
              </label>
            </span>
            <div
              className="page-navigation"
            >
              <button
                className="-btn"
                disabled={true}
                onClick={[Function]}
                type="button"
              >
                Previous
              </button>
              <button
                className="current page-button -btn"
                key="1"
                onClick={[Function]}
              >
                1
              </button>
              <button
                className="-btn"
                disabled={true}
                onClick={[Function]}
                type="button"
              >
                Next
              </button>
            </div>
          </div>
        </ReactTablePagination>
      </div>
      <LoadingComponent
        loading={false}
        loadingText="Loading..."
      >
        <div
          className="-loading"
        >
          <div
            className="-loading-inner"
          >
            Loading...
          </div>
        </div>
      </LoadingComponent>
    </div>
  </ReactTable>
</DataTable>
`;

exports[`<DataTable /> Renders a sortable DataTable 1`] = `
<DataTable
  NoDataComponent={[Function]}
  PaginationComponent={[Function]}
  columns={
    Array [
      Object {
        "Header": "Name",
        "accessor": "name",
      },
      Object {
        "Header": "Age",
        "accessor": "age",
      },
    ]
  }
  data={
    Array [
      Object {
        "age": 26,
        "name": "Tanner Linsley",
      },
      Object {
        "age": 23,
        "name": "Jason Maurer",
      },
    ]
  }
  defaultPageSize={25}
  defaultSortDesc={false}
  defaultSorted={Array []}
  filterable={false}
  noDataText="No data found!"
  pageSizeOptions={
    Array [
      10,
      25,
      50,
      100,
    ]
  }
  showPageSizeOptions={false}
  showPagination={false}
  showPaginationBottom={true}
  showPaginationTop={true}
  sortable={true}
>
  <ReactTable
    AggregatedComponent={[Function]}
    ExpanderComponent={[Function]}
    FilterComponent={[Function]}
    LoadingComponent={[Function]}
    NoDataComponent={[Function]}
    PadRowComponent={[Function]}
    PaginationComponent={[Function]}
    PivotValueComponent={[Function]}
    ResizerComponent={[Function]}
    TableComponent={[Function]}
    TbodyComponent={[Function]}
    TdComponent={[Function]}
    TfootComponent={[Function]}
    ThComponent={[Function]}
    TheadComponent={[Function]}
    TrComponent={[Function]}
    TrGroupComponent={[Function]}
    aggregatedKey="_aggregated"
    className="sortable reactTable"
    collapseOnDataChange={true}
    collapseOnPageChange={true}
    collapseOnSortingChange={true}
    column={
      Object {
        "Aggregated": undefined,
        "Cell": undefined,
        "Expander": undefined,
        "Filter": undefined,
        "Footer": undefined,
        "Header": undefined,
        "Pivot": undefined,
        "PivotValue": undefined,
        "aggregate": undefined,
        "className": "",
        "filterAll": false,
        "filterMethod": undefined,
        "filterable": undefined,
        "footerClassName": "",
        "footerStyle": Object {},
        "getFooterProps": [Function],
        "getHeaderProps": [Function],
        "getProps": [Function],
        "headerClassName": "",
        "headerStyle": Object {},
        "minWidth": 100,
        "resizable": undefined,
        "show": true,
        "sortMethod": undefined,
        "sortable": undefined,
        "style": Object {},
      }
    }
    columns={
      Array [
        Object {
          "Header": "Name",
          "accessor": "name",
        },
        Object {
          "Header": "Age",
          "accessor": "age",
        },
      ]
    }
    data={
      Array [
        Object {
          "age": 26,
          "name": "Tanner Linsley",
        },
        Object {
          "age": 23,
          "name": "Jason Maurer",
        },
      ]
    }
    defaultExpanded={Object {}}
    defaultFilterMethod={[Function]}
    defaultFiltered={Array []}
    defaultPageSize={25}
    defaultResized={Array []}
    defaultSortDesc={false}
    defaultSortMethod={[Function]}
    defaultSorted={Array []}
    expanderDefaults={
      Object {
        "filterable": false,
        "resizable": false,
        "sortable": false,
        "width": 35,
      }
    }
    filterable={false}
    freezeWhenExpanded={false}
    getLoadingProps={[Function]}
    getNoDataProps={[Function]}
    getPaginationProps={[Function]}
    getProps={[Function]}
    getResizerProps={[Function]}
    getTableProps={[Function]}
    getTbodyProps={[Function]}
    getTdProps={[Function]}
    getTfootProps={[Function]}
    getTfootTdProps={[Function]}
    getTfootTrProps={[Function]}
    getTheadFilterProps={[Function]}
    getTheadFilterThProps={[Function]}
    getTheadFilterTrProps={[Function]}
    getTheadGroupProps={[Function]}
    getTheadGroupThProps={[Function]}
    getTheadGroupTrProps={[Function]}
    getTheadProps={[Function]}
    getTheadThProps={[Function]}
    getTheadTrProps={[Function]}
    getTrGroupProps={[Function]}
    getTrProps={[Function]}
    groupedByPivotKey="_groupedByPivot"
    indexKey="_index"
    loading={false}
    loadingText="Loading..."
    minRows={0}
    multiSort={true}
    nestingLevelKey="_nestingLevel"
    nextText="Next"
    noDataText="No data found!"
    ofText="of"
    onFetchData={[Function]}
    originalKey="_original"
    pageSizeOptions={
      Array [
        10,
        25,
        50,
        100,
      ]
    }
    pageText="Page"
    pivotDefaults={Object {}}
    pivotIDKey="_pivotID"
    pivotValKey="_pivotVal"
    previousText="Previous"
    resizable={false}
    resolveData={[Function]}
    rowsText="rows"
    showPageJump={true}
    showPageSizeOptions={false}
    showPagination={false}
    showPaginationBottom={true}
    showPaginationTop={true}
    sortable={true}
    style={Object {}}
    subRowsKey="_subRows"
  >
    <div
      className="ReactTable sortable reactTable"
      style={Object {}}
    >
      <TableComponent
        className=""
      >
        <div
          className="rt-table"
          role="grid"
        >
          <Thead
            className="-header"
            style={
              Object {
                "minWidth": "200px",
              }
            }
          >
            <div
              className="rt-thead -header"
              style={
                Object {
                  "minWidth": "200px",
                }
              }
            >
              <TrComponent>
                <div
                  className="rt-tr"
                  role="row"
                >
                  <ThComponent
                    className=" -cursor-pointer"
                    key="0-name"
                    style={
                      Object {
                        "flex": "100 0 auto",
                        "maxWidth": null,
                        "width": "100px",
                      }
                    }
                    toggleSort={[Function]}
                  >
                    <div
                      className="rt-th  -cursor-pointer"
                      onClick={[Function]}
                      role="columnheader"
                      style={
                        Object {
                          "flex": "100 0 auto",
                          "maxWidth": null,
                          "width": "100px",
                        }
                      }
                      tabIndex="-1"
                    >
                      <div
                        className=""
                      >
                        Name
                      </div>
                    </div>
                  </ThComponent>
                  <ThComponent
                    className=" -cursor-pointer"
                    key="1-age"
                    style={
                      Object {
                        "flex": "100 0 auto",
                        "maxWidth": null,
                        "width": "100px",
                      }
                    }
                    toggleSort={[Function]}
                  >
                    <div
                      className="rt-th  -cursor-pointer"
                      onClick={[Function]}
                      role="columnheader"
                      style={
                        Object {
                          "flex": "100 0 auto",
                          "maxWidth": null,
                          "width": "100px",
                        }
                      }
                      tabIndex="-1"
                    >
                      <div
                        className=""
                      >
                        Age
                      </div>
                    </div>
                  </ThComponent>
                </div>
              </TrComponent>
            </div>
          </Thead>
          <Tbody
            className=""
            style={
              Object {
                "minWidth": "200px",
              }
            }
          >
            <div
              className="rt-tbody"
              style={
                Object {
                  "minWidth": "200px",
                }
              }
            >
              <TrGroupComponent
                key="0"
              >
                <div
                  className="rt-tr-group"
                  role="rowgroup"
                >
                  <TrComponent
                    className="-odd"
                  >
                    <div
                      className="rt-tr -odd"
                      role="row"
                    >
                      <TdComponent
                        className=""
                        key="0-name"
                        onClick={[Function]}
                        style={
                          Object {
                            "flex": "100 0 auto",
                            "maxWidth": null,
                            "width": "100px",
                          }
                        }
                      >
                        <div
                          className="rt-td"
                          onClick={[Function]}
                          role="gridcell"
                          style={
                            Object {
                              "flex": "100 0 auto",
                              "maxWidth": null,
                              "width": "100px",
                            }
                          }
                        >
                          Tanner Linsley
                        </div>
                      </TdComponent>
                      <TdComponent
                        className=""
                        key="1-age"
                        onClick={[Function]}
                        style={
                          Object {
                            "flex": "100 0 auto",
                            "maxWidth": null,
                            "width": "100px",
                          }
                        }
                      >
                        <div
                          className="rt-td"
                          onClick={[Function]}
                          role="gridcell"
                          style={
                            Object {
                              "flex": "100 0 auto",
                              "maxWidth": null,
                              "width": "100px",
                            }
                          }
                        >
                          26
                        </div>
                      </TdComponent>
                    </div>
                  </TrComponent>
                </div>
              </TrGroupComponent>
              <TrGroupComponent
                key="1"
              >
                <div
                  className="rt-tr-group"
                  role="rowgroup"
                >
                  <TrComponent
                    className="-even"
                  >
                    <div
                      className="rt-tr -even"
                      role="row"
                    >
                      <TdComponent
                        className=""
                        key="0-name"
                        onClick={[Function]}
                        style={
                          Object {
                            "flex": "100 0 auto",
                            "maxWidth": null,
                            "width": "100px",
                          }
                        }
                      >
                        <div
                          className="rt-td"
                          onClick={[Function]}
                          role="gridcell"
                          style={
                            Object {
                              "flex": "100 0 auto",
                              "maxWidth": null,
                              "width": "100px",
                            }
                          }
                        >
                          Jason Maurer
                        </div>
                      </TdComponent>
                      <TdComponent
                        className=""
                        key="1-age"
                        onClick={[Function]}
                        style={
                          Object {
                            "flex": "100 0 auto",
                            "maxWidth": null,
                            "width": "100px",
                          }
                        }
                      >
                        <div
                          className="rt-td"
                          onClick={[Function]}
                          role="gridcell"
                          style={
                            Object {
                              "flex": "100 0 auto",
                              "maxWidth": null,
                              "width": "100px",
                            }
                          }
                        >
                          23
                        </div>
                      </TdComponent>
                    </div>
                  </TrComponent>
                </div>
              </TrGroupComponent>
            </div>
          </Tbody>
        </div>
      </TableComponent>
      <LoadingComponent
        loading={false}
        loadingText="Loading..."
      >
        <div
          className="-loading"
        >
          <div
            className="-loading-inner"
          >
            Loading...
          </div>
        </div>
      </LoadingComponent>
    </div>
  </ReactTable>
</DataTable>
`;

exports[`<DataTable /> Renders a sorted DataTable 1`] = `
<DataTable
  NoDataComponent={[Function]}
  PaginationComponent={[Function]}
  columns={
    Array [
      Object {
        "Header": "Name",
        "accessor": "name",
      },
      Object {
        "Header": "Age",
        "accessor": "age",
      },
    ]
  }
  data={
    Array [
      Object {
        "age": 26,
        "name": "Tanner Linsley",
      },
      Object {
        "age": 23,
        "name": "Jason Maurer",
      },
    ]
  }
  defaultPageSize={25}
  defaultSortDesc={false}
  defaultSorted={
    Array [
      Object {
        "desc": true,
        "id": "age",
      },
    ]
  }
  filterable={false}
  noDataText="No data found!"
  pageSizeOptions={
    Array [
      10,
      25,
      50,
      100,
    ]
  }
  showPageSizeOptions={false}
  showPagination={false}
  showPaginationBottom={true}
  showPaginationTop={true}
  sortable={false}
>
  <ReactTable
    AggregatedComponent={[Function]}
    ExpanderComponent={[Function]}
    FilterComponent={[Function]}
    LoadingComponent={[Function]}
    NoDataComponent={[Function]}
    PadRowComponent={[Function]}
    PaginationComponent={[Function]}
    PivotValueComponent={[Function]}
    ResizerComponent={[Function]}
    TableComponent={[Function]}
    TbodyComponent={[Function]}
    TdComponent={[Function]}
    TfootComponent={[Function]}
    ThComponent={[Function]}
    TheadComponent={[Function]}
    TrComponent={[Function]}
    TrGroupComponent={[Function]}
    aggregatedKey="_aggregated"
    className="reactTable"
    collapseOnDataChange={true}
    collapseOnPageChange={true}
    collapseOnSortingChange={true}
    column={
      Object {
        "Aggregated": undefined,
        "Cell": undefined,
        "Expander": undefined,
        "Filter": undefined,
        "Footer": undefined,
        "Header": undefined,
        "Pivot": undefined,
        "PivotValue": undefined,
        "aggregate": undefined,
        "className": "",
        "filterAll": false,
        "filterMethod": undefined,
        "filterable": undefined,
        "footerClassName": "",
        "footerStyle": Object {},
        "getFooterProps": [Function],
        "getHeaderProps": [Function],
        "getProps": [Function],
        "headerClassName": "",
        "headerStyle": Object {},
        "minWidth": 100,
        "resizable": undefined,
        "show": true,
        "sortMethod": undefined,
        "sortable": undefined,
        "style": Object {},
      }
    }
    columns={
      Array [
        Object {
          "Header": "Name",
          "accessor": "name",
        },
        Object {
          "Header": "Age",
          "accessor": "age",
        },
      ]
    }
    data={
      Array [
        Object {
          "age": 26,
          "name": "Tanner Linsley",
        },
        Object {
          "age": 23,
          "name": "Jason Maurer",
        },
      ]
    }
    defaultExpanded={Object {}}
    defaultFilterMethod={[Function]}
    defaultFiltered={Array []}
    defaultPageSize={25}
    defaultResized={Array []}
    defaultSortDesc={false}
    defaultSortMethod={[Function]}
    defaultSorted={
      Array [
        Object {
          "desc": true,
          "id": "age",
        },
      ]
    }
    expanderDefaults={
      Object {
        "filterable": false,
        "resizable": false,
        "sortable": false,
        "width": 35,
      }
    }
    filterable={false}
    freezeWhenExpanded={false}
    getLoadingProps={[Function]}
    getNoDataProps={[Function]}
    getPaginationProps={[Function]}
    getProps={[Function]}
    getResizerProps={[Function]}
    getTableProps={[Function]}
    getTbodyProps={[Function]}
    getTdProps={[Function]}
    getTfootProps={[Function]}
    getTfootTdProps={[Function]}
    getTfootTrProps={[Function]}
    getTheadFilterProps={[Function]}
    getTheadFilterThProps={[Function]}
    getTheadFilterTrProps={[Function]}
    getTheadGroupProps={[Function]}
    getTheadGroupThProps={[Function]}
    getTheadGroupTrProps={[Function]}
    getTheadProps={[Function]}
    getTheadThProps={[Function]}
    getTheadTrProps={[Function]}
    getTrGroupProps={[Function]}
    getTrProps={[Function]}
    groupedByPivotKey="_groupedByPivot"
    indexKey="_index"
    loading={false}
    loadingText="Loading..."
    minRows={0}
    multiSort={true}
    nestingLevelKey="_nestingLevel"
    nextText="Next"
    noDataText="No data found!"
    ofText="of"
    onFetchData={[Function]}
    originalKey="_original"
    pageSizeOptions={
      Array [
        10,
        25,
        50,
        100,
      ]
    }
    pageText="Page"
    pivotDefaults={Object {}}
    pivotIDKey="_pivotID"
    pivotValKey="_pivotVal"
    previousText="Previous"
    resizable={false}
    resolveData={[Function]}
    rowsText="rows"
    showPageJump={true}
    showPageSizeOptions={false}
    showPagination={false}
    showPaginationBottom={true}
    showPaginationTop={true}
    sortable={false}
    style={Object {}}
    subRowsKey="_subRows"
  >
    <div
      className="ReactTable reactTable"
      style={Object {}}
    >
      <TableComponent
        className=""
      >
        <div
          className="rt-table"
          role="grid"
        >
          <Thead
            className="-header"
            style={
              Object {
                "minWidth": "200px",
              }
            }
          >
            <div
              className="rt-thead -header"
              style={
                Object {
                  "minWidth": "200px",
                }
              }
            >
              <TrComponent>
                <div
                  className="rt-tr"
                  role="row"
                >
                  <ThComponent
                    className=""
                    key="0-name"
                    style={
                      Object {
                        "flex": "100 0 auto",
                        "maxWidth": null,
                        "width": "100px",
                      }
                    }
                    toggleSort={[Function]}
                  >
                    <div
                      className="rt-th"
                      onClick={[Function]}
                      role="columnheader"
                      style={
                        Object {
                          "flex": "100 0 auto",
                          "maxWidth": null,
                          "width": "100px",
                        }
                      }
                      tabIndex="-1"
                    >
                      <div
                        className=""
                      >
                        Name
                      </div>
                    </div>
                  </ThComponent>
                  <ThComponent
                    className=" -sort-desc"
                    key="1-age"
                    style={
                      Object {
                        "flex": "100 0 auto",
                        "maxWidth": null,
                        "width": "100px",
                      }
                    }
                    toggleSort={[Function]}
                  >
                    <div
                      className="rt-th  -sort-desc"
                      onClick={[Function]}
                      role="columnheader"
                      style={
                        Object {
                          "flex": "100 0 auto",
                          "maxWidth": null,
                          "width": "100px",
                        }
                      }
                      tabIndex="-1"
                    >
                      <div
                        className=""
                      >
                        Age
                      </div>
                    </div>
                  </ThComponent>
                </div>
              </TrComponent>
            </div>
          </Thead>
          <Tbody
            className=""
            style={
              Object {
                "minWidth": "200px",
              }
            }
          >
            <div
              className="rt-tbody"
              style={
                Object {
                  "minWidth": "200px",
                }
              }
            >
              <TrGroupComponent
                key="0"
              >
                <div
                  className="rt-tr-group"
                  role="rowgroup"
                >
                  <TrComponent
                    className="-odd"
                  >
                    <div
                      className="rt-tr -odd"
                      role="row"
                    >
                      <TdComponent
                        className=""
                        key="0-name"
                        onClick={[Function]}
                        style={
                          Object {
                            "flex": "100 0 auto",
                            "maxWidth": null,
                            "width": "100px",
                          }
                        }
                      >
                        <div
                          className="rt-td"
                          onClick={[Function]}
                          role="gridcell"
                          style={
                            Object {
                              "flex": "100 0 auto",
                              "maxWidth": null,
                              "width": "100px",
                            }
                          }
                        >
                          Tanner Linsley
                        </div>
                      </TdComponent>
                      <TdComponent
                        className=""
                        key="1-age"
                        onClick={[Function]}
                        style={
                          Object {
                            "flex": "100 0 auto",
                            "maxWidth": null,
                            "width": "100px",
                          }
                        }
                      >
                        <div
                          className="rt-td"
                          onClick={[Function]}
                          role="gridcell"
                          style={
                            Object {
                              "flex": "100 0 auto",
                              "maxWidth": null,
                              "width": "100px",
                            }
                          }
                        >
                          26
                        </div>
                      </TdComponent>
                    </div>
                  </TrComponent>
                </div>
              </TrGroupComponent>
              <TrGroupComponent
                key="1"
              >
                <div
                  className="rt-tr-group"
                  role="rowgroup"
                >
                  <TrComponent
                    className="-even"
                  >
                    <div
                      className="rt-tr -even"
                      role="row"
                    >
                      <TdComponent
                        className=""
                        key="0-name"
                        onClick={[Function]}
                        style={
                          Object {
                            "flex": "100 0 auto",
                            "maxWidth": null,
                            "width": "100px",
                          }
                        }
                      >
                        <div
                          className="rt-td"
                          onClick={[Function]}
                          role="gridcell"
                          style={
                            Object {
                              "flex": "100 0 auto",
                              "maxWidth": null,
                              "width": "100px",
                            }
                          }
                        >
                          Jason Maurer
                        </div>
                      </TdComponent>
                      <TdComponent
                        className=""
                        key="1-age"
                        onClick={[Function]}
                        style={
                          Object {
                            "flex": "100 0 auto",
                            "maxWidth": null,
                            "width": "100px",
                          }
                        }
                      >
                        <div
                          className="rt-td"
                          onClick={[Function]}
                          role="gridcell"
                          style={
                            Object {
                              "flex": "100 0 auto",
                              "maxWidth": null,
                              "width": "100px",
                            }
                          }
                        >
                          23
                        </div>
                      </TdComponent>
                    </div>
                  </TrComponent>
                </div>
              </TrGroupComponent>
            </div>
          </Tbody>
        </div>
      </TableComponent>
      <LoadingComponent
        loading={false}
        loadingText="Loading..."
      >
        <div
          className="-loading"
        >
          <div
            className="-loading-inner"
          >
            Loading...
          </div>
        </div>
      </LoadingComponent>
    </div>
  </ReactTable>
</DataTable>
`;

exports[`<DataTable /> Renders an empty DataTable 1`] = `
<DataTable
  NoDataComponent={[Function]}
  PaginationComponent={[Function]}
  columns={
    Array [
      Object {
        "Header": "Name",
        "accessor": "name",
      },
      Object {
        "Header": "Age",
        "accessor": "age",
      },
    ]
  }
  data={Array []}
  defaultPageSize={25}
  defaultSortDesc={false}
  defaultSorted={Array []}
  filterable={false}
  noDataText="No data found!"
  pageSizeOptions={
    Array [
      10,
      25,
      50,
      100,
    ]
  }
  showPageSizeOptions={false}
  showPagination={false}
  showPaginationBottom={true}
  showPaginationTop={true}
  sortable={false}
>
  <ReactTable
    AggregatedComponent={[Function]}
    ExpanderComponent={[Function]}
    FilterComponent={[Function]}
    LoadingComponent={[Function]}
    NoDataComponent={[Function]}
    PadRowComponent={[Function]}
    PaginationComponent={[Function]}
    PivotValueComponent={[Function]}
    ResizerComponent={[Function]}
    TableComponent={[Function]}
    TbodyComponent={[Function]}
    TdComponent={[Function]}
    TfootComponent={[Function]}
    ThComponent={[Function]}
    TheadComponent={[Function]}
    TrComponent={[Function]}
    TrGroupComponent={[Function]}
    aggregatedKey="_aggregated"
    className="reactTable"
    collapseOnDataChange={true}
    collapseOnPageChange={true}
    collapseOnSortingChange={true}
    column={
      Object {
        "Aggregated": undefined,
        "Cell": undefined,
        "Expander": undefined,
        "Filter": undefined,
        "Footer": undefined,
        "Header": undefined,
        "Pivot": undefined,
        "PivotValue": undefined,
        "aggregate": undefined,
        "className": "",
        "filterAll": false,
        "filterMethod": undefined,
        "filterable": undefined,
        "footerClassName": "",
        "footerStyle": Object {},
        "getFooterProps": [Function],
        "getHeaderProps": [Function],
        "getProps": [Function],
        "headerClassName": "",
        "headerStyle": Object {},
        "minWidth": 100,
        "resizable": undefined,
        "show": true,
        "sortMethod": undefined,
        "sortable": undefined,
        "style": Object {},
      }
    }
    columns={
      Array [
        Object {
          "Header": "Name",
          "accessor": "name",
        },
        Object {
          "Header": "Age",
          "accessor": "age",
        },
      ]
    }
    data={Array []}
    defaultExpanded={Object {}}
    defaultFilterMethod={[Function]}
    defaultFiltered={Array []}
    defaultPageSize={25}
    defaultResized={Array []}
    defaultSortDesc={false}
    defaultSortMethod={[Function]}
    defaultSorted={Array []}
    expanderDefaults={
      Object {
        "filterable": false,
        "resizable": false,
        "sortable": false,
        "width": 35,
      }
    }
    filterable={false}
    freezeWhenExpanded={false}
    getLoadingProps={[Function]}
    getNoDataProps={[Function]}
    getPaginationProps={[Function]}
    getProps={[Function]}
    getResizerProps={[Function]}
    getTableProps={[Function]}
    getTbodyProps={[Function]}
    getTdProps={[Function]}
    getTfootProps={[Function]}
    getTfootTdProps={[Function]}
    getTfootTrProps={[Function]}
    getTheadFilterProps={[Function]}
    getTheadFilterThProps={[Function]}
    getTheadFilterTrProps={[Function]}
    getTheadGroupProps={[Function]}
    getTheadGroupThProps={[Function]}
    getTheadGroupTrProps={[Function]}
    getTheadProps={[Function]}
    getTheadThProps={[Function]}
    getTheadTrProps={[Function]}
    getTrGroupProps={[Function]}
    getTrProps={[Function]}
    groupedByPivotKey="_groupedByPivot"
    indexKey="_index"
    loading={false}
    loadingText="Loading..."
    minRows={0}
    multiSort={true}
    nestingLevelKey="_nestingLevel"
    nextText="Next"
    noDataText="No data found!"
    ofText="of"
    onFetchData={[Function]}
    originalKey="_original"
    pageSizeOptions={
      Array [
        10,
        25,
        50,
        100,
      ]
    }
    pageText="Page"
    pivotDefaults={Object {}}
    pivotIDKey="_pivotID"
    pivotValKey="_pivotVal"
    previousText="Previous"
    resizable={false}
    resolveData={[Function]}
    rowsText="rows"
    showPageJump={true}
    showPageSizeOptions={false}
    showPagination={false}
    showPaginationBottom={true}
    showPaginationTop={true}
    sortable={false}
    style={Object {}}
    subRowsKey="_subRows"
  >
    <div
      className="ReactTable reactTable"
      style={Object {}}
    >
      <TableComponent
        className=""
      >
        <div
          className="rt-table"
          role="grid"
        >
          <Thead
            className="-header"
            style={
              Object {
                "minWidth": "200px",
              }
            }
          >
            <div
              className="rt-thead -header"
              style={
                Object {
                  "minWidth": "200px",
                }
              }
            >
              <TrComponent>
                <div
                  className="rt-tr"
                  role="row"
                >
                  <ThComponent
                    className=""
                    key="0-name"
                    style={
                      Object {
                        "flex": "100 0 auto",
                        "maxWidth": null,
                        "width": "100px",
                      }
                    }
                    toggleSort={[Function]}
                  >
                    <div
                      className="rt-th"
                      onClick={[Function]}
                      role="columnheader"
                      style={
                        Object {
                          "flex": "100 0 auto",
                          "maxWidth": null,
                          "width": "100px",
                        }
                      }
                      tabIndex="-1"
                    >
                      <div
                        className=""
                      >
                        Name
                      </div>
                    </div>
                  </ThComponent>
                  <ThComponent
                    className=""
                    key="1-age"
                    style={
                      Object {
                        "flex": "100 0 auto",
                        "maxWidth": null,
                        "width": "100px",
                      }
                    }
                    toggleSort={[Function]}
                  >
                    <div
                      className="rt-th"
                      onClick={[Function]}
                      role="columnheader"
                      style={
                        Object {
                          "flex": "100 0 auto",
                          "maxWidth": null,
                          "width": "100px",
                        }
                      }
                      tabIndex="-1"
                    >
                      <div
                        className=""
                      >
                        Age
                      </div>
                    </div>
                  </ThComponent>
                </div>
              </TrComponent>
            </div>
          </Thead>
          <Tbody
            className=""
            style={
              Object {
                "minWidth": "200px",
              }
            }
          >
            <div
              className="rt-tbody"
              style={
                Object {
                  "minWidth": "200px",
                }
              }
            />
          </Tbody>
        </div>
      </TableComponent>
      <NoDataComponent>
        <Callout
          justifyCenter={false}
          messages={Array []}
          shouldFocus={false}
          type="no-data"
        >
          <div
            className="callout no-data"
          >
            <div
              className="content"
            >
              No data found!
            </div>
          </div>
        </Callout>
      </NoDataComponent>
      <LoadingComponent
        loading={false}
        loadingText="Loading..."
      >
        <div
          className="-loading"
        >
          <div
            className="-loading-inner"
          >
            Loading...
          </div>
        </div>
      </LoadingComponent>
    </div>
  </ReactTable>
</DataTable>
`;
