// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Heading /> should render a h1 element with type 'page' 1`] = `
.c0 {
  font-family: 'Open Sans',Arial,sans-serif;
  display: block;
}

<class_1
  type="page"
>
  <Skeleton
    className=""
    skeletonOptions={
      Object {
        "shape": "line",
        "showSkeleton": false,
        "size": "large",
      }
    }
    type="page"
  >
    <HeadingComponent
      isInline={false}
      isSubtitle={false}
      type="page"
    >
      <styled.h1
        className="heading"
        isInline={false}
        isSubtitle={false}
        tag={[Function]}
      >
        <h1
          className="heading c0"
        >
          Hello I am a h1
        </h1>
      </styled.h1>
    </HeadingComponent>
  </Skeleton>
</class_1>
`;

exports[`<Heading /> should render a h2 element with type 'section' 1`] = `
.c0 {
  font-family: 'Open Sans',Arial,sans-serif;
  display: block;
}

<class_1
  type="section"
>
  <Skeleton
    className=""
    skeletonOptions={
      Object {
        "shape": "line",
        "showSkeleton": false,
        "size": "large",
      }
    }
    type="section"
  >
    <HeadingComponent
      isInline={false}
      isSubtitle={false}
      type="section"
    >
      <styled.h2
        className="heading"
        isInline={false}
        isSubtitle={false}
        tag={[Function]}
      >
        <h2
          className="heading c0"
        >
          Hello I am a h2
        </h2>
      </styled.h2>
    </HeadingComponent>
  </Skeleton>
</class_1>
`;

exports[`<Heading /> should render a h3 element with type 'subsection' 1`] = `
.c0 {
  font-family: 'Open Sans',Arial,sans-serif;
  display: block;
}

<class_1
  type="subsection"
>
  <Skeleton
    className=""
    skeletonOptions={
      Object {
        "shape": "line",
        "showSkeleton": false,
        "size": "large",
      }
    }
    type="subsection"
  >
    <HeadingComponent
      isInline={false}
      isSubtitle={false}
      type="subsection"
    >
      <styled.h3
        className="heading"
        isInline={false}
        isSubtitle={false}
        tag={[Function]}
      >
        <h3
          className="heading c0"
        >
          Hello I am a h3
        </h3>
      </styled.h3>
    </HeadingComponent>
  </Skeleton>
</class_1>
`;

exports[`<Heading /> should render a skeleton element if skeletonOptions are passed to the component 1`] = `
.c0 {
  font-family: 'Open Sans',Arial,sans-serif;
  display: block;
}

<class_1
  type="page"
>
  <Skeleton
    className=""
    skeletonOptions={
      Object {
        "shape": "line",
        "showSkeleton": false,
        "size": "large",
      }
    }
    type="page"
  >
    <HeadingComponent
      isInline={false}
      isSubtitle={false}
      type="page"
    >
      <styled.h1
        className="heading"
        isInline={false}
        isSubtitle={false}
        tag={[Function]}
      >
        <h1
          className="heading c0"
        >
          Hello, world!
        </h1>
      </styled.h1>
    </HeadingComponent>
  </Skeleton>
</class_1>
`;

exports[`<Heading /> should render a subtitle p element 1`] = `
.c0 {
  font-family: 'Open Sans',Arial,sans-serif;
  display: block;
  color: hsl(210,13.4%,47.2%);
  font-size: 1.125rem;
}

<class_1
  isSubtitle={true}
>
  <Skeleton
    className=""
    isSubtitle={true}
    skeletonOptions={
      Object {
        "shape": "line",
        "showSkeleton": false,
        "size": "large",
      }
    }
  >
    <HeadingComponent
      isInline={false}
      isSubtitle={true}
    >
      <styled.p
        className="heading"
        isInline={false}
        isSubtitle={true}
        tag={[Function]}
      >
        <p
          className="heading c0"
        >
          Hello I am a subtitle
        </p>
      </styled.p>
    </HeadingComponent>
  </Skeleton>
</class_1>
`;

exports[`<Heading /> should render two inline h1 elements 1`] = `
Array [
  .c0 {
  font-family: 'Open Sans',Arial,sans-serif;
  display: inline-block;
}

<class_1
    isInline={true}
    type="page"
  >
    <Skeleton
      className=""
      isInline={true}
      skeletonOptions={
        Object {
          "shape": "line",
          "showSkeleton": false,
          "size": "large",
        }
      }
      type="page"
    >
      <HeadingComponent
        isInline={true}
        isSubtitle={false}
        type="page"
      >
        <styled.h1
          className="heading"
          isInline={true}
          isSubtitle={false}
          tag={[Function]}
        >
          <h1
            className="heading c0"
          >
            Hello I am a h1
          </h1>
        </styled.h1>
      </HeadingComponent>
    </Skeleton>
  </class_1>,
  .c0 {
  font-family: 'Open Sans',Arial,sans-serif;
  display: inline-block;
}

<class_1
    isInline={true}
    type="page"
  >
    <Skeleton
      className=""
      isInline={true}
      skeletonOptions={
        Object {
          "shape": "line",
          "showSkeleton": false,
          "size": "large",
        }
      }
      type="page"
    >
      <HeadingComponent
        isInline={true}
        isSubtitle={false}
        type="page"
      >
        <styled.h1
          className="heading"
          isInline={true}
          isSubtitle={false}
          tag={[Function]}
        >
          <h1
            className="heading c0"
          >
            Hello I am a h1
          </h1>
        </styled.h1>
      </HeadingComponent>
    </Skeleton>
  </class_1>,
]
`;
